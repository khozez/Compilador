   0  $accept : programa $end

   1  programa : '{' cuerpoPrograma '}'
   2           | '{' '}'
   3           | cuerpoPrograma '}'
   4           | '{' cuerpoPrograma

   5  cuerpoPrograma : cuerpoPrograma sentencia

   6  sentencia : sentenciaDeclarativa
   7            | sentenciaEjecutable ','

   8  declaracionClase : CLASS ID '{' cuerpoClase '}'
   9                   | CLASS ID ','
  10                   | CLASS ID

  11  cuerpoClase : seccionClase

  12  seccionClase : seccionClase seccionAtributos
  13               | seccionClase declaracionMetodo ','
  14               | declaracionMetodo ','
  15               | seccionAtributos

  16  referenciaClase : ID '.' referenciaClase
  17                  | ID '.' asignacion
  18                  | ID '.' invocacionMetodo

  19  seccionAtributos : tipo ID ';' listaAtributos
  20                   | ID ','
  21                   | tipo ID ','
  22                   | tipo ID

  23  listaAtributos : ID ';' listaAtributos
  24                 | ID ','
  25                 | ID

  26  sentenciaEjecutable : asignacion
  27                      | sentenciaIf
  28                      | sentenciaWhile
  29                      | print
  30                      | invocacionMetodo
  31                      | referenciaClase

  32  sentenciaDeclarativa : declaracionFuncion
  33                       | declaracion ','
  34                       | declaracionClase

  35  sentenciaDeclarativaMetodo : declaracionFuncion
  36                             | declaracion ','

  37  asignacion : ID '=' expresion
  38             | ID IGUAL expresion

  39  sentenciaIf : IF '(' expresion comparador expresion ')' '{' bloque_ejecucion '}' ELSE '{' bloque_ejecucion '}' END_IF
  40              | IF '(' expresion comparador expresion ')' '{' bloque_ejecucion '}' ELSE '{' bloque_ejecucion '}'
  41              | IF '(' expresion comparador expresion ')' '{' bloque_ejecucion '}' END_IF
  42              | IF '(' expresion comparador expresion ')' '{' bloque_ejecucion '}'
  43              | IF '(' expresion comparador expresion ')' sentenciaEjecutable ',' ELSE sentenciaEjecutable ',' END_IF
  44              | IF '(' expresion comparador expresion ')' sentenciaEjecutable ',' ELSE '{' bloque_ejecucion '}' END_IF
  45              | IF '(' expresion comparador expresion ')' sentenciaEjecutable ',' END_IF

  46  sentenciaIfRetorno : IF '(' expresion comparador expresion ')' '{' bloque_ejecucion return '}' ELSE '{' bloque_ejecucion return ',' '}' END_IF
  47                     | IF '(' expresion comparador expresion ')' '{' bloque_ejecucion return '}' ELSE '{' bloque_ejecucion return ',' '}'
  48                     | IF '(' expresion comparador expresion ')' '{' bloque_ejecucion return '}' END_IF
  49                     | IF '(' expresion comparador expresion ')' '{' bloque_ejecucion return '}'
  50                     | IF '(' expresion comparador expresion ')' return ',' ELSE sentenciaEjecutable ',' END_IF
  51                     | IF '(' expresion comparador expresion ')' return ',' ELSE '{' bloque_ejecucion return ',' '}' END_IF
  52                     | IF '(' expresion comparador expresion ')' return ',' END_IF

  53  bloque_ejecucion : bloque_ejecucion sentenciaEjecutable ','
  54                   | sentenciaEjecutable ','
  55                   | sentenciaDeclarativa

  56  sentenciaWhile : WHILE '(' expresion comparador expresion ')' DO '{' bloque_ejecucion '}'
  57                 | WHILE '(' expresion comparador expresion ')' DO sentenciaEjecutable
  58                 | WHILE '(' expresion comparador ')' DO '{' bloque_ejecucion '}'
  59                 | WHILE '(' expresion comparador ')' DO sentenciaEjecutable

  60  print : PRINT CADENA
  61        | CADENA

  62  return : RETURN

  63  declaracionMetodo : VOID ID '(' tipo ID ')' '{' cuerpoMetodo '}'
  64                    | VOID ID '(' ')' '{' cuerpoMetodo '}'

  65  declaracionFuncion : VOID ID '(' tipo ID ')' '{' cuerpoMetodo '}'
  66                     | VOID ID '(' ID ')' '{' cuerpoMetodo '}'
  67                     | VOID ID '(' ')' '{' cuerpoMetodo '}'

  68  cuerpoMetodo : listaSentenciasMetodo return ','
  69               | sentenciaIfRetorno ',' listaSentenciasMetodo
  70               | listaSentenciasMetodo sentenciaIfRetorno ','
  71               | listaSentenciasMetodo
  72               | sentenciaIfRetorno ','

  73  listaSentenciasMetodo : listaSentenciasMetodo sentenciaDeclarativaMetodo
  74                        | listaSentenciasMetodo sentenciaEjecutable ','
  75                        | sentenciaDeclarativaMetodo
  76                        | sentenciaEjecutable ','

  77  invocacionMetodo : ID '(' expresion ')'
  78                   | ID '(' ')'
  79                   | ID '(' asignacion ')'
  80                   | ID '(' tipo asignacion ')'

  81  declaracion : tipo listaDeclaracion
  82              | tipo asignacion

  83  listaDeclaracion : ID ';' listaDeclaracion
  84                   | ID

  85  tipo : SHORT
  86       | ULONG
  87       | FLOAT
  88       | ID

  89  expresion : termino
  90            | expresion '+' termino
  91            | expresion '-' termino

  92  termino : factor
  93          | termino '*' factor
  94          | termino '/' factor

  95  factor : ID
  96         | ID MENOSMENOS
  97         | CTE
  98         | '-' CTE
  99         | '(' expresion ')'

 100  comparador : MAYORIGUAL
 101             | MENORIGUAL
 102             | IGUAL
 103             | DISTINTO
 104             | '<'
 105             | '>'
 106             | '='

state 0
	$accept : . programa $end  (0)

	'{'  shift 1
	.  error

	programa  goto 2
	cuerpoPrograma  goto 3


state 1
	programa : '{' . cuerpoPrograma '}'  (1)
	programa : '{' . '}'  (2)
	programa : '{' . cuerpoPrograma  (4)

	'}'  shift 4
	.  error

	cuerpoPrograma  goto 5


state 2
	$accept : programa . $end  (0)

	$end  accept


state 3
	programa : cuerpoPrograma . '}'  (3)
	cuerpoPrograma : cuerpoPrograma . sentencia  (5)

	ID  shift 6
	CADENA  shift 7
	CLASS  shift 8
	IF  shift 9
	PRINT  shift 10
	VOID  shift 11
	SHORT  shift 12
	ULONG  shift 13
	FLOAT  shift 14
	WHILE  shift 15
	'}'  shift 16
	.  error

	sentencia  goto 17
	sentenciaDeclarativa  goto 18
	sentenciaEjecutable  goto 19
	declaracionClase  goto 20
	referenciaClase  goto 21
	asignacion  goto 22
	invocacionMetodo  goto 23
	tipo  goto 24
	sentenciaIf  goto 25
	sentenciaWhile  goto 26
	print  goto 27
	declaracionFuncion  goto 28
	declaracion  goto 29


state 4
	programa : '{' '}' .  (2)

	.  reduce 2


state 5
	programa : '{' cuerpoPrograma . '}'  (1)
	programa : '{' cuerpoPrograma .  (4)
	cuerpoPrograma : cuerpoPrograma . sentencia  (5)

	ID  shift 6
	CADENA  shift 7
	CLASS  shift 8
	IF  shift 9
	PRINT  shift 10
	VOID  shift 11
	SHORT  shift 12
	ULONG  shift 13
	FLOAT  shift 14
	WHILE  shift 15
	'}'  shift 30
	$end  reduce 4

	sentencia  goto 17
	sentenciaDeclarativa  goto 18
	sentenciaEjecutable  goto 19
	declaracionClase  goto 20
	referenciaClase  goto 21
	asignacion  goto 22
	invocacionMetodo  goto 23
	tipo  goto 24
	sentenciaIf  goto 25
	sentenciaWhile  goto 26
	print  goto 27
	declaracionFuncion  goto 28
	declaracion  goto 29


state 6
	referenciaClase : ID . '.' referenciaClase  (16)
	referenciaClase : ID . '.' asignacion  (17)
	referenciaClase : ID . '.' invocacionMetodo  (18)
	asignacion : ID . '=' expresion  (37)
	asignacion : ID . IGUAL expresion  (38)
	invocacionMetodo : ID . '(' expresion ')'  (77)
	invocacionMetodo : ID . '(' ')'  (78)
	invocacionMetodo : ID . '(' asignacion ')'  (79)
	invocacionMetodo : ID . '(' tipo asignacion ')'  (80)
	tipo : ID .  (88)

	IGUAL  shift 31
	'.'  shift 32
	'='  shift 33
	'('  shift 34
	ID  reduce 88


state 7
	print : CADENA .  (61)

	.  reduce 61


state 8
	declaracionClase : CLASS . ID '{' cuerpoClase '}'  (8)
	declaracionClase : CLASS . ID ','  (9)
	declaracionClase : CLASS . ID  (10)

	ID  shift 35
	.  error


state 9
	sentenciaIf : IF . '(' expresion comparador expresion ')' '{' bloque_ejecucion '}' ELSE '{' bloque_ejecucion '}' END_IF  (39)
	sentenciaIf : IF . '(' expresion comparador expresion ')' '{' bloque_ejecucion '}' ELSE '{' bloque_ejecucion '}'  (40)
	sentenciaIf : IF . '(' expresion comparador expresion ')' '{' bloque_ejecucion '}' END_IF  (41)
	sentenciaIf : IF . '(' expresion comparador expresion ')' '{' bloque_ejecucion '}'  (42)
	sentenciaIf : IF . '(' expresion comparador expresion ')' sentenciaEjecutable ',' ELSE sentenciaEjecutable ',' END_IF  (43)
	sentenciaIf : IF . '(' expresion comparador expresion ')' sentenciaEjecutable ',' ELSE '{' bloque_ejecucion '}' END_IF  (44)
	sentenciaIf : IF . '(' expresion comparador expresion ')' sentenciaEjecutable ',' END_IF  (45)

	'('  shift 36
	.  error


state 10
	print : PRINT . CADENA  (60)

	CADENA  shift 37
	.  error


state 11
	declaracionFuncion : VOID . ID '(' tipo ID ')' '{' cuerpoMetodo '}'  (65)
	declaracionFuncion : VOID . ID '(' ID ')' '{' cuerpoMetodo '}'  (66)
	declaracionFuncion : VOID . ID '(' ')' '{' cuerpoMetodo '}'  (67)

	ID  shift 38
	.  error


state 12
	tipo : SHORT .  (85)

	.  reduce 85


state 13
	tipo : ULONG .  (86)

	.  reduce 86


state 14
	tipo : FLOAT .  (87)

	.  reduce 87


state 15
	sentenciaWhile : WHILE . '(' expresion comparador expresion ')' DO '{' bloque_ejecucion '}'  (56)
	sentenciaWhile : WHILE . '(' expresion comparador expresion ')' DO sentenciaEjecutable  (57)
	sentenciaWhile : WHILE . '(' expresion comparador ')' DO '{' bloque_ejecucion '}'  (58)
	sentenciaWhile : WHILE . '(' expresion comparador ')' DO sentenciaEjecutable  (59)

	'('  shift 39
	.  error


state 16
	programa : cuerpoPrograma '}' .  (3)

	.  reduce 3


state 17
	cuerpoPrograma : cuerpoPrograma sentencia .  (5)

	.  reduce 5


state 18
	sentencia : sentenciaDeclarativa .  (6)

	.  reduce 6


state 19
	sentencia : sentenciaEjecutable . ','  (7)

	','  shift 40
	.  error


state 20
	sentenciaDeclarativa : declaracionClase .  (34)

	.  reduce 34


state 21
	sentenciaEjecutable : referenciaClase .  (31)

	.  reduce 31


state 22
	sentenciaEjecutable : asignacion .  (26)

	.  reduce 26


state 23
	sentenciaEjecutable : invocacionMetodo .  (30)

	.  reduce 30


state 24
	declaracion : tipo . listaDeclaracion  (81)
	declaracion : tipo . asignacion  (82)

	ID  shift 41
	.  error

	asignacion  goto 42
	listaDeclaracion  goto 43


state 25
	sentenciaEjecutable : sentenciaIf .  (27)

	.  reduce 27


state 26
	sentenciaEjecutable : sentenciaWhile .  (28)

	.  reduce 28


state 27
	sentenciaEjecutable : print .  (29)

	.  reduce 29


state 28
	sentenciaDeclarativa : declaracionFuncion .  (32)

	.  reduce 32


state 29
	sentenciaDeclarativa : declaracion . ','  (33)

	','  shift 44
	.  error


state 30
	programa : '{' cuerpoPrograma '}' .  (1)

	.  reduce 1


state 31
	asignacion : ID IGUAL . expresion  (38)

	ID  shift 45
	CTE  shift 46
	'-'  shift 47
	'('  shift 48
	.  error

	expresion  goto 49
	termino  goto 50
	factor  goto 51


state 32
	referenciaClase : ID '.' . referenciaClase  (16)
	referenciaClase : ID '.' . asignacion  (17)
	referenciaClase : ID '.' . invocacionMetodo  (18)

	ID  shift 52
	.  error

	referenciaClase  goto 53
	asignacion  goto 54
	invocacionMetodo  goto 55


state 33
	asignacion : ID '=' . expresion  (37)

	ID  shift 45
	CTE  shift 46
	'-'  shift 47
	'('  shift 48
	.  error

	expresion  goto 56
	termino  goto 50
	factor  goto 51


state 34
	invocacionMetodo : ID '(' . expresion ')'  (77)
	invocacionMetodo : ID '(' . ')'  (78)
	invocacionMetodo : ID '(' . asignacion ')'  (79)
	invocacionMetodo : ID '(' . tipo asignacion ')'  (80)

	ID  shift 57
	CTE  shift 46
	SHORT  shift 12
	ULONG  shift 13
	FLOAT  shift 14
	'-'  shift 47
	'('  shift 48
	')'  shift 58
	.  error

	asignacion  goto 59
	tipo  goto 60
	expresion  goto 61
	termino  goto 50
	factor  goto 51


state 35
	declaracionClase : CLASS ID . '{' cuerpoClase '}'  (8)
	declaracionClase : CLASS ID . ','  (9)
	declaracionClase : CLASS ID .  (10)

	'{'  shift 62
	','  shift 63
	$end  reduce 10
	ID  reduce 10
	CADENA  reduce 10
	CLASS  reduce 10
	IF  reduce 10
	PRINT  reduce 10
	VOID  reduce 10
	SHORT  reduce 10
	ULONG  reduce 10
	FLOAT  reduce 10
	WHILE  reduce 10
	RETURN  reduce 10
	'}'  reduce 10


state 36
	sentenciaIf : IF '(' . expresion comparador expresion ')' '{' bloque_ejecucion '}' ELSE '{' bloque_ejecucion '}' END_IF  (39)
	sentenciaIf : IF '(' . expresion comparador expresion ')' '{' bloque_ejecucion '}' ELSE '{' bloque_ejecucion '}'  (40)
	sentenciaIf : IF '(' . expresion comparador expresion ')' '{' bloque_ejecucion '}' END_IF  (41)
	sentenciaIf : IF '(' . expresion comparador expresion ')' '{' bloque_ejecucion '}'  (42)
	sentenciaIf : IF '(' . expresion comparador expresion ')' sentenciaEjecutable ',' ELSE sentenciaEjecutable ',' END_IF  (43)
	sentenciaIf : IF '(' . expresion comparador expresion ')' sentenciaEjecutable ',' ELSE '{' bloque_ejecucion '}' END_IF  (44)
	sentenciaIf : IF '(' . expresion comparador expresion ')' sentenciaEjecutable ',' END_IF  (45)

	ID  shift 45
	CTE  shift 46
	'-'  shift 47
	'('  shift 48
	.  error

	expresion  goto 64
	termino  goto 50
	factor  goto 51


state 37
	print : PRINT CADENA .  (60)

	.  reduce 60


state 38
	declaracionFuncion : VOID ID . '(' tipo ID ')' '{' cuerpoMetodo '}'  (65)
	declaracionFuncion : VOID ID . '(' ID ')' '{' cuerpoMetodo '}'  (66)
	declaracionFuncion : VOID ID . '(' ')' '{' cuerpoMetodo '}'  (67)

	'('  shift 65
	.  error


state 39
	sentenciaWhile : WHILE '(' . expresion comparador expresion ')' DO '{' bloque_ejecucion '}'  (56)
	sentenciaWhile : WHILE '(' . expresion comparador expresion ')' DO sentenciaEjecutable  (57)
	sentenciaWhile : WHILE '(' . expresion comparador ')' DO '{' bloque_ejecucion '}'  (58)
	sentenciaWhile : WHILE '(' . expresion comparador ')' DO sentenciaEjecutable  (59)

	ID  shift 45
	CTE  shift 46
	'-'  shift 47
	'('  shift 48
	.  error

	expresion  goto 66
	termino  goto 50
	factor  goto 51


state 40
	sentencia : sentenciaEjecutable ',' .  (7)

	.  reduce 7


state 41
	asignacion : ID . '=' expresion  (37)
	asignacion : ID . IGUAL expresion  (38)
	listaDeclaracion : ID . ';' listaDeclaracion  (83)
	listaDeclaracion : ID .  (84)

	IGUAL  shift 31
	';'  shift 67
	'='  shift 33
	','  reduce 84


state 42
	declaracion : tipo asignacion .  (82)

	.  reduce 82


state 43
	declaracion : tipo listaDeclaracion .  (81)

	.  reduce 81


state 44
	sentenciaDeclarativa : declaracion ',' .  (33)

	.  reduce 33


state 45
	factor : ID .  (95)
	factor : ID . MENOSMENOS  (96)

	MENOSMENOS  shift 68
	MAYORIGUAL  reduce 95
	MENORIGUAL  reduce 95
	IGUAL  reduce 95
	DISTINTO  reduce 95
	'+'  reduce 95
	'-'  reduce 95
	'*'  reduce 95
	'/'  reduce 95
	','  reduce 95
	'='  reduce 95
	')'  reduce 95
	'<'  reduce 95
	'>'  reduce 95


state 46
	factor : CTE .  (97)

	.  reduce 97


state 47
	factor : '-' . CTE  (98)

	CTE  shift 69
	.  error


state 48
	factor : '(' . expresion ')'  (99)

	ID  shift 45
	CTE  shift 46
	'-'  shift 47
	'('  shift 48
	.  error

	expresion  goto 70
	termino  goto 50
	factor  goto 51


state 49
	asignacion : ID IGUAL expresion .  (38)
	expresion : expresion . '+' termino  (90)
	expresion : expresion . '-' termino  (91)

	'+'  shift 71
	'-'  shift 72
	','  reduce 38
	')'  reduce 38


state 50
	expresion : termino .  (89)
	termino : termino . '*' factor  (93)
	termino : termino . '/' factor  (94)

	'*'  shift 73
	'/'  shift 74
	MAYORIGUAL  reduce 89
	MENORIGUAL  reduce 89
	IGUAL  reduce 89
	DISTINTO  reduce 89
	'+'  reduce 89
	'-'  reduce 89
	','  reduce 89
	'='  reduce 89
	')'  reduce 89
	'<'  reduce 89
	'>'  reduce 89


state 51
	termino : factor .  (92)

	.  reduce 92


state 52
	referenciaClase : ID . '.' referenciaClase  (16)
	referenciaClase : ID . '.' asignacion  (17)
	referenciaClase : ID . '.' invocacionMetodo  (18)
	asignacion : ID . '=' expresion  (37)
	asignacion : ID . IGUAL expresion  (38)
	invocacionMetodo : ID . '(' expresion ')'  (77)
	invocacionMetodo : ID . '(' ')'  (78)
	invocacionMetodo : ID . '(' asignacion ')'  (79)
	invocacionMetodo : ID . '(' tipo asignacion ')'  (80)

	IGUAL  shift 31
	'.'  shift 32
	'='  shift 33
	'('  shift 34
	.  error


state 53
	referenciaClase : ID '.' referenciaClase .  (16)

	.  reduce 16


state 54
	referenciaClase : ID '.' asignacion .  (17)

	.  reduce 17


state 55
	referenciaClase : ID '.' invocacionMetodo .  (18)

	.  reduce 18


state 56
	asignacion : ID '=' expresion .  (37)
	expresion : expresion . '+' termino  (90)
	expresion : expresion . '-' termino  (91)

	'+'  shift 71
	'-'  shift 72
	','  reduce 37
	')'  reduce 37


state 57
	asignacion : ID . '=' expresion  (37)
	asignacion : ID . IGUAL expresion  (38)
	tipo : ID .  (88)
	factor : ID .  (95)
	factor : ID . MENOSMENOS  (96)

	IGUAL  shift 31
	MENOSMENOS  shift 68
	'='  shift 33
	ID  reduce 88
	'+'  reduce 95
	'-'  reduce 95
	'*'  reduce 95
	'/'  reduce 95
	')'  reduce 95


state 58
	invocacionMetodo : ID '(' ')' .  (78)

	.  reduce 78


state 59
	invocacionMetodo : ID '(' asignacion . ')'  (79)

	')'  shift 75
	.  error


state 60
	invocacionMetodo : ID '(' tipo . asignacion ')'  (80)

	ID  shift 76
	.  error

	asignacion  goto 77


state 61
	invocacionMetodo : ID '(' expresion . ')'  (77)
	expresion : expresion . '+' termino  (90)
	expresion : expresion . '-' termino  (91)

	'+'  shift 71
	'-'  shift 72
	')'  shift 78
	.  error


state 62
	declaracionClase : CLASS ID '{' . cuerpoClase '}'  (8)

	ID  shift 79
	VOID  shift 80
	SHORT  shift 12
	ULONG  shift 13
	FLOAT  shift 14
	.  error

	cuerpoClase  goto 81
	seccionClase  goto 82
	seccionAtributos  goto 83
	declaracionMetodo  goto 84
	tipo  goto 85


state 63
	declaracionClase : CLASS ID ',' .  (9)

	.  reduce 9


state 64
	sentenciaIf : IF '(' expresion . comparador expresion ')' '{' bloque_ejecucion '}' ELSE '{' bloque_ejecucion '}' END_IF  (39)
	sentenciaIf : IF '(' expresion . comparador expresion ')' '{' bloque_ejecucion '}' ELSE '{' bloque_ejecucion '}'  (40)
	sentenciaIf : IF '(' expresion . comparador expresion ')' '{' bloque_ejecucion '}' END_IF  (41)
	sentenciaIf : IF '(' expresion . comparador expresion ')' '{' bloque_ejecucion '}'  (42)
	sentenciaIf : IF '(' expresion . comparador expresion ')' sentenciaEjecutable ',' ELSE sentenciaEjecutable ',' END_IF  (43)
	sentenciaIf : IF '(' expresion . comparador expresion ')' sentenciaEjecutable ',' ELSE '{' bloque_ejecucion '}' END_IF  (44)
	sentenciaIf : IF '(' expresion . comparador expresion ')' sentenciaEjecutable ',' END_IF  (45)
	expresion : expresion . '+' termino  (90)
	expresion : expresion . '-' termino  (91)

	MAYORIGUAL  shift 86
	MENORIGUAL  shift 87
	IGUAL  shift 88
	DISTINTO  shift 89
	'+'  shift 71
	'-'  shift 72
	'='  shift 90
	'<'  shift 91
	'>'  shift 92
	.  error

	comparador  goto 93


state 65
	declaracionFuncion : VOID ID '(' . tipo ID ')' '{' cuerpoMetodo '}'  (65)
	declaracionFuncion : VOID ID '(' . ID ')' '{' cuerpoMetodo '}'  (66)
	declaracionFuncion : VOID ID '(' . ')' '{' cuerpoMetodo '}'  (67)

	ID  shift 94
	SHORT  shift 12
	ULONG  shift 13
	FLOAT  shift 14
	')'  shift 95
	.  error

	tipo  goto 96


state 66
	sentenciaWhile : WHILE '(' expresion . comparador expresion ')' DO '{' bloque_ejecucion '}'  (56)
	sentenciaWhile : WHILE '(' expresion . comparador expresion ')' DO sentenciaEjecutable  (57)
	sentenciaWhile : WHILE '(' expresion . comparador ')' DO '{' bloque_ejecucion '}'  (58)
	sentenciaWhile : WHILE '(' expresion . comparador ')' DO sentenciaEjecutable  (59)
	expresion : expresion . '+' termino  (90)
	expresion : expresion . '-' termino  (91)

	MAYORIGUAL  shift 86
	MENORIGUAL  shift 87
	IGUAL  shift 88
	DISTINTO  shift 89
	'+'  shift 71
	'-'  shift 72
	'='  shift 90
	'<'  shift 91
	'>'  shift 92
	.  error

	comparador  goto 97


state 67
	listaDeclaracion : ID ';' . listaDeclaracion  (83)

	ID  shift 98
	.  error

	listaDeclaracion  goto 99


state 68
	factor : ID MENOSMENOS .  (96)

	.  reduce 96


state 69
	factor : '-' CTE .  (98)

	.  reduce 98


state 70
	expresion : expresion . '+' termino  (90)
	expresion : expresion . '-' termino  (91)
	factor : '(' expresion . ')'  (99)

	'+'  shift 71
	'-'  shift 72
	')'  shift 100
	.  error


state 71
	expresion : expresion '+' . termino  (90)

	ID  shift 45
	CTE  shift 46
	'-'  shift 47
	'('  shift 48
	.  error

	termino  goto 101
	factor  goto 51


state 72
	expresion : expresion '-' . termino  (91)

	ID  shift 45
	CTE  shift 46
	'-'  shift 47
	'('  shift 48
	.  error

	termino  goto 102
	factor  goto 51


state 73
	termino : termino '*' . factor  (93)

	ID  shift 45
	CTE  shift 46
	'-'  shift 47
	'('  shift 48
	.  error

	factor  goto 103


state 74
	termino : termino '/' . factor  (94)

	ID  shift 45
	CTE  shift 46
	'-'  shift 47
	'('  shift 48
	.  error

	factor  goto 104


state 75
	invocacionMetodo : ID '(' asignacion ')' .  (79)

	.  reduce 79


state 76
	asignacion : ID . '=' expresion  (37)
	asignacion : ID . IGUAL expresion  (38)

	IGUAL  shift 31
	'='  shift 33
	.  error


state 77
	invocacionMetodo : ID '(' tipo asignacion . ')'  (80)

	')'  shift 105
	.  error


state 78
	invocacionMetodo : ID '(' expresion ')' .  (77)

	.  reduce 77


state 79
	seccionAtributos : ID . ','  (20)
	tipo : ID .  (88)

	','  shift 106
	ID  reduce 88


state 80
	declaracionMetodo : VOID . ID '(' tipo ID ')' '{' cuerpoMetodo '}'  (63)
	declaracionMetodo : VOID . ID '(' ')' '{' cuerpoMetodo '}'  (64)

	ID  shift 107
	.  error


state 81
	declaracionClase : CLASS ID '{' cuerpoClase . '}'  (8)

	'}'  shift 108
	.  error


state 82
	cuerpoClase : seccionClase .  (11)
	seccionClase : seccionClase . seccionAtributos  (12)
	seccionClase : seccionClase . declaracionMetodo ','  (13)

	ID  shift 79
	VOID  shift 80
	SHORT  shift 12
	ULONG  shift 13
	FLOAT  shift 14
	'}'  reduce 11

	seccionAtributos  goto 109
	declaracionMetodo  goto 110
	tipo  goto 85


state 83
	seccionClase : seccionAtributos .  (15)

	.  reduce 15


state 84
	seccionClase : declaracionMetodo . ','  (14)

	','  shift 111
	.  error


state 85
	seccionAtributos : tipo . ID ';' listaAtributos  (19)
	seccionAtributos : tipo . ID ','  (21)
	seccionAtributos : tipo . ID  (22)

	ID  shift 112
	.  error


state 86
	comparador : MAYORIGUAL .  (100)

	.  reduce 100


state 87
	comparador : MENORIGUAL .  (101)

	.  reduce 101


state 88
	comparador : IGUAL .  (102)

	.  reduce 102


state 89
	comparador : DISTINTO .  (103)

	.  reduce 103


state 90
	comparador : '=' .  (106)

	.  reduce 106


state 91
	comparador : '<' .  (104)

	.  reduce 104


state 92
	comparador : '>' .  (105)

	.  reduce 105


state 93
	sentenciaIf : IF '(' expresion comparador . expresion ')' '{' bloque_ejecucion '}' ELSE '{' bloque_ejecucion '}' END_IF  (39)
	sentenciaIf : IF '(' expresion comparador . expresion ')' '{' bloque_ejecucion '}' ELSE '{' bloque_ejecucion '}'  (40)
	sentenciaIf : IF '(' expresion comparador . expresion ')' '{' bloque_ejecucion '}' END_IF  (41)
	sentenciaIf : IF '(' expresion comparador . expresion ')' '{' bloque_ejecucion '}'  (42)
	sentenciaIf : IF '(' expresion comparador . expresion ')' sentenciaEjecutable ',' ELSE sentenciaEjecutable ',' END_IF  (43)
	sentenciaIf : IF '(' expresion comparador . expresion ')' sentenciaEjecutable ',' ELSE '{' bloque_ejecucion '}' END_IF  (44)
	sentenciaIf : IF '(' expresion comparador . expresion ')' sentenciaEjecutable ',' END_IF  (45)

	ID  shift 45
	CTE  shift 46
	'-'  shift 47
	'('  shift 48
	.  error

	expresion  goto 113
	termino  goto 50
	factor  goto 51


state 94
	declaracionFuncion : VOID ID '(' ID . ')' '{' cuerpoMetodo '}'  (66)
	tipo : ID .  (88)

	')'  shift 114
	ID  reduce 88


state 95
	declaracionFuncion : VOID ID '(' ')' . '{' cuerpoMetodo '}'  (67)

	'{'  shift 115
	.  error


state 96
	declaracionFuncion : VOID ID '(' tipo . ID ')' '{' cuerpoMetodo '}'  (65)

	ID  shift 116
	.  error


state 97
	sentenciaWhile : WHILE '(' expresion comparador . expresion ')' DO '{' bloque_ejecucion '}'  (56)
	sentenciaWhile : WHILE '(' expresion comparador . expresion ')' DO sentenciaEjecutable  (57)
	sentenciaWhile : WHILE '(' expresion comparador . ')' DO '{' bloque_ejecucion '}'  (58)
	sentenciaWhile : WHILE '(' expresion comparador . ')' DO sentenciaEjecutable  (59)

	ID  shift 45
	CTE  shift 46
	'-'  shift 47
	'('  shift 48
	')'  shift 117
	.  error

	expresion  goto 118
	termino  goto 50
	factor  goto 51


state 98
	listaDeclaracion : ID . ';' listaDeclaracion  (83)
	listaDeclaracion : ID .  (84)

	';'  shift 67
	','  reduce 84


state 99
	listaDeclaracion : ID ';' listaDeclaracion .  (83)

	.  reduce 83


state 100
	factor : '(' expresion ')' .  (99)

	.  reduce 99


state 101
	expresion : expresion '+' termino .  (90)
	termino : termino . '*' factor  (93)
	termino : termino . '/' factor  (94)

	'*'  shift 73
	'/'  shift 74
	MAYORIGUAL  reduce 90
	MENORIGUAL  reduce 90
	IGUAL  reduce 90
	DISTINTO  reduce 90
	'+'  reduce 90
	'-'  reduce 90
	','  reduce 90
	'='  reduce 90
	')'  reduce 90
	'<'  reduce 90
	'>'  reduce 90


state 102
	expresion : expresion '-' termino .  (91)
	termino : termino . '*' factor  (93)
	termino : termino . '/' factor  (94)

	'*'  shift 73
	'/'  shift 74
	MAYORIGUAL  reduce 91
	MENORIGUAL  reduce 91
	IGUAL  reduce 91
	DISTINTO  reduce 91
	'+'  reduce 91
	'-'  reduce 91
	','  reduce 91
	'='  reduce 91
	')'  reduce 91
	'<'  reduce 91
	'>'  reduce 91


state 103
	termino : termino '*' factor .  (93)

	.  reduce 93


state 104
	termino : termino '/' factor .  (94)

	.  reduce 94


state 105
	invocacionMetodo : ID '(' tipo asignacion ')' .  (80)

	.  reduce 80


state 106
	seccionAtributos : ID ',' .  (20)

	.  reduce 20


state 107
	declaracionMetodo : VOID ID . '(' tipo ID ')' '{' cuerpoMetodo '}'  (63)
	declaracionMetodo : VOID ID . '(' ')' '{' cuerpoMetodo '}'  (64)

	'('  shift 119
	.  error


state 108
	declaracionClase : CLASS ID '{' cuerpoClase '}' .  (8)

	.  reduce 8


state 109
	seccionClase : seccionClase seccionAtributos .  (12)

	.  reduce 12


state 110
	seccionClase : seccionClase declaracionMetodo . ','  (13)

	','  shift 120
	.  error


state 111
	seccionClase : declaracionMetodo ',' .  (14)

	.  reduce 14


state 112
	seccionAtributos : tipo ID . ';' listaAtributos  (19)
	seccionAtributos : tipo ID . ','  (21)
	seccionAtributos : tipo ID .  (22)

	','  shift 121
	';'  shift 122
	ID  reduce 22
	VOID  reduce 22
	SHORT  reduce 22
	ULONG  reduce 22
	FLOAT  reduce 22
	'}'  reduce 22


state 113
	sentenciaIf : IF '(' expresion comparador expresion . ')' '{' bloque_ejecucion '}' ELSE '{' bloque_ejecucion '}' END_IF  (39)
	sentenciaIf : IF '(' expresion comparador expresion . ')' '{' bloque_ejecucion '}' ELSE '{' bloque_ejecucion '}'  (40)
	sentenciaIf : IF '(' expresion comparador expresion . ')' '{' bloque_ejecucion '}' END_IF  (41)
	sentenciaIf : IF '(' expresion comparador expresion . ')' '{' bloque_ejecucion '}'  (42)
	sentenciaIf : IF '(' expresion comparador expresion . ')' sentenciaEjecutable ',' ELSE sentenciaEjecutable ',' END_IF  (43)
	sentenciaIf : IF '(' expresion comparador expresion . ')' sentenciaEjecutable ',' ELSE '{' bloque_ejecucion '}' END_IF  (44)
	sentenciaIf : IF '(' expresion comparador expresion . ')' sentenciaEjecutable ',' END_IF  (45)
	expresion : expresion . '+' termino  (90)
	expresion : expresion . '-' termino  (91)

	'+'  shift 71
	'-'  shift 72
	')'  shift 123
	.  error


state 114
	declaracionFuncion : VOID ID '(' ID ')' . '{' cuerpoMetodo '}'  (66)

	'{'  shift 124
	.  error


state 115
	declaracionFuncion : VOID ID '(' ')' '{' . cuerpoMetodo '}'  (67)

	ID  shift 6
	CADENA  shift 7
	IF  shift 125
	PRINT  shift 10
	VOID  shift 11
	SHORT  shift 12
	ULONG  shift 13
	FLOAT  shift 14
	WHILE  shift 15
	.  error

	sentenciaEjecutable  goto 126
	referenciaClase  goto 21
	asignacion  goto 22
	invocacionMetodo  goto 23
	tipo  goto 24
	sentenciaIf  goto 25
	sentenciaWhile  goto 26
	print  goto 27
	declaracionFuncion  goto 127
	declaracion  goto 128
	sentenciaDeclarativaMetodo  goto 129
	sentenciaIfRetorno  goto 130
	cuerpoMetodo  goto 131
	listaSentenciasMetodo  goto 132


state 116
	declaracionFuncion : VOID ID '(' tipo ID . ')' '{' cuerpoMetodo '}'  (65)

	')'  shift 133
	.  error


state 117
	sentenciaWhile : WHILE '(' expresion comparador ')' . DO '{' bloque_ejecucion '}'  (58)
	sentenciaWhile : WHILE '(' expresion comparador ')' . DO sentenciaEjecutable  (59)

	DO  shift 134
	.  error


state 118
	sentenciaWhile : WHILE '(' expresion comparador expresion . ')' DO '{' bloque_ejecucion '}'  (56)
	sentenciaWhile : WHILE '(' expresion comparador expresion . ')' DO sentenciaEjecutable  (57)
	expresion : expresion . '+' termino  (90)
	expresion : expresion . '-' termino  (91)

	'+'  shift 71
	'-'  shift 72
	')'  shift 135
	.  error


state 119
	declaracionMetodo : VOID ID '(' . tipo ID ')' '{' cuerpoMetodo '}'  (63)
	declaracionMetodo : VOID ID '(' . ')' '{' cuerpoMetodo '}'  (64)

	ID  shift 136
	SHORT  shift 12
	ULONG  shift 13
	FLOAT  shift 14
	')'  shift 137
	.  error

	tipo  goto 138


state 120
	seccionClase : seccionClase declaracionMetodo ',' .  (13)

	.  reduce 13


state 121
	seccionAtributos : tipo ID ',' .  (21)

	.  reduce 21


state 122
	seccionAtributos : tipo ID ';' . listaAtributos  (19)

	ID  shift 139
	.  error

	listaAtributos  goto 140


state 123
	sentenciaIf : IF '(' expresion comparador expresion ')' . '{' bloque_ejecucion '}' ELSE '{' bloque_ejecucion '}' END_IF  (39)
	sentenciaIf : IF '(' expresion comparador expresion ')' . '{' bloque_ejecucion '}' ELSE '{' bloque_ejecucion '}'  (40)
	sentenciaIf : IF '(' expresion comparador expresion ')' . '{' bloque_ejecucion '}' END_IF  (41)
	sentenciaIf : IF '(' expresion comparador expresion ')' . '{' bloque_ejecucion '}'  (42)
	sentenciaIf : IF '(' expresion comparador expresion ')' . sentenciaEjecutable ',' ELSE sentenciaEjecutable ',' END_IF  (43)
	sentenciaIf : IF '(' expresion comparador expresion ')' . sentenciaEjecutable ',' ELSE '{' bloque_ejecucion '}' END_IF  (44)
	sentenciaIf : IF '(' expresion comparador expresion ')' . sentenciaEjecutable ',' END_IF  (45)

	ID  shift 52
	CADENA  shift 7
	IF  shift 9
	PRINT  shift 10
	WHILE  shift 15
	'{'  shift 141
	.  error

	sentenciaEjecutable  goto 142
	referenciaClase  goto 21
	asignacion  goto 22
	invocacionMetodo  goto 23
	sentenciaIf  goto 25
	sentenciaWhile  goto 26
	print  goto 27


state 124
	declaracionFuncion : VOID ID '(' ID ')' '{' . cuerpoMetodo '}'  (66)

	ID  shift 6
	CADENA  shift 7
	IF  shift 125
	PRINT  shift 10
	VOID  shift 11
	SHORT  shift 12
	ULONG  shift 13
	FLOAT  shift 14
	WHILE  shift 15
	.  error

	sentenciaEjecutable  goto 126
	referenciaClase  goto 21
	asignacion  goto 22
	invocacionMetodo  goto 23
	tipo  goto 24
	sentenciaIf  goto 25
	sentenciaWhile  goto 26
	print  goto 27
	declaracionFuncion  goto 127
	declaracion  goto 128
	sentenciaDeclarativaMetodo  goto 129
	sentenciaIfRetorno  goto 130
	cuerpoMetodo  goto 143
	listaSentenciasMetodo  goto 132


state 125
	sentenciaIf : IF . '(' expresion comparador expresion ')' '{' bloque_ejecucion '}' ELSE '{' bloque_ejecucion '}' END_IF  (39)
	sentenciaIf : IF . '(' expresion comparador expresion ')' '{' bloque_ejecucion '}' ELSE '{' bloque_ejecucion '}'  (40)
	sentenciaIf : IF . '(' expresion comparador expresion ')' '{' bloque_ejecucion '}' END_IF  (41)
	sentenciaIf : IF . '(' expresion comparador expresion ')' '{' bloque_ejecucion '}'  (42)
	sentenciaIf : IF . '(' expresion comparador expresion ')' sentenciaEjecutable ',' ELSE sentenciaEjecutable ',' END_IF  (43)
	sentenciaIf : IF . '(' expresion comparador expresion ')' sentenciaEjecutable ',' ELSE '{' bloque_ejecucion '}' END_IF  (44)
	sentenciaIf : IF . '(' expresion comparador expresion ')' sentenciaEjecutable ',' END_IF  (45)
	sentenciaIfRetorno : IF . '(' expresion comparador expresion ')' '{' bloque_ejecucion return '}' ELSE '{' bloque_ejecucion return ',' '}' END_IF  (46)
	sentenciaIfRetorno : IF . '(' expresion comparador expresion ')' '{' bloque_ejecucion return '}' ELSE '{' bloque_ejecucion return ',' '}'  (47)
	sentenciaIfRetorno : IF . '(' expresion comparador expresion ')' '{' bloque_ejecucion return '}' END_IF  (48)
	sentenciaIfRetorno : IF . '(' expresion comparador expresion ')' '{' bloque_ejecucion return '}'  (49)
	sentenciaIfRetorno : IF . '(' expresion comparador expresion ')' return ',' ELSE sentenciaEjecutable ',' END_IF  (50)
	sentenciaIfRetorno : IF . '(' expresion comparador expresion ')' return ',' ELSE '{' bloque_ejecucion return ',' '}' END_IF  (51)
	sentenciaIfRetorno : IF . '(' expresion comparador expresion ')' return ',' END_IF  (52)

	'('  shift 144
	.  error


state 126
	listaSentenciasMetodo : sentenciaEjecutable . ','  (76)

	','  shift 145
	.  error


state 127
	sentenciaDeclarativaMetodo : declaracionFuncion .  (35)

	.  reduce 35


state 128
	sentenciaDeclarativaMetodo : declaracion . ','  (36)

	','  shift 146
	.  error


state 129
	listaSentenciasMetodo : sentenciaDeclarativaMetodo .  (75)

	.  reduce 75


state 130
	cuerpoMetodo : sentenciaIfRetorno . ',' listaSentenciasMetodo  (69)
	cuerpoMetodo : sentenciaIfRetorno . ','  (72)

	','  shift 147
	.  error


state 131
	declaracionFuncion : VOID ID '(' ')' '{' cuerpoMetodo . '}'  (67)

	'}'  shift 148
	.  error


state 132
	cuerpoMetodo : listaSentenciasMetodo . return ','  (68)
	cuerpoMetodo : listaSentenciasMetodo . sentenciaIfRetorno ','  (70)
	cuerpoMetodo : listaSentenciasMetodo .  (71)
	listaSentenciasMetodo : listaSentenciasMetodo . sentenciaDeclarativaMetodo  (73)
	listaSentenciasMetodo : listaSentenciasMetodo . sentenciaEjecutable ','  (74)

	ID  shift 6
	CADENA  shift 7
	IF  shift 125
	PRINT  shift 10
	VOID  shift 11
	SHORT  shift 12
	ULONG  shift 13
	FLOAT  shift 14
	WHILE  shift 15
	RETURN  shift 149
	'}'  reduce 71

	sentenciaEjecutable  goto 150
	referenciaClase  goto 21
	asignacion  goto 22
	invocacionMetodo  goto 23
	tipo  goto 24
	sentenciaIf  goto 25
	sentenciaWhile  goto 26
	print  goto 27
	declaracionFuncion  goto 127
	declaracion  goto 128
	sentenciaDeclarativaMetodo  goto 151
	sentenciaIfRetorno  goto 152
	return  goto 153


state 133
	declaracionFuncion : VOID ID '(' tipo ID ')' . '{' cuerpoMetodo '}'  (65)

	'{'  shift 154
	.  error


state 134
	sentenciaWhile : WHILE '(' expresion comparador ')' DO . '{' bloque_ejecucion '}'  (58)
	sentenciaWhile : WHILE '(' expresion comparador ')' DO . sentenciaEjecutable  (59)

	ID  shift 52
	CADENA  shift 7
	IF  shift 9
	PRINT  shift 10
	WHILE  shift 15
	'{'  shift 155
	.  error

	sentenciaEjecutable  goto 156
	referenciaClase  goto 21
	asignacion  goto 22
	invocacionMetodo  goto 23
	sentenciaIf  goto 25
	sentenciaWhile  goto 26
	print  goto 27


state 135
	sentenciaWhile : WHILE '(' expresion comparador expresion ')' . DO '{' bloque_ejecucion '}'  (56)
	sentenciaWhile : WHILE '(' expresion comparador expresion ')' . DO sentenciaEjecutable  (57)

	DO  shift 157
	.  error


state 136
	tipo : ID .  (88)

	.  reduce 88


state 137
	declaracionMetodo : VOID ID '(' ')' . '{' cuerpoMetodo '}'  (64)

	'{'  shift 158
	.  error


state 138
	declaracionMetodo : VOID ID '(' tipo . ID ')' '{' cuerpoMetodo '}'  (63)

	ID  shift 159
	.  error


state 139
	listaAtributos : ID . ';' listaAtributos  (23)
	listaAtributos : ID . ','  (24)
	listaAtributos : ID .  (25)

	','  shift 160
	';'  shift 161
	ID  reduce 25
	VOID  reduce 25
	SHORT  reduce 25
	ULONG  reduce 25
	FLOAT  reduce 25
	'}'  reduce 25


state 140
	seccionAtributos : tipo ID ';' listaAtributos .  (19)

	.  reduce 19


state 141
	sentenciaIf : IF '(' expresion comparador expresion ')' '{' . bloque_ejecucion '}' ELSE '{' bloque_ejecucion '}' END_IF  (39)
	sentenciaIf : IF '(' expresion comparador expresion ')' '{' . bloque_ejecucion '}' ELSE '{' bloque_ejecucion '}'  (40)
	sentenciaIf : IF '(' expresion comparador expresion ')' '{' . bloque_ejecucion '}' END_IF  (41)
	sentenciaIf : IF '(' expresion comparador expresion ')' '{' . bloque_ejecucion '}'  (42)

	ID  shift 6
	CADENA  shift 7
	CLASS  shift 8
	IF  shift 9
	PRINT  shift 10
	VOID  shift 11
	SHORT  shift 12
	ULONG  shift 13
	FLOAT  shift 14
	WHILE  shift 15
	.  error

	sentenciaDeclarativa  goto 162
	sentenciaEjecutable  goto 163
	declaracionClase  goto 20
	referenciaClase  goto 21
	asignacion  goto 22
	invocacionMetodo  goto 23
	tipo  goto 24
	sentenciaIf  goto 25
	sentenciaWhile  goto 26
	print  goto 27
	declaracionFuncion  goto 28
	declaracion  goto 29
	bloque_ejecucion  goto 164


state 142
	sentenciaIf : IF '(' expresion comparador expresion ')' sentenciaEjecutable . ',' ELSE sentenciaEjecutable ',' END_IF  (43)
	sentenciaIf : IF '(' expresion comparador expresion ')' sentenciaEjecutable . ',' ELSE '{' bloque_ejecucion '}' END_IF  (44)
	sentenciaIf : IF '(' expresion comparador expresion ')' sentenciaEjecutable . ',' END_IF  (45)

	','  shift 165
	.  error


state 143
	declaracionFuncion : VOID ID '(' ID ')' '{' cuerpoMetodo . '}'  (66)

	'}'  shift 166
	.  error


state 144
	sentenciaIf : IF '(' . expresion comparador expresion ')' '{' bloque_ejecucion '}' ELSE '{' bloque_ejecucion '}' END_IF  (39)
	sentenciaIf : IF '(' . expresion comparador expresion ')' '{' bloque_ejecucion '}' ELSE '{' bloque_ejecucion '}'  (40)
	sentenciaIf : IF '(' . expresion comparador expresion ')' '{' bloque_ejecucion '}' END_IF  (41)
	sentenciaIf : IF '(' . expresion comparador expresion ')' '{' bloque_ejecucion '}'  (42)
	sentenciaIf : IF '(' . expresion comparador expresion ')' sentenciaEjecutable ',' ELSE sentenciaEjecutable ',' END_IF  (43)
	sentenciaIf : IF '(' . expresion comparador expresion ')' sentenciaEjecutable ',' ELSE '{' bloque_ejecucion '}' END_IF  (44)
	sentenciaIf : IF '(' . expresion comparador expresion ')' sentenciaEjecutable ',' END_IF  (45)
	sentenciaIfRetorno : IF '(' . expresion comparador expresion ')' '{' bloque_ejecucion return '}' ELSE '{' bloque_ejecucion return ',' '}' END_IF  (46)
	sentenciaIfRetorno : IF '(' . expresion comparador expresion ')' '{' bloque_ejecucion return '}' ELSE '{' bloque_ejecucion return ',' '}'  (47)
	sentenciaIfRetorno : IF '(' . expresion comparador expresion ')' '{' bloque_ejecucion return '}' END_IF  (48)
	sentenciaIfRetorno : IF '(' . expresion comparador expresion ')' '{' bloque_ejecucion return '}'  (49)
	sentenciaIfRetorno : IF '(' . expresion comparador expresion ')' return ',' ELSE sentenciaEjecutable ',' END_IF  (50)
	sentenciaIfRetorno : IF '(' . expresion comparador expresion ')' return ',' ELSE '{' bloque_ejecucion return ',' '}' END_IF  (51)
	sentenciaIfRetorno : IF '(' . expresion comparador expresion ')' return ',' END_IF  (52)

	ID  shift 45
	CTE  shift 46
	'-'  shift 47
	'('  shift 48
	.  error

	expresion  goto 167
	termino  goto 50
	factor  goto 51


state 145
	listaSentenciasMetodo : sentenciaEjecutable ',' .  (76)

	.  reduce 76


state 146
	sentenciaDeclarativaMetodo : declaracion ',' .  (36)

	.  reduce 36


state 147
	cuerpoMetodo : sentenciaIfRetorno ',' . listaSentenciasMetodo  (69)
	cuerpoMetodo : sentenciaIfRetorno ',' .  (72)

	ID  shift 6
	CADENA  shift 7
	IF  shift 9
	PRINT  shift 10
	VOID  shift 11
	SHORT  shift 12
	ULONG  shift 13
	FLOAT  shift 14
	WHILE  shift 15
	'}'  reduce 72

	sentenciaEjecutable  goto 126
	referenciaClase  goto 21
	asignacion  goto 22
	invocacionMetodo  goto 23
	tipo  goto 24
	sentenciaIf  goto 25
	sentenciaWhile  goto 26
	print  goto 27
	declaracionFuncion  goto 127
	declaracion  goto 128
	sentenciaDeclarativaMetodo  goto 129
	listaSentenciasMetodo  goto 168


state 148
	declaracionFuncion : VOID ID '(' ')' '{' cuerpoMetodo '}' .  (67)

	.  reduce 67


state 149
	return : RETURN .  (62)

	.  reduce 62


state 150
	listaSentenciasMetodo : listaSentenciasMetodo sentenciaEjecutable . ','  (74)

	','  shift 169
	.  error


state 151
	listaSentenciasMetodo : listaSentenciasMetodo sentenciaDeclarativaMetodo .  (73)

	.  reduce 73


state 152
	cuerpoMetodo : listaSentenciasMetodo sentenciaIfRetorno . ','  (70)

	','  shift 170
	.  error


state 153
	cuerpoMetodo : listaSentenciasMetodo return . ','  (68)

	','  shift 171
	.  error


state 154
	declaracionFuncion : VOID ID '(' tipo ID ')' '{' . cuerpoMetodo '}'  (65)

	ID  shift 6
	CADENA  shift 7
	IF  shift 125
	PRINT  shift 10
	VOID  shift 11
	SHORT  shift 12
	ULONG  shift 13
	FLOAT  shift 14
	WHILE  shift 15
	.  error

	sentenciaEjecutable  goto 126
	referenciaClase  goto 21
	asignacion  goto 22
	invocacionMetodo  goto 23
	tipo  goto 24
	sentenciaIf  goto 25
	sentenciaWhile  goto 26
	print  goto 27
	declaracionFuncion  goto 127
	declaracion  goto 128
	sentenciaDeclarativaMetodo  goto 129
	sentenciaIfRetorno  goto 130
	cuerpoMetodo  goto 172
	listaSentenciasMetodo  goto 132


state 155
	sentenciaWhile : WHILE '(' expresion comparador ')' DO '{' . bloque_ejecucion '}'  (58)

	ID  shift 6
	CADENA  shift 7
	CLASS  shift 8
	IF  shift 9
	PRINT  shift 10
	VOID  shift 11
	SHORT  shift 12
	ULONG  shift 13
	FLOAT  shift 14
	WHILE  shift 15
	.  error

	sentenciaDeclarativa  goto 162
	sentenciaEjecutable  goto 163
	declaracionClase  goto 20
	referenciaClase  goto 21
	asignacion  goto 22
	invocacionMetodo  goto 23
	tipo  goto 24
	sentenciaIf  goto 25
	sentenciaWhile  goto 26
	print  goto 27
	declaracionFuncion  goto 28
	declaracion  goto 29
	bloque_ejecucion  goto 173


state 156
	sentenciaWhile : WHILE '(' expresion comparador ')' DO sentenciaEjecutable .  (59)

	.  reduce 59


state 157
	sentenciaWhile : WHILE '(' expresion comparador expresion ')' DO . '{' bloque_ejecucion '}'  (56)
	sentenciaWhile : WHILE '(' expresion comparador expresion ')' DO . sentenciaEjecutable  (57)

	ID  shift 52
	CADENA  shift 7
	IF  shift 9
	PRINT  shift 10
	WHILE  shift 15
	'{'  shift 174
	.  error

	sentenciaEjecutable  goto 175
	referenciaClase  goto 21
	asignacion  goto 22
	invocacionMetodo  goto 23
	sentenciaIf  goto 25
	sentenciaWhile  goto 26
	print  goto 27


state 158
	declaracionMetodo : VOID ID '(' ')' '{' . cuerpoMetodo '}'  (64)

	ID  shift 6
	CADENA  shift 7
	IF  shift 125
	PRINT  shift 10
	VOID  shift 11
	SHORT  shift 12
	ULONG  shift 13
	FLOAT  shift 14
	WHILE  shift 15
	.  error

	sentenciaEjecutable  goto 126
	referenciaClase  goto 21
	asignacion  goto 22
	invocacionMetodo  goto 23
	tipo  goto 24
	sentenciaIf  goto 25
	sentenciaWhile  goto 26
	print  goto 27
	declaracionFuncion  goto 127
	declaracion  goto 128
	sentenciaDeclarativaMetodo  goto 129
	sentenciaIfRetorno  goto 130
	cuerpoMetodo  goto 176
	listaSentenciasMetodo  goto 132


state 159
	declaracionMetodo : VOID ID '(' tipo ID . ')' '{' cuerpoMetodo '}'  (63)

	')'  shift 177
	.  error


state 160
	listaAtributos : ID ',' .  (24)

	.  reduce 24


state 161
	listaAtributos : ID ';' . listaAtributos  (23)

	ID  shift 139
	.  error

	listaAtributos  goto 178


state 162
	bloque_ejecucion : sentenciaDeclarativa .  (55)

	.  reduce 55


state 163
	bloque_ejecucion : sentenciaEjecutable . ','  (54)

	','  shift 179
	.  error


state 164
	sentenciaIf : IF '(' expresion comparador expresion ')' '{' bloque_ejecucion . '}' ELSE '{' bloque_ejecucion '}' END_IF  (39)
	sentenciaIf : IF '(' expresion comparador expresion ')' '{' bloque_ejecucion . '}' ELSE '{' bloque_ejecucion '}'  (40)
	sentenciaIf : IF '(' expresion comparador expresion ')' '{' bloque_ejecucion . '}' END_IF  (41)
	sentenciaIf : IF '(' expresion comparador expresion ')' '{' bloque_ejecucion . '}'  (42)
	bloque_ejecucion : bloque_ejecucion . sentenciaEjecutable ','  (53)

	ID  shift 52
	CADENA  shift 7
	IF  shift 9
	PRINT  shift 10
	WHILE  shift 15
	'}'  shift 180
	.  error

	sentenciaEjecutable  goto 181
	referenciaClase  goto 21
	asignacion  goto 22
	invocacionMetodo  goto 23
	sentenciaIf  goto 25
	sentenciaWhile  goto 26
	print  goto 27


state 165
	sentenciaIf : IF '(' expresion comparador expresion ')' sentenciaEjecutable ',' . ELSE sentenciaEjecutable ',' END_IF  (43)
	sentenciaIf : IF '(' expresion comparador expresion ')' sentenciaEjecutable ',' . ELSE '{' bloque_ejecucion '}' END_IF  (44)
	sentenciaIf : IF '(' expresion comparador expresion ')' sentenciaEjecutable ',' . END_IF  (45)

	ELSE  shift 182
	END_IF  shift 183
	.  error


state 166
	declaracionFuncion : VOID ID '(' ID ')' '{' cuerpoMetodo '}' .  (66)

	.  reduce 66


state 167
	sentenciaIf : IF '(' expresion . comparador expresion ')' '{' bloque_ejecucion '}' ELSE '{' bloque_ejecucion '}' END_IF  (39)
	sentenciaIf : IF '(' expresion . comparador expresion ')' '{' bloque_ejecucion '}' ELSE '{' bloque_ejecucion '}'  (40)
	sentenciaIf : IF '(' expresion . comparador expresion ')' '{' bloque_ejecucion '}' END_IF  (41)
	sentenciaIf : IF '(' expresion . comparador expresion ')' '{' bloque_ejecucion '}'  (42)
	sentenciaIf : IF '(' expresion . comparador expresion ')' sentenciaEjecutable ',' ELSE sentenciaEjecutable ',' END_IF  (43)
	sentenciaIf : IF '(' expresion . comparador expresion ')' sentenciaEjecutable ',' ELSE '{' bloque_ejecucion '}' END_IF  (44)
	sentenciaIf : IF '(' expresion . comparador expresion ')' sentenciaEjecutable ',' END_IF  (45)
	sentenciaIfRetorno : IF '(' expresion . comparador expresion ')' '{' bloque_ejecucion return '}' ELSE '{' bloque_ejecucion return ',' '}' END_IF  (46)
	sentenciaIfRetorno : IF '(' expresion . comparador expresion ')' '{' bloque_ejecucion return '}' ELSE '{' bloque_ejecucion return ',' '}'  (47)
	sentenciaIfRetorno : IF '(' expresion . comparador expresion ')' '{' bloque_ejecucion return '}' END_IF  (48)
	sentenciaIfRetorno : IF '(' expresion . comparador expresion ')' '{' bloque_ejecucion return '}'  (49)
	sentenciaIfRetorno : IF '(' expresion . comparador expresion ')' return ',' ELSE sentenciaEjecutable ',' END_IF  (50)
	sentenciaIfRetorno : IF '(' expresion . comparador expresion ')' return ',' ELSE '{' bloque_ejecucion return ',' '}' END_IF  (51)
	sentenciaIfRetorno : IF '(' expresion . comparador expresion ')' return ',' END_IF  (52)
	expresion : expresion . '+' termino  (90)
	expresion : expresion . '-' termino  (91)

	MAYORIGUAL  shift 86
	MENORIGUAL  shift 87
	IGUAL  shift 88
	DISTINTO  shift 89
	'+'  shift 71
	'-'  shift 72
	'='  shift 90
	'<'  shift 91
	'>'  shift 92
	.  error

	comparador  goto 184


state 168
	cuerpoMetodo : sentenciaIfRetorno ',' listaSentenciasMetodo .  (69)
	listaSentenciasMetodo : listaSentenciasMetodo . sentenciaDeclarativaMetodo  (73)
	listaSentenciasMetodo : listaSentenciasMetodo . sentenciaEjecutable ','  (74)

	ID  shift 6
	CADENA  shift 7
	IF  shift 9
	PRINT  shift 10
	VOID  shift 11
	SHORT  shift 12
	ULONG  shift 13
	FLOAT  shift 14
	WHILE  shift 15
	'}'  reduce 69

	sentenciaEjecutable  goto 150
	referenciaClase  goto 21
	asignacion  goto 22
	invocacionMetodo  goto 23
	tipo  goto 24
	sentenciaIf  goto 25
	sentenciaWhile  goto 26
	print  goto 27
	declaracionFuncion  goto 127
	declaracion  goto 128
	sentenciaDeclarativaMetodo  goto 151


state 169
	listaSentenciasMetodo : listaSentenciasMetodo sentenciaEjecutable ',' .  (74)

	.  reduce 74


state 170
	cuerpoMetodo : listaSentenciasMetodo sentenciaIfRetorno ',' .  (70)

	.  reduce 70


state 171
	cuerpoMetodo : listaSentenciasMetodo return ',' .  (68)

	.  reduce 68


state 172
	declaracionFuncion : VOID ID '(' tipo ID ')' '{' cuerpoMetodo . '}'  (65)

	'}'  shift 185
	.  error


state 173
	bloque_ejecucion : bloque_ejecucion . sentenciaEjecutable ','  (53)
	sentenciaWhile : WHILE '(' expresion comparador ')' DO '{' bloque_ejecucion . '}'  (58)

	ID  shift 52
	CADENA  shift 7
	IF  shift 9
	PRINT  shift 10
	WHILE  shift 15
	'}'  shift 186
	.  error

	sentenciaEjecutable  goto 181
	referenciaClase  goto 21
	asignacion  goto 22
	invocacionMetodo  goto 23
	sentenciaIf  goto 25
	sentenciaWhile  goto 26
	print  goto 27


state 174
	sentenciaWhile : WHILE '(' expresion comparador expresion ')' DO '{' . bloque_ejecucion '}'  (56)

	ID  shift 6
	CADENA  shift 7
	CLASS  shift 8
	IF  shift 9
	PRINT  shift 10
	VOID  shift 11
	SHORT  shift 12
	ULONG  shift 13
	FLOAT  shift 14
	WHILE  shift 15
	.  error

	sentenciaDeclarativa  goto 162
	sentenciaEjecutable  goto 163
	declaracionClase  goto 20
	referenciaClase  goto 21
	asignacion  goto 22
	invocacionMetodo  goto 23
	tipo  goto 24
	sentenciaIf  goto 25
	sentenciaWhile  goto 26
	print  goto 27
	declaracionFuncion  goto 28
	declaracion  goto 29
	bloque_ejecucion  goto 187


state 175
	sentenciaWhile : WHILE '(' expresion comparador expresion ')' DO sentenciaEjecutable .  (57)

	.  reduce 57


state 176
	declaracionMetodo : VOID ID '(' ')' '{' cuerpoMetodo . '}'  (64)

	'}'  shift 188
	.  error


state 177
	declaracionMetodo : VOID ID '(' tipo ID ')' . '{' cuerpoMetodo '}'  (63)

	'{'  shift 189
	.  error


state 178
	listaAtributos : ID ';' listaAtributos .  (23)

	.  reduce 23


state 179
	bloque_ejecucion : sentenciaEjecutable ',' .  (54)

	.  reduce 54


state 180
	sentenciaIf : IF '(' expresion comparador expresion ')' '{' bloque_ejecucion '}' . ELSE '{' bloque_ejecucion '}' END_IF  (39)
	sentenciaIf : IF '(' expresion comparador expresion ')' '{' bloque_ejecucion '}' . ELSE '{' bloque_ejecucion '}'  (40)
	sentenciaIf : IF '(' expresion comparador expresion ')' '{' bloque_ejecucion '}' . END_IF  (41)
	sentenciaIf : IF '(' expresion comparador expresion ')' '{' bloque_ejecucion '}' .  (42)

	ELSE  shift 190
	END_IF  shift 191
	','  reduce 42


state 181
	bloque_ejecucion : bloque_ejecucion sentenciaEjecutable . ','  (53)

	','  shift 192
	.  error


state 182
	sentenciaIf : IF '(' expresion comparador expresion ')' sentenciaEjecutable ',' ELSE . sentenciaEjecutable ',' END_IF  (43)
	sentenciaIf : IF '(' expresion comparador expresion ')' sentenciaEjecutable ',' ELSE . '{' bloque_ejecucion '}' END_IF  (44)

	ID  shift 52
	CADENA  shift 7
	IF  shift 9
	PRINT  shift 10
	WHILE  shift 15
	'{'  shift 193
	.  error

	sentenciaEjecutable  goto 194
	referenciaClase  goto 21
	asignacion  goto 22
	invocacionMetodo  goto 23
	sentenciaIf  goto 25
	sentenciaWhile  goto 26
	print  goto 27


state 183
	sentenciaIf : IF '(' expresion comparador expresion ')' sentenciaEjecutable ',' END_IF .  (45)

	.  reduce 45


state 184
	sentenciaIf : IF '(' expresion comparador . expresion ')' '{' bloque_ejecucion '}' ELSE '{' bloque_ejecucion '}' END_IF  (39)
	sentenciaIf : IF '(' expresion comparador . expresion ')' '{' bloque_ejecucion '}' ELSE '{' bloque_ejecucion '}'  (40)
	sentenciaIf : IF '(' expresion comparador . expresion ')' '{' bloque_ejecucion '}' END_IF  (41)
	sentenciaIf : IF '(' expresion comparador . expresion ')' '{' bloque_ejecucion '}'  (42)
	sentenciaIf : IF '(' expresion comparador . expresion ')' sentenciaEjecutable ',' ELSE sentenciaEjecutable ',' END_IF  (43)
	sentenciaIf : IF '(' expresion comparador . expresion ')' sentenciaEjecutable ',' ELSE '{' bloque_ejecucion '}' END_IF  (44)
	sentenciaIf : IF '(' expresion comparador . expresion ')' sentenciaEjecutable ',' END_IF  (45)
	sentenciaIfRetorno : IF '(' expresion comparador . expresion ')' '{' bloque_ejecucion return '}' ELSE '{' bloque_ejecucion return ',' '}' END_IF  (46)
	sentenciaIfRetorno : IF '(' expresion comparador . expresion ')' '{' bloque_ejecucion return '}' ELSE '{' bloque_ejecucion return ',' '}'  (47)
	sentenciaIfRetorno : IF '(' expresion comparador . expresion ')' '{' bloque_ejecucion return '}' END_IF  (48)
	sentenciaIfRetorno : IF '(' expresion comparador . expresion ')' '{' bloque_ejecucion return '}'  (49)
	sentenciaIfRetorno : IF '(' expresion comparador . expresion ')' return ',' ELSE sentenciaEjecutable ',' END_IF  (50)
	sentenciaIfRetorno : IF '(' expresion comparador . expresion ')' return ',' ELSE '{' bloque_ejecucion return ',' '}' END_IF  (51)
	sentenciaIfRetorno : IF '(' expresion comparador . expresion ')' return ',' END_IF  (52)

	ID  shift 45
	CTE  shift 46
	'-'  shift 47
	'('  shift 48
	.  error

	expresion  goto 195
	termino  goto 50
	factor  goto 51


state 185
	declaracionFuncion : VOID ID '(' tipo ID ')' '{' cuerpoMetodo '}' .  (65)

	.  reduce 65


state 186
	sentenciaWhile : WHILE '(' expresion comparador ')' DO '{' bloque_ejecucion '}' .  (58)

	.  reduce 58


state 187
	bloque_ejecucion : bloque_ejecucion . sentenciaEjecutable ','  (53)
	sentenciaWhile : WHILE '(' expresion comparador expresion ')' DO '{' bloque_ejecucion . '}'  (56)

	ID  shift 52
	CADENA  shift 7
	IF  shift 9
	PRINT  shift 10
	WHILE  shift 15
	'}'  shift 196
	.  error

	sentenciaEjecutable  goto 181
	referenciaClase  goto 21
	asignacion  goto 22
	invocacionMetodo  goto 23
	sentenciaIf  goto 25
	sentenciaWhile  goto 26
	print  goto 27


state 188
	declaracionMetodo : VOID ID '(' ')' '{' cuerpoMetodo '}' .  (64)

	.  reduce 64


state 189
	declaracionMetodo : VOID ID '(' tipo ID ')' '{' . cuerpoMetodo '}'  (63)

	ID  shift 6
	CADENA  shift 7
	IF  shift 125
	PRINT  shift 10
	VOID  shift 11
	SHORT  shift 12
	ULONG  shift 13
	FLOAT  shift 14
	WHILE  shift 15
	.  error

	sentenciaEjecutable  goto 126
	referenciaClase  goto 21
	asignacion  goto 22
	invocacionMetodo  goto 23
	tipo  goto 24
	sentenciaIf  goto 25
	sentenciaWhile  goto 26
	print  goto 27
	declaracionFuncion  goto 127
	declaracion  goto 128
	sentenciaDeclarativaMetodo  goto 129
	sentenciaIfRetorno  goto 130
	cuerpoMetodo  goto 197
	listaSentenciasMetodo  goto 132


state 190
	sentenciaIf : IF '(' expresion comparador expresion ')' '{' bloque_ejecucion '}' ELSE . '{' bloque_ejecucion '}' END_IF  (39)
	sentenciaIf : IF '(' expresion comparador expresion ')' '{' bloque_ejecucion '}' ELSE . '{' bloque_ejecucion '}'  (40)

	'{'  shift 198
	.  error


state 191
	sentenciaIf : IF '(' expresion comparador expresion ')' '{' bloque_ejecucion '}' END_IF .  (41)

	.  reduce 41


state 192
	bloque_ejecucion : bloque_ejecucion sentenciaEjecutable ',' .  (53)

	.  reduce 53


state 193
	sentenciaIf : IF '(' expresion comparador expresion ')' sentenciaEjecutable ',' ELSE '{' . bloque_ejecucion '}' END_IF  (44)

	ID  shift 6
	CADENA  shift 7
	CLASS  shift 8
	IF  shift 9
	PRINT  shift 10
	VOID  shift 11
	SHORT  shift 12
	ULONG  shift 13
	FLOAT  shift 14
	WHILE  shift 15
	.  error

	sentenciaDeclarativa  goto 162
	sentenciaEjecutable  goto 163
	declaracionClase  goto 20
	referenciaClase  goto 21
	asignacion  goto 22
	invocacionMetodo  goto 23
	tipo  goto 24
	sentenciaIf  goto 25
	sentenciaWhile  goto 26
	print  goto 27
	declaracionFuncion  goto 28
	declaracion  goto 29
	bloque_ejecucion  goto 199


state 194
	sentenciaIf : IF '(' expresion comparador expresion ')' sentenciaEjecutable ',' ELSE sentenciaEjecutable . ',' END_IF  (43)

	','  shift 200
	.  error


state 195
	sentenciaIf : IF '(' expresion comparador expresion . ')' '{' bloque_ejecucion '}' ELSE '{' bloque_ejecucion '}' END_IF  (39)
	sentenciaIf : IF '(' expresion comparador expresion . ')' '{' bloque_ejecucion '}' ELSE '{' bloque_ejecucion '}'  (40)
	sentenciaIf : IF '(' expresion comparador expresion . ')' '{' bloque_ejecucion '}' END_IF  (41)
	sentenciaIf : IF '(' expresion comparador expresion . ')' '{' bloque_ejecucion '}'  (42)
	sentenciaIf : IF '(' expresion comparador expresion . ')' sentenciaEjecutable ',' ELSE sentenciaEjecutable ',' END_IF  (43)
	sentenciaIf : IF '(' expresion comparador expresion . ')' sentenciaEjecutable ',' ELSE '{' bloque_ejecucion '}' END_IF  (44)
	sentenciaIf : IF '(' expresion comparador expresion . ')' sentenciaEjecutable ',' END_IF  (45)
	sentenciaIfRetorno : IF '(' expresion comparador expresion . ')' '{' bloque_ejecucion return '}' ELSE '{' bloque_ejecucion return ',' '}' END_IF  (46)
	sentenciaIfRetorno : IF '(' expresion comparador expresion . ')' '{' bloque_ejecucion return '}' ELSE '{' bloque_ejecucion return ',' '}'  (47)
	sentenciaIfRetorno : IF '(' expresion comparador expresion . ')' '{' bloque_ejecucion return '}' END_IF  (48)
	sentenciaIfRetorno : IF '(' expresion comparador expresion . ')' '{' bloque_ejecucion return '}'  (49)
	sentenciaIfRetorno : IF '(' expresion comparador expresion . ')' return ',' ELSE sentenciaEjecutable ',' END_IF  (50)
	sentenciaIfRetorno : IF '(' expresion comparador expresion . ')' return ',' ELSE '{' bloque_ejecucion return ',' '}' END_IF  (51)
	sentenciaIfRetorno : IF '(' expresion comparador expresion . ')' return ',' END_IF  (52)
	expresion : expresion . '+' termino  (90)
	expresion : expresion . '-' termino  (91)

	'+'  shift 71
	'-'  shift 72
	')'  shift 201
	.  error


state 196
	sentenciaWhile : WHILE '(' expresion comparador expresion ')' DO '{' bloque_ejecucion '}' .  (56)

	.  reduce 56


state 197
	declaracionMetodo : VOID ID '(' tipo ID ')' '{' cuerpoMetodo . '}'  (63)

	'}'  shift 202
	.  error


state 198
	sentenciaIf : IF '(' expresion comparador expresion ')' '{' bloque_ejecucion '}' ELSE '{' . bloque_ejecucion '}' END_IF  (39)
	sentenciaIf : IF '(' expresion comparador expresion ')' '{' bloque_ejecucion '}' ELSE '{' . bloque_ejecucion '}'  (40)

	ID  shift 6
	CADENA  shift 7
	CLASS  shift 8
	IF  shift 9
	PRINT  shift 10
	VOID  shift 11
	SHORT  shift 12
	ULONG  shift 13
	FLOAT  shift 14
	WHILE  shift 15
	.  error

	sentenciaDeclarativa  goto 162
	sentenciaEjecutable  goto 163
	declaracionClase  goto 20
	referenciaClase  goto 21
	asignacion  goto 22
	invocacionMetodo  goto 23
	tipo  goto 24
	sentenciaIf  goto 25
	sentenciaWhile  goto 26
	print  goto 27
	declaracionFuncion  goto 28
	declaracion  goto 29
	bloque_ejecucion  goto 203


state 199
	sentenciaIf : IF '(' expresion comparador expresion ')' sentenciaEjecutable ',' ELSE '{' bloque_ejecucion . '}' END_IF  (44)
	bloque_ejecucion : bloque_ejecucion . sentenciaEjecutable ','  (53)

	ID  shift 52
	CADENA  shift 7
	IF  shift 9
	PRINT  shift 10
	WHILE  shift 15
	'}'  shift 204
	.  error

	sentenciaEjecutable  goto 181
	referenciaClase  goto 21
	asignacion  goto 22
	invocacionMetodo  goto 23
	sentenciaIf  goto 25
	sentenciaWhile  goto 26
	print  goto 27


state 200
	sentenciaIf : IF '(' expresion comparador expresion ')' sentenciaEjecutable ',' ELSE sentenciaEjecutable ',' . END_IF  (43)

	END_IF  shift 205
	.  error


state 201
	sentenciaIf : IF '(' expresion comparador expresion ')' . '{' bloque_ejecucion '}' ELSE '{' bloque_ejecucion '}' END_IF  (39)
	sentenciaIf : IF '(' expresion comparador expresion ')' . '{' bloque_ejecucion '}' ELSE '{' bloque_ejecucion '}'  (40)
	sentenciaIf : IF '(' expresion comparador expresion ')' . '{' bloque_ejecucion '}' END_IF  (41)
	sentenciaIf : IF '(' expresion comparador expresion ')' . '{' bloque_ejecucion '}'  (42)
	sentenciaIf : IF '(' expresion comparador expresion ')' . sentenciaEjecutable ',' ELSE sentenciaEjecutable ',' END_IF  (43)
	sentenciaIf : IF '(' expresion comparador expresion ')' . sentenciaEjecutable ',' ELSE '{' bloque_ejecucion '}' END_IF  (44)
	sentenciaIf : IF '(' expresion comparador expresion ')' . sentenciaEjecutable ',' END_IF  (45)
	sentenciaIfRetorno : IF '(' expresion comparador expresion ')' . '{' bloque_ejecucion return '}' ELSE '{' bloque_ejecucion return ',' '}' END_IF  (46)
	sentenciaIfRetorno : IF '(' expresion comparador expresion ')' . '{' bloque_ejecucion return '}' ELSE '{' bloque_ejecucion return ',' '}'  (47)
	sentenciaIfRetorno : IF '(' expresion comparador expresion ')' . '{' bloque_ejecucion return '}' END_IF  (48)
	sentenciaIfRetorno : IF '(' expresion comparador expresion ')' . '{' bloque_ejecucion return '}'  (49)
	sentenciaIfRetorno : IF '(' expresion comparador expresion ')' . return ',' ELSE sentenciaEjecutable ',' END_IF  (50)
	sentenciaIfRetorno : IF '(' expresion comparador expresion ')' . return ',' ELSE '{' bloque_ejecucion return ',' '}' END_IF  (51)
	sentenciaIfRetorno : IF '(' expresion comparador expresion ')' . return ',' END_IF  (52)

	ID  shift 52
	CADENA  shift 7
	IF  shift 9
	PRINT  shift 10
	WHILE  shift 15
	RETURN  shift 149
	'{'  shift 206
	.  error

	sentenciaEjecutable  goto 142
	referenciaClase  goto 21
	asignacion  goto 22
	invocacionMetodo  goto 23
	sentenciaIf  goto 25
	sentenciaWhile  goto 26
	print  goto 27
	return  goto 207


state 202
	declaracionMetodo : VOID ID '(' tipo ID ')' '{' cuerpoMetodo '}' .  (63)

	.  reduce 63


state 203
	sentenciaIf : IF '(' expresion comparador expresion ')' '{' bloque_ejecucion '}' ELSE '{' bloque_ejecucion . '}' END_IF  (39)
	sentenciaIf : IF '(' expresion comparador expresion ')' '{' bloque_ejecucion '}' ELSE '{' bloque_ejecucion . '}'  (40)
	bloque_ejecucion : bloque_ejecucion . sentenciaEjecutable ','  (53)

	ID  shift 52
	CADENA  shift 7
	IF  shift 9
	PRINT  shift 10
	WHILE  shift 15
	'}'  shift 208
	.  error

	sentenciaEjecutable  goto 181
	referenciaClase  goto 21
	asignacion  goto 22
	invocacionMetodo  goto 23
	sentenciaIf  goto 25
	sentenciaWhile  goto 26
	print  goto 27


state 204
	sentenciaIf : IF '(' expresion comparador expresion ')' sentenciaEjecutable ',' ELSE '{' bloque_ejecucion '}' . END_IF  (44)

	END_IF  shift 209
	.  error


state 205
	sentenciaIf : IF '(' expresion comparador expresion ')' sentenciaEjecutable ',' ELSE sentenciaEjecutable ',' END_IF .  (43)

	.  reduce 43


state 206
	sentenciaIf : IF '(' expresion comparador expresion ')' '{' . bloque_ejecucion '}' ELSE '{' bloque_ejecucion '}' END_IF  (39)
	sentenciaIf : IF '(' expresion comparador expresion ')' '{' . bloque_ejecucion '}' ELSE '{' bloque_ejecucion '}'  (40)
	sentenciaIf : IF '(' expresion comparador expresion ')' '{' . bloque_ejecucion '}' END_IF  (41)
	sentenciaIf : IF '(' expresion comparador expresion ')' '{' . bloque_ejecucion '}'  (42)
	sentenciaIfRetorno : IF '(' expresion comparador expresion ')' '{' . bloque_ejecucion return '}' ELSE '{' bloque_ejecucion return ',' '}' END_IF  (46)
	sentenciaIfRetorno : IF '(' expresion comparador expresion ')' '{' . bloque_ejecucion return '}' ELSE '{' bloque_ejecucion return ',' '}'  (47)
	sentenciaIfRetorno : IF '(' expresion comparador expresion ')' '{' . bloque_ejecucion return '}' END_IF  (48)
	sentenciaIfRetorno : IF '(' expresion comparador expresion ')' '{' . bloque_ejecucion return '}'  (49)

	ID  shift 6
	CADENA  shift 7
	CLASS  shift 8
	IF  shift 9
	PRINT  shift 10
	VOID  shift 11
	SHORT  shift 12
	ULONG  shift 13
	FLOAT  shift 14
	WHILE  shift 15
	.  error

	sentenciaDeclarativa  goto 162
	sentenciaEjecutable  goto 163
	declaracionClase  goto 20
	referenciaClase  goto 21
	asignacion  goto 22
	invocacionMetodo  goto 23
	tipo  goto 24
	sentenciaIf  goto 25
	sentenciaWhile  goto 26
	print  goto 27
	declaracionFuncion  goto 28
	declaracion  goto 29
	bloque_ejecucion  goto 210


state 207
	sentenciaIfRetorno : IF '(' expresion comparador expresion ')' return . ',' ELSE sentenciaEjecutable ',' END_IF  (50)
	sentenciaIfRetorno : IF '(' expresion comparador expresion ')' return . ',' ELSE '{' bloque_ejecucion return ',' '}' END_IF  (51)
	sentenciaIfRetorno : IF '(' expresion comparador expresion ')' return . ',' END_IF  (52)

	','  shift 211
	.  error


state 208
	sentenciaIf : IF '(' expresion comparador expresion ')' '{' bloque_ejecucion '}' ELSE '{' bloque_ejecucion '}' . END_IF  (39)
	sentenciaIf : IF '(' expresion comparador expresion ')' '{' bloque_ejecucion '}' ELSE '{' bloque_ejecucion '}' .  (40)

	END_IF  shift 212
	','  reduce 40


state 209
	sentenciaIf : IF '(' expresion comparador expresion ')' sentenciaEjecutable ',' ELSE '{' bloque_ejecucion '}' END_IF .  (44)

	.  reduce 44


state 210
	sentenciaIf : IF '(' expresion comparador expresion ')' '{' bloque_ejecucion . '}' ELSE '{' bloque_ejecucion '}' END_IF  (39)
	sentenciaIf : IF '(' expresion comparador expresion ')' '{' bloque_ejecucion . '}' ELSE '{' bloque_ejecucion '}'  (40)
	sentenciaIf : IF '(' expresion comparador expresion ')' '{' bloque_ejecucion . '}' END_IF  (41)
	sentenciaIf : IF '(' expresion comparador expresion ')' '{' bloque_ejecucion . '}'  (42)
	sentenciaIfRetorno : IF '(' expresion comparador expresion ')' '{' bloque_ejecucion . return '}' ELSE '{' bloque_ejecucion return ',' '}' END_IF  (46)
	sentenciaIfRetorno : IF '(' expresion comparador expresion ')' '{' bloque_ejecucion . return '}' ELSE '{' bloque_ejecucion return ',' '}'  (47)
	sentenciaIfRetorno : IF '(' expresion comparador expresion ')' '{' bloque_ejecucion . return '}' END_IF  (48)
	sentenciaIfRetorno : IF '(' expresion comparador expresion ')' '{' bloque_ejecucion . return '}'  (49)
	bloque_ejecucion : bloque_ejecucion . sentenciaEjecutable ','  (53)

	ID  shift 52
	CADENA  shift 7
	IF  shift 9
	PRINT  shift 10
	WHILE  shift 15
	RETURN  shift 149
	'}'  shift 180
	.  error

	sentenciaEjecutable  goto 181
	referenciaClase  goto 21
	asignacion  goto 22
	invocacionMetodo  goto 23
	sentenciaIf  goto 25
	sentenciaWhile  goto 26
	print  goto 27
	return  goto 213


state 211
	sentenciaIfRetorno : IF '(' expresion comparador expresion ')' return ',' . ELSE sentenciaEjecutable ',' END_IF  (50)
	sentenciaIfRetorno : IF '(' expresion comparador expresion ')' return ',' . ELSE '{' bloque_ejecucion return ',' '}' END_IF  (51)
	sentenciaIfRetorno : IF '(' expresion comparador expresion ')' return ',' . END_IF  (52)

	ELSE  shift 214
	END_IF  shift 215
	.  error


state 212
	sentenciaIf : IF '(' expresion comparador expresion ')' '{' bloque_ejecucion '}' ELSE '{' bloque_ejecucion '}' END_IF .  (39)

	.  reduce 39


state 213
	sentenciaIfRetorno : IF '(' expresion comparador expresion ')' '{' bloque_ejecucion return . '}' ELSE '{' bloque_ejecucion return ',' '}' END_IF  (46)
	sentenciaIfRetorno : IF '(' expresion comparador expresion ')' '{' bloque_ejecucion return . '}' ELSE '{' bloque_ejecucion return ',' '}'  (47)
	sentenciaIfRetorno : IF '(' expresion comparador expresion ')' '{' bloque_ejecucion return . '}' END_IF  (48)
	sentenciaIfRetorno : IF '(' expresion comparador expresion ')' '{' bloque_ejecucion return . '}'  (49)

	'}'  shift 216
	.  error


state 214
	sentenciaIfRetorno : IF '(' expresion comparador expresion ')' return ',' ELSE . sentenciaEjecutable ',' END_IF  (50)
	sentenciaIfRetorno : IF '(' expresion comparador expresion ')' return ',' ELSE . '{' bloque_ejecucion return ',' '}' END_IF  (51)

	ID  shift 52
	CADENA  shift 7
	IF  shift 9
	PRINT  shift 10
	WHILE  shift 15
	'{'  shift 217
	.  error

	sentenciaEjecutable  goto 218
	referenciaClase  goto 21
	asignacion  goto 22
	invocacionMetodo  goto 23
	sentenciaIf  goto 25
	sentenciaWhile  goto 26
	print  goto 27


state 215
	sentenciaIfRetorno : IF '(' expresion comparador expresion ')' return ',' END_IF .  (52)

	.  reduce 52


state 216
	sentenciaIfRetorno : IF '(' expresion comparador expresion ')' '{' bloque_ejecucion return '}' . ELSE '{' bloque_ejecucion return ',' '}' END_IF  (46)
	sentenciaIfRetorno : IF '(' expresion comparador expresion ')' '{' bloque_ejecucion return '}' . ELSE '{' bloque_ejecucion return ',' '}'  (47)
	sentenciaIfRetorno : IF '(' expresion comparador expresion ')' '{' bloque_ejecucion return '}' . END_IF  (48)
	sentenciaIfRetorno : IF '(' expresion comparador expresion ')' '{' bloque_ejecucion return '}' .  (49)

	ELSE  shift 219
	END_IF  shift 220
	','  reduce 49


state 217
	sentenciaIfRetorno : IF '(' expresion comparador expresion ')' return ',' ELSE '{' . bloque_ejecucion return ',' '}' END_IF  (51)

	ID  shift 6
	CADENA  shift 7
	CLASS  shift 8
	IF  shift 9
	PRINT  shift 10
	VOID  shift 11
	SHORT  shift 12
	ULONG  shift 13
	FLOAT  shift 14
	WHILE  shift 15
	.  error

	sentenciaDeclarativa  goto 162
	sentenciaEjecutable  goto 163
	declaracionClase  goto 20
	referenciaClase  goto 21
	asignacion  goto 22
	invocacionMetodo  goto 23
	tipo  goto 24
	sentenciaIf  goto 25
	sentenciaWhile  goto 26
	print  goto 27
	declaracionFuncion  goto 28
	declaracion  goto 29
	bloque_ejecucion  goto 221


state 218
	sentenciaIfRetorno : IF '(' expresion comparador expresion ')' return ',' ELSE sentenciaEjecutable . ',' END_IF  (50)

	','  shift 222
	.  error


state 219
	sentenciaIfRetorno : IF '(' expresion comparador expresion ')' '{' bloque_ejecucion return '}' ELSE . '{' bloque_ejecucion return ',' '}' END_IF  (46)
	sentenciaIfRetorno : IF '(' expresion comparador expresion ')' '{' bloque_ejecucion return '}' ELSE . '{' bloque_ejecucion return ',' '}'  (47)

	'{'  shift 223
	.  error


state 220
	sentenciaIfRetorno : IF '(' expresion comparador expresion ')' '{' bloque_ejecucion return '}' END_IF .  (48)

	.  reduce 48


state 221
	sentenciaIfRetorno : IF '(' expresion comparador expresion ')' return ',' ELSE '{' bloque_ejecucion . return ',' '}' END_IF  (51)
	bloque_ejecucion : bloque_ejecucion . sentenciaEjecutable ','  (53)

	ID  shift 52
	CADENA  shift 7
	IF  shift 9
	PRINT  shift 10
	WHILE  shift 15
	RETURN  shift 149
	.  error

	sentenciaEjecutable  goto 181
	referenciaClase  goto 21
	asignacion  goto 22
	invocacionMetodo  goto 23
	sentenciaIf  goto 25
	sentenciaWhile  goto 26
	print  goto 27
	return  goto 224


state 222
	sentenciaIfRetorno : IF '(' expresion comparador expresion ')' return ',' ELSE sentenciaEjecutable ',' . END_IF  (50)

	END_IF  shift 225
	.  error


state 223
	sentenciaIfRetorno : IF '(' expresion comparador expresion ')' '{' bloque_ejecucion return '}' ELSE '{' . bloque_ejecucion return ',' '}' END_IF  (46)
	sentenciaIfRetorno : IF '(' expresion comparador expresion ')' '{' bloque_ejecucion return '}' ELSE '{' . bloque_ejecucion return ',' '}'  (47)

	ID  shift 6
	CADENA  shift 7
	CLASS  shift 8
	IF  shift 9
	PRINT  shift 10
	VOID  shift 11
	SHORT  shift 12
	ULONG  shift 13
	FLOAT  shift 14
	WHILE  shift 15
	.  error

	sentenciaDeclarativa  goto 162
	sentenciaEjecutable  goto 163
	declaracionClase  goto 20
	referenciaClase  goto 21
	asignacion  goto 22
	invocacionMetodo  goto 23
	tipo  goto 24
	sentenciaIf  goto 25
	sentenciaWhile  goto 26
	print  goto 27
	declaracionFuncion  goto 28
	declaracion  goto 29
	bloque_ejecucion  goto 226


state 224
	sentenciaIfRetorno : IF '(' expresion comparador expresion ')' return ',' ELSE '{' bloque_ejecucion return . ',' '}' END_IF  (51)

	','  shift 227
	.  error


state 225
	sentenciaIfRetorno : IF '(' expresion comparador expresion ')' return ',' ELSE sentenciaEjecutable ',' END_IF .  (50)

	.  reduce 50


state 226
	sentenciaIfRetorno : IF '(' expresion comparador expresion ')' '{' bloque_ejecucion return '}' ELSE '{' bloque_ejecucion . return ',' '}' END_IF  (46)
	sentenciaIfRetorno : IF '(' expresion comparador expresion ')' '{' bloque_ejecucion return '}' ELSE '{' bloque_ejecucion . return ',' '}'  (47)
	bloque_ejecucion : bloque_ejecucion . sentenciaEjecutable ','  (53)

	ID  shift 52
	CADENA  shift 7
	IF  shift 9
	PRINT  shift 10
	WHILE  shift 15
	RETURN  shift 149
	.  error

	sentenciaEjecutable  goto 181
	referenciaClase  goto 21
	asignacion  goto 22
	invocacionMetodo  goto 23
	sentenciaIf  goto 25
	sentenciaWhile  goto 26
	print  goto 27
	return  goto 228


state 227
	sentenciaIfRetorno : IF '(' expresion comparador expresion ')' return ',' ELSE '{' bloque_ejecucion return ',' . '}' END_IF  (51)

	'}'  shift 229
	.  error


state 228
	sentenciaIfRetorno : IF '(' expresion comparador expresion ')' '{' bloque_ejecucion return '}' ELSE '{' bloque_ejecucion return . ',' '}' END_IF  (46)
	sentenciaIfRetorno : IF '(' expresion comparador expresion ')' '{' bloque_ejecucion return '}' ELSE '{' bloque_ejecucion return . ',' '}'  (47)

	','  shift 230
	.  error


state 229
	sentenciaIfRetorno : IF '(' expresion comparador expresion ')' return ',' ELSE '{' bloque_ejecucion return ',' '}' . END_IF  (51)

	END_IF  shift 231
	.  error


state 230
	sentenciaIfRetorno : IF '(' expresion comparador expresion ')' '{' bloque_ejecucion return '}' ELSE '{' bloque_ejecucion return ',' . '}' END_IF  (46)
	sentenciaIfRetorno : IF '(' expresion comparador expresion ')' '{' bloque_ejecucion return '}' ELSE '{' bloque_ejecucion return ',' . '}'  (47)

	'}'  shift 232
	.  error


state 231
	sentenciaIfRetorno : IF '(' expresion comparador expresion ')' return ',' ELSE '{' bloque_ejecucion return ',' '}' END_IF .  (51)

	.  reduce 51


state 232
	sentenciaIfRetorno : IF '(' expresion comparador expresion ')' '{' bloque_ejecucion return '}' ELSE '{' bloque_ejecucion return ',' '}' . END_IF  (46)
	sentenciaIfRetorno : IF '(' expresion comparador expresion ')' '{' bloque_ejecucion return '}' ELSE '{' bloque_ejecucion return ',' '}' .  (47)

	END_IF  shift 233
	','  reduce 47


state 233
	sentenciaIfRetorno : IF '(' expresion comparador expresion ')' '{' bloque_ejecucion return '}' ELSE '{' bloque_ejecucion return ',' '}' END_IF .  (46)

	.  reduce 46


36 terminals, 32 nonterminals
107 grammar rules, 234 states
