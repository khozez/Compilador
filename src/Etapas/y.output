   0  $accept : programa $end

   1  programa : '{' cuerpoPrograma '}'
   2           | '{' '}'
   3           | cuerpoPrograma '}'
   4           | '{' cuerpoPrograma

   5  cuerpoPrograma : sentencia
   6                 | cuerpoPrograma sentencia

   7  sentencia : sentenciaDeclarativa
   8            | sentenciaEjecutable ','

   9  encabezadoClase : CLASS ID

  10  encabezadoForward : CLASS ID

  11  declaracionClase : encabezadoClase '{' cuerpoClase '}'
  12                   | encabezadoForward ','
  13                   | encabezadoClase

  14  cuerpoClase : cuerpoClase seccionAtributos
  15              | cuerpoClase declaracionMetodo ','
  16              | declaracionMetodo ','
  17              | seccionAtributos

  18  referenciaClase : listaReferencia asignacionClase
  19                  | listaReferencia referenciaMetodo

  20  asignacionClase : ID '=' expresion

  21  referenciaMetodo : ID '(' ')'
  22                   | ID '(' expresion ')'

  23  listaReferencia : listaReferencia ID '.'
  24                  | ID '.'

  25  seccionAtributos : tipo listaAtributos
  26                   | herenciaNombre

  27  listaAtributos : ID ';' listaAtributos
  28                 | ID ','
  29                 | ID

  30  herenciaNombre : ID ','

  31  sentenciaEjecutable : asignacion
  32                      | sentenciaIf
  33                      | sentenciaWhile
  34                      | print
  35                      | invocacionMetodo
  36                      | referenciaClase

  37  sentenciaDeclarativa : declaracionFuncion
  38                       | declaracion ','
  39                       | declaracionClase

  40  sentenciaDeclarativaMetodo : declaracionFuncionLocal
  41                             | declaracion ','

  42  asignacion : ID '=' expresion
  43             | ID IGUAL expresion

  44  sentenciaIf : IF '(' condicion ')' '{' bloque_ejecucion '}' ELSE '{' bloque_ejecucion '}' END_IF
  45              | IF '(' condicion ')' '{' bloque_ejecucion '}' ELSE '{' bloque_ejecucion '}'
  46              | IF '(' condicion ')' '{' bloque_ejecucion '}' END_IF
  47              | IF '(' condicion ')' '{' bloque_ejecucion '}'
  48              | IF '(' condicion ')' sentenciaEjecutable ',' ELSE sentenciaEjecutable ',' END_IF
  49              | IF '(' condicion ')' sentenciaEjecutable ',' ELSE '{' bloque_ejecucion '}' END_IF
  50              | IF '(' condicion ')' sentenciaEjecutable ',' END_IF

  51  condicion : expresion comparador expresion
  52            | comparador expresion
  53            | expresion comparador

  54  sentenciaIfRetorno : IF '(' condicion ')' '{' bloque_ejecucion_return '}' ELSE '{' bloque_ejecucion_return '}' END_IF
  55                     | IF '(' condicion ')' '{' bloque_ejecucion_return '}' ELSE '{' bloque_ejecucion_return '}'
  56                     | IF '(' condicion ')' '{' bloque_ejecucion_return '}' END_IF
  57                     | IF '(' condicion ')' '{' bloque_ejecucion_return '}'
  58                     | IF '(' condicion ')' sentencia_ejecutable_return ',' ELSE sentencia_ejecutable_return ',' END_IF
  59                     | IF '(' condicion ')' sentencia_ejecutable_return ',' ELSE '{' bloque_ejecucion_return '}' END_IF
  60                     | IF '(' condicion ')' sentencia_ejecutable_return ',' END_IF

  61  sentencia_ejecutable_return : print
  62                              | asignacion
  63                              | sentenciaIfRetorno
  64                              | sentenciaWhile
  65                              | invocacionMetodo
  66                              | referenciaClase
  67                              | return

  68  bloque_ejecucion : bloque_ejecucion sentenciaEjecutable ','
  69                   | sentenciaEjecutable ','

  70  bloque_ejecucion_return : bloque_ejecucion_return sentencia_ejecutable_return ','
  71                          | sentencia_ejecutable_return ','

  72  sentenciaWhile : WHILE '(' condicion ')' DO '{' bloque_ejecucion '}'
  73                 | WHILE '(' condicion ')' DO sentenciaEjecutable

  74  print : PRINT CADENA
  75        | CADENA

  76  return : RETURN

  77  parametro : tipo ID

  78  encabezadoMetodo : VOID ID '(' parametro ')'
  79                   | VOID ID '(' ID ')'
  80                   | VOID ID '(' ')'

  81  declaracionMetodo : encabezadoMetodo '{' cuerpoMetodo '}'

  82  encabezadoFuncion : VOID ID '(' parametro ')'
  83                    | VOID ID '(' ID ')'
  84                    | VOID ID '(' ')'

  85  declaracionFuncion : encabezadoFuncion '{' cuerpoFuncion '}'

  86  declaracionFuncionLocal : encabezadoFuncion '{' cuerpoFuncion '}'

  87  cuerpoMetodo : listaSentenciasMetodo

  88  cuerpoFuncion : listaSentenciasFuncion

  89  listaSentenciasMetodo : listaSentenciasMetodo sentenciaDeclarativaMetodo
  90                        | listaSentenciasMetodo sentenciaEjecutable ','
  91                        | sentenciaDeclarativaMetodo
  92                        | sentenciaEjecutable ','

  93  listaSentenciasFuncion : listaSentenciasFuncion sentenciaDeclarativaMetodo
  94                         | listaSentenciasFuncion sentencia_ejecutable_return ','
  95                         | sentenciaDeclarativaMetodo
  96                         | sentencia_ejecutable_return ','

  97  invocacionMetodo : ID '(' expresion ')'
  98                   | ID '(' ')'
  99                   | ID '(' asignacion ')'
 100                   | ID '(' tipo asignacion ')'

 101  declaracion : tipo listaDeclaracion

 102  listaDeclaracion : ID ';' listaDeclaracion
 103                   | ID

 104  tipo : SHORT
 105       | ULONG
 106       | FLOAT
 107       | ID

 108  expresion : termino
 109            | expresion '+' termino
 110            | expresion '-' termino

 111  termino : factor
 112          | termino '*' factor
 113          | termino '/' factor

 114  factor : ID
 115         | ID MENOSMENOS
 116         | CTE
 117         | '-' CTE
 118         | '(' expresion ')'

 119  comparador : MAYORIGUAL
 120             | MENORIGUAL
 121             | IGUAL
 122             | DISTINTO
 123             | '<'
 124             | '>'
 125             | '='

state 0
	$accept : . programa $end  (0)

	ID  shift 1
	CADENA  shift 2
	CLASS  shift 3
	IF  shift 4
	PRINT  shift 5
	VOID  shift 6
	SHORT  shift 7
	ULONG  shift 8
	FLOAT  shift 9
	WHILE  shift 10
	'{'  shift 11
	.  error

	programa  goto 12
	cuerpoPrograma  goto 13
	sentencia  goto 14
	sentenciaDeclarativa  goto 15
	sentenciaEjecutable  goto 16
	encabezadoClase  goto 17
	encabezadoForward  goto 18
	declaracionClase  goto 19
	referenciaClase  goto 20
	listaReferencia  goto 21
	tipo  goto 22
	asignacion  goto 23
	sentenciaIf  goto 24
	sentenciaWhile  goto 25
	print  goto 26
	invocacionMetodo  goto 27
	declaracionFuncion  goto 28
	declaracion  goto 29
	encabezadoFuncion  goto 30


state 1
	listaReferencia : ID . '.'  (24)
	asignacion : ID . '=' expresion  (42)
	asignacion : ID . IGUAL expresion  (43)
	invocacionMetodo : ID . '(' expresion ')'  (97)
	invocacionMetodo : ID . '(' ')'  (98)
	invocacionMetodo : ID . '(' asignacion ')'  (99)
	invocacionMetodo : ID . '(' tipo asignacion ')'  (100)
	tipo : ID .  (107)

	IGUAL  shift 31
	'='  shift 32
	'('  shift 33
	'.'  shift 34
	ID  reduce 107


state 2
	print : CADENA .  (75)

	.  reduce 75


state 3
	encabezadoClase : CLASS . ID  (9)
	encabezadoForward : CLASS . ID  (10)

	ID  shift 35
	.  error


state 4
	sentenciaIf : IF . '(' condicion ')' '{' bloque_ejecucion '}' ELSE '{' bloque_ejecucion '}' END_IF  (44)
	sentenciaIf : IF . '(' condicion ')' '{' bloque_ejecucion '}' ELSE '{' bloque_ejecucion '}'  (45)
	sentenciaIf : IF . '(' condicion ')' '{' bloque_ejecucion '}' END_IF  (46)
	sentenciaIf : IF . '(' condicion ')' '{' bloque_ejecucion '}'  (47)
	sentenciaIf : IF . '(' condicion ')' sentenciaEjecutable ',' ELSE sentenciaEjecutable ',' END_IF  (48)
	sentenciaIf : IF . '(' condicion ')' sentenciaEjecutable ',' ELSE '{' bloque_ejecucion '}' END_IF  (49)
	sentenciaIf : IF . '(' condicion ')' sentenciaEjecutable ',' END_IF  (50)

	'('  shift 36
	.  error


state 5
	print : PRINT . CADENA  (74)

	CADENA  shift 37
	.  error


state 6
	encabezadoFuncion : VOID . ID '(' parametro ')'  (82)
	encabezadoFuncion : VOID . ID '(' ID ')'  (83)
	encabezadoFuncion : VOID . ID '(' ')'  (84)

	ID  shift 38
	.  error


state 7
	tipo : SHORT .  (104)

	.  reduce 104


state 8
	tipo : ULONG .  (105)

	.  reduce 105


state 9
	tipo : FLOAT .  (106)

	.  reduce 106


state 10
	sentenciaWhile : WHILE . '(' condicion ')' DO '{' bloque_ejecucion '}'  (72)
	sentenciaWhile : WHILE . '(' condicion ')' DO sentenciaEjecutable  (73)

	'('  shift 39
	.  error


state 11
	programa : '{' . cuerpoPrograma '}'  (1)
	programa : '{' . '}'  (2)
	programa : '{' . cuerpoPrograma  (4)

	ID  shift 1
	CADENA  shift 2
	CLASS  shift 3
	IF  shift 4
	PRINT  shift 5
	VOID  shift 6
	SHORT  shift 7
	ULONG  shift 8
	FLOAT  shift 9
	WHILE  shift 10
	'}'  shift 40
	.  error

	cuerpoPrograma  goto 41
	sentencia  goto 14
	sentenciaDeclarativa  goto 15
	sentenciaEjecutable  goto 16
	encabezadoClase  goto 17
	encabezadoForward  goto 18
	declaracionClase  goto 19
	referenciaClase  goto 20
	listaReferencia  goto 21
	tipo  goto 22
	asignacion  goto 23
	sentenciaIf  goto 24
	sentenciaWhile  goto 25
	print  goto 26
	invocacionMetodo  goto 27
	declaracionFuncion  goto 28
	declaracion  goto 29
	encabezadoFuncion  goto 30


state 12
	$accept : programa . $end  (0)

	$end  accept


state 13
	programa : cuerpoPrograma . '}'  (3)
	cuerpoPrograma : cuerpoPrograma . sentencia  (6)

	ID  shift 1
	CADENA  shift 2
	CLASS  shift 3
	IF  shift 4
	PRINT  shift 5
	VOID  shift 6
	SHORT  shift 7
	ULONG  shift 8
	FLOAT  shift 9
	WHILE  shift 10
	'}'  shift 42
	.  error

	sentencia  goto 43
	sentenciaDeclarativa  goto 15
	sentenciaEjecutable  goto 16
	encabezadoClase  goto 17
	encabezadoForward  goto 18
	declaracionClase  goto 19
	referenciaClase  goto 20
	listaReferencia  goto 21
	tipo  goto 22
	asignacion  goto 23
	sentenciaIf  goto 24
	sentenciaWhile  goto 25
	print  goto 26
	invocacionMetodo  goto 27
	declaracionFuncion  goto 28
	declaracion  goto 29
	encabezadoFuncion  goto 30


state 14
	cuerpoPrograma : sentencia .  (5)

	.  reduce 5


state 15
	sentencia : sentenciaDeclarativa .  (7)

	.  reduce 7


state 16
	sentencia : sentenciaEjecutable . ','  (8)

	','  shift 44
	.  error


state 17
	declaracionClase : encabezadoClase . '{' cuerpoClase '}'  (11)
	declaracionClase : encabezadoClase .  (13)

	'{'  shift 45
	$end  reduce 13
	ID  reduce 13
	CADENA  reduce 13
	CLASS  reduce 13
	IF  reduce 13
	PRINT  reduce 13
	VOID  reduce 13
	SHORT  reduce 13
	ULONG  reduce 13
	FLOAT  reduce 13
	WHILE  reduce 13
	'}'  reduce 13


state 18
	declaracionClase : encabezadoForward . ','  (12)

	','  shift 46
	.  error


state 19
	sentenciaDeclarativa : declaracionClase .  (39)

	.  reduce 39


state 20
	sentenciaEjecutable : referenciaClase .  (36)

	.  reduce 36


state 21
	referenciaClase : listaReferencia . asignacionClase  (18)
	referenciaClase : listaReferencia . referenciaMetodo  (19)
	listaReferencia : listaReferencia . ID '.'  (23)

	ID  shift 47
	.  error

	asignacionClase  goto 48
	referenciaMetodo  goto 49


state 22
	declaracion : tipo . listaDeclaracion  (101)

	ID  shift 50
	.  error

	listaDeclaracion  goto 51


state 23
	sentenciaEjecutable : asignacion .  (31)

	.  reduce 31


state 24
	sentenciaEjecutable : sentenciaIf .  (32)

	.  reduce 32


state 25
	sentenciaEjecutable : sentenciaWhile .  (33)

	.  reduce 33


state 26
	sentenciaEjecutable : print .  (34)

	.  reduce 34


state 27
	sentenciaEjecutable : invocacionMetodo .  (35)

	.  reduce 35


state 28
	sentenciaDeclarativa : declaracionFuncion .  (37)

	.  reduce 37


state 29
	sentenciaDeclarativa : declaracion . ','  (38)

	','  shift 52
	.  error


state 30
	declaracionFuncion : encabezadoFuncion . '{' cuerpoFuncion '}'  (85)

	'{'  shift 53
	.  error


state 31
	asignacion : ID IGUAL . expresion  (43)

	ID  shift 54
	CTE  shift 55
	'-'  shift 56
	'('  shift 57
	.  error

	expresion  goto 58
	termino  goto 59
	factor  goto 60


state 32
	asignacion : ID '=' . expresion  (42)

	ID  shift 54
	CTE  shift 55
	'-'  shift 56
	'('  shift 57
	.  error

	expresion  goto 61
	termino  goto 59
	factor  goto 60


state 33
	invocacionMetodo : ID '(' . expresion ')'  (97)
	invocacionMetodo : ID '(' . ')'  (98)
	invocacionMetodo : ID '(' . asignacion ')'  (99)
	invocacionMetodo : ID '(' . tipo asignacion ')'  (100)

	ID  shift 62
	CTE  shift 55
	SHORT  shift 7
	ULONG  shift 8
	FLOAT  shift 9
	'-'  shift 56
	'('  shift 57
	')'  shift 63
	.  error

	expresion  goto 64
	tipo  goto 65
	asignacion  goto 66
	termino  goto 59
	factor  goto 60


state 34
	listaReferencia : ID '.' .  (24)

	.  reduce 24


state 35
	encabezadoClase : CLASS ID .  (9)
	encabezadoForward : CLASS ID .  (10)

	$end  reduce 9
	ID  reduce 9
	CADENA  reduce 9
	CLASS  reduce 9
	IF  reduce 9
	PRINT  reduce 9
	VOID  reduce 9
	SHORT  reduce 9
	ULONG  reduce 9
	FLOAT  reduce 9
	WHILE  reduce 9
	'{'  reduce 9
	'}'  reduce 9
	','  reduce 10


state 36
	sentenciaIf : IF '(' . condicion ')' '{' bloque_ejecucion '}' ELSE '{' bloque_ejecucion '}' END_IF  (44)
	sentenciaIf : IF '(' . condicion ')' '{' bloque_ejecucion '}' ELSE '{' bloque_ejecucion '}'  (45)
	sentenciaIf : IF '(' . condicion ')' '{' bloque_ejecucion '}' END_IF  (46)
	sentenciaIf : IF '(' . condicion ')' '{' bloque_ejecucion '}'  (47)
	sentenciaIf : IF '(' . condicion ')' sentenciaEjecutable ',' ELSE sentenciaEjecutable ',' END_IF  (48)
	sentenciaIf : IF '(' . condicion ')' sentenciaEjecutable ',' ELSE '{' bloque_ejecucion '}' END_IF  (49)
	sentenciaIf : IF '(' . condicion ')' sentenciaEjecutable ',' END_IF  (50)

	ID  shift 54
	CTE  shift 55
	MAYORIGUAL  shift 67
	MENORIGUAL  shift 68
	IGUAL  shift 69
	DISTINTO  shift 70
	'-'  shift 56
	'='  shift 71
	'('  shift 57
	'<'  shift 72
	'>'  shift 73
	.  error

	expresion  goto 74
	condicion  goto 75
	comparador  goto 76
	termino  goto 59
	factor  goto 60


state 37
	print : PRINT CADENA .  (74)

	.  reduce 74


state 38
	encabezadoFuncion : VOID ID . '(' parametro ')'  (82)
	encabezadoFuncion : VOID ID . '(' ID ')'  (83)
	encabezadoFuncion : VOID ID . '(' ')'  (84)

	'('  shift 77
	.  error


state 39
	sentenciaWhile : WHILE '(' . condicion ')' DO '{' bloque_ejecucion '}'  (72)
	sentenciaWhile : WHILE '(' . condicion ')' DO sentenciaEjecutable  (73)

	ID  shift 54
	CTE  shift 55
	MAYORIGUAL  shift 67
	MENORIGUAL  shift 68
	IGUAL  shift 69
	DISTINTO  shift 70
	'-'  shift 56
	'='  shift 71
	'('  shift 57
	'<'  shift 72
	'>'  shift 73
	.  error

	expresion  goto 74
	condicion  goto 78
	comparador  goto 76
	termino  goto 59
	factor  goto 60


state 40
	programa : '{' '}' .  (2)

	.  reduce 2


state 41
	programa : '{' cuerpoPrograma . '}'  (1)
	programa : '{' cuerpoPrograma .  (4)
	cuerpoPrograma : cuerpoPrograma . sentencia  (6)

	ID  shift 1
	CADENA  shift 2
	CLASS  shift 3
	IF  shift 4
	PRINT  shift 5
	VOID  shift 6
	SHORT  shift 7
	ULONG  shift 8
	FLOAT  shift 9
	WHILE  shift 10
	'}'  shift 79
	$end  reduce 4

	sentencia  goto 43
	sentenciaDeclarativa  goto 15
	sentenciaEjecutable  goto 16
	encabezadoClase  goto 17
	encabezadoForward  goto 18
	declaracionClase  goto 19
	referenciaClase  goto 20
	listaReferencia  goto 21
	tipo  goto 22
	asignacion  goto 23
	sentenciaIf  goto 24
	sentenciaWhile  goto 25
	print  goto 26
	invocacionMetodo  goto 27
	declaracionFuncion  goto 28
	declaracion  goto 29
	encabezadoFuncion  goto 30


state 42
	programa : cuerpoPrograma '}' .  (3)

	.  reduce 3


state 43
	cuerpoPrograma : cuerpoPrograma sentencia .  (6)

	.  reduce 6


state 44
	sentencia : sentenciaEjecutable ',' .  (8)

	.  reduce 8


state 45
	declaracionClase : encabezadoClase '{' . cuerpoClase '}'  (11)

	ID  shift 80
	VOID  shift 81
	SHORT  shift 7
	ULONG  shift 8
	FLOAT  shift 9
	.  error

	cuerpoClase  goto 82
	seccionAtributos  goto 83
	declaracionMetodo  goto 84
	tipo  goto 85
	herenciaNombre  goto 86
	encabezadoMetodo  goto 87


state 46
	declaracionClase : encabezadoForward ',' .  (12)

	.  reduce 12


state 47
	asignacionClase : ID . '=' expresion  (20)
	referenciaMetodo : ID . '(' ')'  (21)
	referenciaMetodo : ID . '(' expresion ')'  (22)
	listaReferencia : listaReferencia ID . '.'  (23)

	'='  shift 88
	'('  shift 89
	'.'  shift 90
	.  error


state 48
	referenciaClase : listaReferencia asignacionClase .  (18)

	.  reduce 18


state 49
	referenciaClase : listaReferencia referenciaMetodo .  (19)

	.  reduce 19


state 50
	listaDeclaracion : ID . ';' listaDeclaracion  (102)
	listaDeclaracion : ID .  (103)

	';'  shift 91
	','  reduce 103


state 51
	declaracion : tipo listaDeclaracion .  (101)

	.  reduce 101


state 52
	sentenciaDeclarativa : declaracion ',' .  (38)

	.  reduce 38


state 53
	declaracionFuncion : encabezadoFuncion '{' . cuerpoFuncion '}'  (85)

	ID  shift 1
	CADENA  shift 2
	IF  shift 92
	PRINT  shift 5
	VOID  shift 6
	SHORT  shift 7
	ULONG  shift 8
	FLOAT  shift 9
	WHILE  shift 10
	RETURN  shift 93
	.  error

	referenciaClase  goto 94
	listaReferencia  goto 21
	tipo  goto 22
	asignacion  goto 95
	sentenciaWhile  goto 96
	print  goto 97
	invocacionMetodo  goto 98
	declaracion  goto 99
	sentenciaDeclarativaMetodo  goto 100
	declaracionFuncionLocal  goto 101
	sentenciaIfRetorno  goto 102
	sentencia_ejecutable_return  goto 103
	return  goto 104
	encabezadoFuncion  goto 105
	cuerpoFuncion  goto 106
	listaSentenciasFuncion  goto 107


state 54
	factor : ID .  (114)
	factor : ID . MENOSMENOS  (115)

	MENOSMENOS  shift 108
	MAYORIGUAL  reduce 114
	MENORIGUAL  reduce 114
	IGUAL  reduce 114
	DISTINTO  reduce 114
	'+'  reduce 114
	'-'  reduce 114
	'*'  reduce 114
	'/'  reduce 114
	','  reduce 114
	'='  reduce 114
	')'  reduce 114
	'<'  reduce 114
	'>'  reduce 114


state 55
	factor : CTE .  (116)

	.  reduce 116


state 56
	factor : '-' . CTE  (117)

	CTE  shift 109
	.  error


state 57
	factor : '(' . expresion ')'  (118)

	ID  shift 54
	CTE  shift 55
	'-'  shift 56
	'('  shift 57
	.  error

	expresion  goto 110
	termino  goto 59
	factor  goto 60


state 58
	asignacion : ID IGUAL expresion .  (43)
	expresion : expresion . '+' termino  (109)
	expresion : expresion . '-' termino  (110)

	'+'  shift 111
	'-'  shift 112
	','  reduce 43
	')'  reduce 43


state 59
	expresion : termino .  (108)
	termino : termino . '*' factor  (112)
	termino : termino . '/' factor  (113)

	'*'  shift 113
	'/'  shift 114
	MAYORIGUAL  reduce 108
	MENORIGUAL  reduce 108
	IGUAL  reduce 108
	DISTINTO  reduce 108
	'+'  reduce 108
	'-'  reduce 108
	','  reduce 108
	'='  reduce 108
	')'  reduce 108
	'<'  reduce 108
	'>'  reduce 108


state 60
	termino : factor .  (111)

	.  reduce 111


state 61
	asignacion : ID '=' expresion .  (42)
	expresion : expresion . '+' termino  (109)
	expresion : expresion . '-' termino  (110)

	'+'  shift 111
	'-'  shift 112
	','  reduce 42
	')'  reduce 42


state 62
	asignacion : ID . '=' expresion  (42)
	asignacion : ID . IGUAL expresion  (43)
	tipo : ID .  (107)
	factor : ID .  (114)
	factor : ID . MENOSMENOS  (115)

	IGUAL  shift 31
	MENOSMENOS  shift 108
	'='  shift 32
	ID  reduce 107
	'+'  reduce 114
	'-'  reduce 114
	'*'  reduce 114
	'/'  reduce 114
	')'  reduce 114


state 63
	invocacionMetodo : ID '(' ')' .  (98)

	.  reduce 98


state 64
	invocacionMetodo : ID '(' expresion . ')'  (97)
	expresion : expresion . '+' termino  (109)
	expresion : expresion . '-' termino  (110)

	'+'  shift 111
	'-'  shift 112
	')'  shift 115
	.  error


state 65
	invocacionMetodo : ID '(' tipo . asignacion ')'  (100)

	ID  shift 116
	.  error

	asignacion  goto 117


state 66
	invocacionMetodo : ID '(' asignacion . ')'  (99)

	')'  shift 118
	.  error


state 67
	comparador : MAYORIGUAL .  (119)

	.  reduce 119


state 68
	comparador : MENORIGUAL .  (120)

	.  reduce 120


state 69
	comparador : IGUAL .  (121)

	.  reduce 121


state 70
	comparador : DISTINTO .  (122)

	.  reduce 122


state 71
	comparador : '=' .  (125)

	.  reduce 125


state 72
	comparador : '<' .  (123)

	.  reduce 123


state 73
	comparador : '>' .  (124)

	.  reduce 124


state 74
	condicion : expresion . comparador expresion  (51)
	condicion : expresion . comparador  (53)
	expresion : expresion . '+' termino  (109)
	expresion : expresion . '-' termino  (110)

	MAYORIGUAL  shift 67
	MENORIGUAL  shift 68
	IGUAL  shift 69
	DISTINTO  shift 70
	'+'  shift 111
	'-'  shift 112
	'='  shift 71
	'<'  shift 72
	'>'  shift 73
	.  error

	comparador  goto 119


state 75
	sentenciaIf : IF '(' condicion . ')' '{' bloque_ejecucion '}' ELSE '{' bloque_ejecucion '}' END_IF  (44)
	sentenciaIf : IF '(' condicion . ')' '{' bloque_ejecucion '}' ELSE '{' bloque_ejecucion '}'  (45)
	sentenciaIf : IF '(' condicion . ')' '{' bloque_ejecucion '}' END_IF  (46)
	sentenciaIf : IF '(' condicion . ')' '{' bloque_ejecucion '}'  (47)
	sentenciaIf : IF '(' condicion . ')' sentenciaEjecutable ',' ELSE sentenciaEjecutable ',' END_IF  (48)
	sentenciaIf : IF '(' condicion . ')' sentenciaEjecutable ',' ELSE '{' bloque_ejecucion '}' END_IF  (49)
	sentenciaIf : IF '(' condicion . ')' sentenciaEjecutable ',' END_IF  (50)

	')'  shift 120
	.  error


state 76
	condicion : comparador . expresion  (52)

	ID  shift 54
	CTE  shift 55
	'-'  shift 56
	'('  shift 57
	.  error

	expresion  goto 121
	termino  goto 59
	factor  goto 60


state 77
	encabezadoFuncion : VOID ID '(' . parametro ')'  (82)
	encabezadoFuncion : VOID ID '(' . ID ')'  (83)
	encabezadoFuncion : VOID ID '(' . ')'  (84)

	ID  shift 122
	SHORT  shift 7
	ULONG  shift 8
	FLOAT  shift 9
	')'  shift 123
	.  error

	tipo  goto 124
	parametro  goto 125


state 78
	sentenciaWhile : WHILE '(' condicion . ')' DO '{' bloque_ejecucion '}'  (72)
	sentenciaWhile : WHILE '(' condicion . ')' DO sentenciaEjecutable  (73)

	')'  shift 126
	.  error


state 79
	programa : '{' cuerpoPrograma '}' .  (1)

	.  reduce 1


state 80
	herenciaNombre : ID . ','  (30)
	tipo : ID .  (107)

	','  shift 127
	ID  reduce 107


state 81
	encabezadoMetodo : VOID . ID '(' parametro ')'  (78)
	encabezadoMetodo : VOID . ID '(' ID ')'  (79)
	encabezadoMetodo : VOID . ID '(' ')'  (80)

	ID  shift 128
	.  error


state 82
	declaracionClase : encabezadoClase '{' cuerpoClase . '}'  (11)
	cuerpoClase : cuerpoClase . seccionAtributos  (14)
	cuerpoClase : cuerpoClase . declaracionMetodo ','  (15)

	ID  shift 80
	VOID  shift 81
	SHORT  shift 7
	ULONG  shift 8
	FLOAT  shift 9
	'}'  shift 129
	.  error

	seccionAtributos  goto 130
	declaracionMetodo  goto 131
	tipo  goto 85
	herenciaNombre  goto 86
	encabezadoMetodo  goto 87


state 83
	cuerpoClase : seccionAtributos .  (17)

	.  reduce 17


state 84
	cuerpoClase : declaracionMetodo . ','  (16)

	','  shift 132
	.  error


state 85
	seccionAtributos : tipo . listaAtributos  (25)

	ID  shift 133
	.  error

	listaAtributos  goto 134


state 86
	seccionAtributos : herenciaNombre .  (26)

	.  reduce 26


state 87
	declaracionMetodo : encabezadoMetodo . '{' cuerpoMetodo '}'  (81)

	'{'  shift 135
	.  error


state 88
	asignacionClase : ID '=' . expresion  (20)

	ID  shift 54
	CTE  shift 55
	'-'  shift 56
	'('  shift 57
	.  error

	expresion  goto 136
	termino  goto 59
	factor  goto 60


state 89
	referenciaMetodo : ID '(' . ')'  (21)
	referenciaMetodo : ID '(' . expresion ')'  (22)

	ID  shift 54
	CTE  shift 55
	'-'  shift 56
	'('  shift 57
	')'  shift 137
	.  error

	expresion  goto 138
	termino  goto 59
	factor  goto 60


state 90
	listaReferencia : listaReferencia ID '.' .  (23)

	.  reduce 23


state 91
	listaDeclaracion : ID ';' . listaDeclaracion  (102)

	ID  shift 50
	.  error

	listaDeclaracion  goto 139


state 92
	sentenciaIfRetorno : IF . '(' condicion ')' '{' bloque_ejecucion_return '}' ELSE '{' bloque_ejecucion_return '}' END_IF  (54)
	sentenciaIfRetorno : IF . '(' condicion ')' '{' bloque_ejecucion_return '}' ELSE '{' bloque_ejecucion_return '}'  (55)
	sentenciaIfRetorno : IF . '(' condicion ')' '{' bloque_ejecucion_return '}' END_IF  (56)
	sentenciaIfRetorno : IF . '(' condicion ')' '{' bloque_ejecucion_return '}'  (57)
	sentenciaIfRetorno : IF . '(' condicion ')' sentencia_ejecutable_return ',' ELSE sentencia_ejecutable_return ',' END_IF  (58)
	sentenciaIfRetorno : IF . '(' condicion ')' sentencia_ejecutable_return ',' ELSE '{' bloque_ejecucion_return '}' END_IF  (59)
	sentenciaIfRetorno : IF . '(' condicion ')' sentencia_ejecutable_return ',' END_IF  (60)

	'('  shift 140
	.  error


state 93
	return : RETURN .  (76)

	.  reduce 76


state 94
	sentencia_ejecutable_return : referenciaClase .  (66)

	.  reduce 66


state 95
	sentencia_ejecutable_return : asignacion .  (62)

	.  reduce 62


state 96
	sentencia_ejecutable_return : sentenciaWhile .  (64)

	.  reduce 64


state 97
	sentencia_ejecutable_return : print .  (61)

	.  reduce 61


state 98
	sentencia_ejecutable_return : invocacionMetodo .  (65)

	.  reduce 65


state 99
	sentenciaDeclarativaMetodo : declaracion . ','  (41)

	','  shift 141
	.  error


state 100
	listaSentenciasFuncion : sentenciaDeclarativaMetodo .  (95)

	.  reduce 95


state 101
	sentenciaDeclarativaMetodo : declaracionFuncionLocal .  (40)

	.  reduce 40


state 102
	sentencia_ejecutable_return : sentenciaIfRetorno .  (63)

	.  reduce 63


state 103
	listaSentenciasFuncion : sentencia_ejecutable_return . ','  (96)

	','  shift 142
	.  error


state 104
	sentencia_ejecutable_return : return .  (67)

	.  reduce 67


state 105
	declaracionFuncionLocal : encabezadoFuncion . '{' cuerpoFuncion '}'  (86)

	'{'  shift 143
	.  error


state 106
	declaracionFuncion : encabezadoFuncion '{' cuerpoFuncion . '}'  (85)

	'}'  shift 144
	.  error


state 107
	cuerpoFuncion : listaSentenciasFuncion .  (88)
	listaSentenciasFuncion : listaSentenciasFuncion . sentenciaDeclarativaMetodo  (93)
	listaSentenciasFuncion : listaSentenciasFuncion . sentencia_ejecutable_return ','  (94)

	ID  shift 1
	CADENA  shift 2
	IF  shift 92
	PRINT  shift 5
	VOID  shift 6
	SHORT  shift 7
	ULONG  shift 8
	FLOAT  shift 9
	WHILE  shift 10
	RETURN  shift 93
	'}'  reduce 88

	referenciaClase  goto 94
	listaReferencia  goto 21
	tipo  goto 22
	asignacion  goto 95
	sentenciaWhile  goto 96
	print  goto 97
	invocacionMetodo  goto 98
	declaracion  goto 99
	sentenciaDeclarativaMetodo  goto 145
	declaracionFuncionLocal  goto 101
	sentenciaIfRetorno  goto 102
	sentencia_ejecutable_return  goto 146
	return  goto 104
	encabezadoFuncion  goto 105


state 108
	factor : ID MENOSMENOS .  (115)

	.  reduce 115


state 109
	factor : '-' CTE .  (117)

	.  reduce 117


state 110
	expresion : expresion . '+' termino  (109)
	expresion : expresion . '-' termino  (110)
	factor : '(' expresion . ')'  (118)

	'+'  shift 111
	'-'  shift 112
	')'  shift 147
	.  error


state 111
	expresion : expresion '+' . termino  (109)

	ID  shift 54
	CTE  shift 55
	'-'  shift 56
	'('  shift 57
	.  error

	termino  goto 148
	factor  goto 60


state 112
	expresion : expresion '-' . termino  (110)

	ID  shift 54
	CTE  shift 55
	'-'  shift 56
	'('  shift 57
	.  error

	termino  goto 149
	factor  goto 60


state 113
	termino : termino '*' . factor  (112)

	ID  shift 54
	CTE  shift 55
	'-'  shift 56
	'('  shift 57
	.  error

	factor  goto 150


state 114
	termino : termino '/' . factor  (113)

	ID  shift 54
	CTE  shift 55
	'-'  shift 56
	'('  shift 57
	.  error

	factor  goto 151


state 115
	invocacionMetodo : ID '(' expresion ')' .  (97)

	.  reduce 97


state 116
	asignacion : ID . '=' expresion  (42)
	asignacion : ID . IGUAL expresion  (43)

	IGUAL  shift 31
	'='  shift 32
	.  error


state 117
	invocacionMetodo : ID '(' tipo asignacion . ')'  (100)

	')'  shift 152
	.  error


state 118
	invocacionMetodo : ID '(' asignacion ')' .  (99)

	.  reduce 99


state 119
	condicion : expresion comparador . expresion  (51)
	condicion : expresion comparador .  (53)

	ID  shift 54
	CTE  shift 55
	'-'  shift 56
	'('  shift 57
	')'  reduce 53

	expresion  goto 153
	termino  goto 59
	factor  goto 60


state 120
	sentenciaIf : IF '(' condicion ')' . '{' bloque_ejecucion '}' ELSE '{' bloque_ejecucion '}' END_IF  (44)
	sentenciaIf : IF '(' condicion ')' . '{' bloque_ejecucion '}' ELSE '{' bloque_ejecucion '}'  (45)
	sentenciaIf : IF '(' condicion ')' . '{' bloque_ejecucion '}' END_IF  (46)
	sentenciaIf : IF '(' condicion ')' . '{' bloque_ejecucion '}'  (47)
	sentenciaIf : IF '(' condicion ')' . sentenciaEjecutable ',' ELSE sentenciaEjecutable ',' END_IF  (48)
	sentenciaIf : IF '(' condicion ')' . sentenciaEjecutable ',' ELSE '{' bloque_ejecucion '}' END_IF  (49)
	sentenciaIf : IF '(' condicion ')' . sentenciaEjecutable ',' END_IF  (50)

	ID  shift 154
	CADENA  shift 2
	IF  shift 4
	PRINT  shift 5
	WHILE  shift 10
	'{'  shift 155
	.  error

	sentenciaEjecutable  goto 156
	referenciaClase  goto 20
	listaReferencia  goto 21
	asignacion  goto 23
	sentenciaIf  goto 24
	sentenciaWhile  goto 25
	print  goto 26
	invocacionMetodo  goto 27


state 121
	condicion : comparador expresion .  (52)
	expresion : expresion . '+' termino  (109)
	expresion : expresion . '-' termino  (110)

	'+'  shift 111
	'-'  shift 112
	')'  reduce 52


state 122
	encabezadoFuncion : VOID ID '(' ID . ')'  (83)
	tipo : ID .  (107)

	')'  shift 157
	ID  reduce 107


state 123
	encabezadoFuncion : VOID ID '(' ')' .  (84)

	.  reduce 84


state 124
	parametro : tipo . ID  (77)

	ID  shift 158
	.  error


state 125
	encabezadoFuncion : VOID ID '(' parametro . ')'  (82)

	')'  shift 159
	.  error


state 126
	sentenciaWhile : WHILE '(' condicion ')' . DO '{' bloque_ejecucion '}'  (72)
	sentenciaWhile : WHILE '(' condicion ')' . DO sentenciaEjecutable  (73)

	DO  shift 160
	.  error


state 127
	herenciaNombre : ID ',' .  (30)

	.  reduce 30


state 128
	encabezadoMetodo : VOID ID . '(' parametro ')'  (78)
	encabezadoMetodo : VOID ID . '(' ID ')'  (79)
	encabezadoMetodo : VOID ID . '(' ')'  (80)

	'('  shift 161
	.  error


state 129
	declaracionClase : encabezadoClase '{' cuerpoClase '}' .  (11)

	.  reduce 11


state 130
	cuerpoClase : cuerpoClase seccionAtributos .  (14)

	.  reduce 14


state 131
	cuerpoClase : cuerpoClase declaracionMetodo . ','  (15)

	','  shift 162
	.  error


state 132
	cuerpoClase : declaracionMetodo ',' .  (16)

	.  reduce 16


state 133
	listaAtributos : ID . ';' listaAtributos  (27)
	listaAtributos : ID . ','  (28)
	listaAtributos : ID .  (29)

	','  shift 163
	';'  shift 164
	ID  reduce 29
	VOID  reduce 29
	SHORT  reduce 29
	ULONG  reduce 29
	FLOAT  reduce 29
	'}'  reduce 29


state 134
	seccionAtributos : tipo listaAtributos .  (25)

	.  reduce 25


state 135
	declaracionMetodo : encabezadoMetodo '{' . cuerpoMetodo '}'  (81)

	ID  shift 1
	CADENA  shift 2
	IF  shift 4
	PRINT  shift 5
	VOID  shift 6
	SHORT  shift 7
	ULONG  shift 8
	FLOAT  shift 9
	WHILE  shift 10
	.  error

	sentenciaEjecutable  goto 165
	referenciaClase  goto 20
	listaReferencia  goto 21
	tipo  goto 22
	asignacion  goto 23
	sentenciaIf  goto 24
	sentenciaWhile  goto 25
	print  goto 26
	invocacionMetodo  goto 27
	declaracion  goto 99
	sentenciaDeclarativaMetodo  goto 166
	declaracionFuncionLocal  goto 101
	cuerpoMetodo  goto 167
	encabezadoFuncion  goto 105
	listaSentenciasMetodo  goto 168


state 136
	asignacionClase : ID '=' expresion .  (20)
	expresion : expresion . '+' termino  (109)
	expresion : expresion . '-' termino  (110)

	'+'  shift 111
	'-'  shift 112
	','  reduce 20


state 137
	referenciaMetodo : ID '(' ')' .  (21)

	.  reduce 21


state 138
	referenciaMetodo : ID '(' expresion . ')'  (22)
	expresion : expresion . '+' termino  (109)
	expresion : expresion . '-' termino  (110)

	'+'  shift 111
	'-'  shift 112
	')'  shift 169
	.  error


state 139
	listaDeclaracion : ID ';' listaDeclaracion .  (102)

	.  reduce 102


state 140
	sentenciaIfRetorno : IF '(' . condicion ')' '{' bloque_ejecucion_return '}' ELSE '{' bloque_ejecucion_return '}' END_IF  (54)
	sentenciaIfRetorno : IF '(' . condicion ')' '{' bloque_ejecucion_return '}' ELSE '{' bloque_ejecucion_return '}'  (55)
	sentenciaIfRetorno : IF '(' . condicion ')' '{' bloque_ejecucion_return '}' END_IF  (56)
	sentenciaIfRetorno : IF '(' . condicion ')' '{' bloque_ejecucion_return '}'  (57)
	sentenciaIfRetorno : IF '(' . condicion ')' sentencia_ejecutable_return ',' ELSE sentencia_ejecutable_return ',' END_IF  (58)
	sentenciaIfRetorno : IF '(' . condicion ')' sentencia_ejecutable_return ',' ELSE '{' bloque_ejecucion_return '}' END_IF  (59)
	sentenciaIfRetorno : IF '(' . condicion ')' sentencia_ejecutable_return ',' END_IF  (60)

	ID  shift 54
	CTE  shift 55
	MAYORIGUAL  shift 67
	MENORIGUAL  shift 68
	IGUAL  shift 69
	DISTINTO  shift 70
	'-'  shift 56
	'='  shift 71
	'('  shift 57
	'<'  shift 72
	'>'  shift 73
	.  error

	expresion  goto 74
	condicion  goto 170
	comparador  goto 76
	termino  goto 59
	factor  goto 60


state 141
	sentenciaDeclarativaMetodo : declaracion ',' .  (41)

	.  reduce 41


state 142
	listaSentenciasFuncion : sentencia_ejecutable_return ',' .  (96)

	.  reduce 96


state 143
	declaracionFuncionLocal : encabezadoFuncion '{' . cuerpoFuncion '}'  (86)

	ID  shift 1
	CADENA  shift 2
	IF  shift 92
	PRINT  shift 5
	VOID  shift 6
	SHORT  shift 7
	ULONG  shift 8
	FLOAT  shift 9
	WHILE  shift 10
	RETURN  shift 93
	.  error

	referenciaClase  goto 94
	listaReferencia  goto 21
	tipo  goto 22
	asignacion  goto 95
	sentenciaWhile  goto 96
	print  goto 97
	invocacionMetodo  goto 98
	declaracion  goto 99
	sentenciaDeclarativaMetodo  goto 100
	declaracionFuncionLocal  goto 101
	sentenciaIfRetorno  goto 102
	sentencia_ejecutable_return  goto 103
	return  goto 104
	encabezadoFuncion  goto 105
	cuerpoFuncion  goto 171
	listaSentenciasFuncion  goto 107


state 144
	declaracionFuncion : encabezadoFuncion '{' cuerpoFuncion '}' .  (85)

	.  reduce 85


state 145
	listaSentenciasFuncion : listaSentenciasFuncion sentenciaDeclarativaMetodo .  (93)

	.  reduce 93


state 146
	listaSentenciasFuncion : listaSentenciasFuncion sentencia_ejecutable_return . ','  (94)

	','  shift 172
	.  error


state 147
	factor : '(' expresion ')' .  (118)

	.  reduce 118


state 148
	expresion : expresion '+' termino .  (109)
	termino : termino . '*' factor  (112)
	termino : termino . '/' factor  (113)

	'*'  shift 113
	'/'  shift 114
	MAYORIGUAL  reduce 109
	MENORIGUAL  reduce 109
	IGUAL  reduce 109
	DISTINTO  reduce 109
	'+'  reduce 109
	'-'  reduce 109
	','  reduce 109
	'='  reduce 109
	')'  reduce 109
	'<'  reduce 109
	'>'  reduce 109


state 149
	expresion : expresion '-' termino .  (110)
	termino : termino . '*' factor  (112)
	termino : termino . '/' factor  (113)

	'*'  shift 113
	'/'  shift 114
	MAYORIGUAL  reduce 110
	MENORIGUAL  reduce 110
	IGUAL  reduce 110
	DISTINTO  reduce 110
	'+'  reduce 110
	'-'  reduce 110
	','  reduce 110
	'='  reduce 110
	')'  reduce 110
	'<'  reduce 110
	'>'  reduce 110


state 150
	termino : termino '*' factor .  (112)

	.  reduce 112


state 151
	termino : termino '/' factor .  (113)

	.  reduce 113


state 152
	invocacionMetodo : ID '(' tipo asignacion ')' .  (100)

	.  reduce 100


state 153
	condicion : expresion comparador expresion .  (51)
	expresion : expresion . '+' termino  (109)
	expresion : expresion . '-' termino  (110)

	'+'  shift 111
	'-'  shift 112
	')'  reduce 51


state 154
	listaReferencia : ID . '.'  (24)
	asignacion : ID . '=' expresion  (42)
	asignacion : ID . IGUAL expresion  (43)
	invocacionMetodo : ID . '(' expresion ')'  (97)
	invocacionMetodo : ID . '(' ')'  (98)
	invocacionMetodo : ID . '(' asignacion ')'  (99)
	invocacionMetodo : ID . '(' tipo asignacion ')'  (100)

	IGUAL  shift 31
	'='  shift 32
	'('  shift 33
	'.'  shift 34
	.  error


state 155
	sentenciaIf : IF '(' condicion ')' '{' . bloque_ejecucion '}' ELSE '{' bloque_ejecucion '}' END_IF  (44)
	sentenciaIf : IF '(' condicion ')' '{' . bloque_ejecucion '}' ELSE '{' bloque_ejecucion '}'  (45)
	sentenciaIf : IF '(' condicion ')' '{' . bloque_ejecucion '}' END_IF  (46)
	sentenciaIf : IF '(' condicion ')' '{' . bloque_ejecucion '}'  (47)

	ID  shift 154
	CADENA  shift 2
	IF  shift 4
	PRINT  shift 5
	WHILE  shift 10
	.  error

	sentenciaEjecutable  goto 173
	referenciaClase  goto 20
	listaReferencia  goto 21
	asignacion  goto 23
	sentenciaIf  goto 24
	sentenciaWhile  goto 25
	print  goto 26
	invocacionMetodo  goto 27
	bloque_ejecucion  goto 174


state 156
	sentenciaIf : IF '(' condicion ')' sentenciaEjecutable . ',' ELSE sentenciaEjecutable ',' END_IF  (48)
	sentenciaIf : IF '(' condicion ')' sentenciaEjecutable . ',' ELSE '{' bloque_ejecucion '}' END_IF  (49)
	sentenciaIf : IF '(' condicion ')' sentenciaEjecutable . ',' END_IF  (50)

	','  shift 175
	.  error


state 157
	encabezadoFuncion : VOID ID '(' ID ')' .  (83)

	.  reduce 83


state 158
	parametro : tipo ID .  (77)

	.  reduce 77


state 159
	encabezadoFuncion : VOID ID '(' parametro ')' .  (82)

	.  reduce 82


state 160
	sentenciaWhile : WHILE '(' condicion ')' DO . '{' bloque_ejecucion '}'  (72)
	sentenciaWhile : WHILE '(' condicion ')' DO . sentenciaEjecutable  (73)

	ID  shift 154
	CADENA  shift 2
	IF  shift 4
	PRINT  shift 5
	WHILE  shift 10
	'{'  shift 176
	.  error

	sentenciaEjecutable  goto 177
	referenciaClase  goto 20
	listaReferencia  goto 21
	asignacion  goto 23
	sentenciaIf  goto 24
	sentenciaWhile  goto 25
	print  goto 26
	invocacionMetodo  goto 27


state 161
	encabezadoMetodo : VOID ID '(' . parametro ')'  (78)
	encabezadoMetodo : VOID ID '(' . ID ')'  (79)
	encabezadoMetodo : VOID ID '(' . ')'  (80)

	ID  shift 178
	SHORT  shift 7
	ULONG  shift 8
	FLOAT  shift 9
	')'  shift 179
	.  error

	tipo  goto 124
	parametro  goto 180


state 162
	cuerpoClase : cuerpoClase declaracionMetodo ',' .  (15)

	.  reduce 15


state 163
	listaAtributos : ID ',' .  (28)

	.  reduce 28


state 164
	listaAtributos : ID ';' . listaAtributos  (27)

	ID  shift 133
	.  error

	listaAtributos  goto 181


state 165
	listaSentenciasMetodo : sentenciaEjecutable . ','  (92)

	','  shift 182
	.  error


state 166
	listaSentenciasMetodo : sentenciaDeclarativaMetodo .  (91)

	.  reduce 91


state 167
	declaracionMetodo : encabezadoMetodo '{' cuerpoMetodo . '}'  (81)

	'}'  shift 183
	.  error


state 168
	cuerpoMetodo : listaSentenciasMetodo .  (87)
	listaSentenciasMetodo : listaSentenciasMetodo . sentenciaDeclarativaMetodo  (89)
	listaSentenciasMetodo : listaSentenciasMetodo . sentenciaEjecutable ','  (90)

	ID  shift 1
	CADENA  shift 2
	IF  shift 4
	PRINT  shift 5
	VOID  shift 6
	SHORT  shift 7
	ULONG  shift 8
	FLOAT  shift 9
	WHILE  shift 10
	'}'  reduce 87

	sentenciaEjecutable  goto 184
	referenciaClase  goto 20
	listaReferencia  goto 21
	tipo  goto 22
	asignacion  goto 23
	sentenciaIf  goto 24
	sentenciaWhile  goto 25
	print  goto 26
	invocacionMetodo  goto 27
	declaracion  goto 99
	sentenciaDeclarativaMetodo  goto 185
	declaracionFuncionLocal  goto 101
	encabezadoFuncion  goto 105


state 169
	referenciaMetodo : ID '(' expresion ')' .  (22)

	.  reduce 22


state 170
	sentenciaIfRetorno : IF '(' condicion . ')' '{' bloque_ejecucion_return '}' ELSE '{' bloque_ejecucion_return '}' END_IF  (54)
	sentenciaIfRetorno : IF '(' condicion . ')' '{' bloque_ejecucion_return '}' ELSE '{' bloque_ejecucion_return '}'  (55)
	sentenciaIfRetorno : IF '(' condicion . ')' '{' bloque_ejecucion_return '}' END_IF  (56)
	sentenciaIfRetorno : IF '(' condicion . ')' '{' bloque_ejecucion_return '}'  (57)
	sentenciaIfRetorno : IF '(' condicion . ')' sentencia_ejecutable_return ',' ELSE sentencia_ejecutable_return ',' END_IF  (58)
	sentenciaIfRetorno : IF '(' condicion . ')' sentencia_ejecutable_return ',' ELSE '{' bloque_ejecucion_return '}' END_IF  (59)
	sentenciaIfRetorno : IF '(' condicion . ')' sentencia_ejecutable_return ',' END_IF  (60)

	')'  shift 186
	.  error


state 171
	declaracionFuncionLocal : encabezadoFuncion '{' cuerpoFuncion . '}'  (86)

	'}'  shift 187
	.  error


state 172
	listaSentenciasFuncion : listaSentenciasFuncion sentencia_ejecutable_return ',' .  (94)

	.  reduce 94


state 173
	bloque_ejecucion : sentenciaEjecutable . ','  (69)

	','  shift 188
	.  error


state 174
	sentenciaIf : IF '(' condicion ')' '{' bloque_ejecucion . '}' ELSE '{' bloque_ejecucion '}' END_IF  (44)
	sentenciaIf : IF '(' condicion ')' '{' bloque_ejecucion . '}' ELSE '{' bloque_ejecucion '}'  (45)
	sentenciaIf : IF '(' condicion ')' '{' bloque_ejecucion . '}' END_IF  (46)
	sentenciaIf : IF '(' condicion ')' '{' bloque_ejecucion . '}'  (47)
	bloque_ejecucion : bloque_ejecucion . sentenciaEjecutable ','  (68)

	ID  shift 154
	CADENA  shift 2
	IF  shift 4
	PRINT  shift 5
	WHILE  shift 10
	'}'  shift 189
	.  error

	sentenciaEjecutable  goto 190
	referenciaClase  goto 20
	listaReferencia  goto 21
	asignacion  goto 23
	sentenciaIf  goto 24
	sentenciaWhile  goto 25
	print  goto 26
	invocacionMetodo  goto 27


state 175
	sentenciaIf : IF '(' condicion ')' sentenciaEjecutable ',' . ELSE sentenciaEjecutable ',' END_IF  (48)
	sentenciaIf : IF '(' condicion ')' sentenciaEjecutable ',' . ELSE '{' bloque_ejecucion '}' END_IF  (49)
	sentenciaIf : IF '(' condicion ')' sentenciaEjecutable ',' . END_IF  (50)

	ELSE  shift 191
	END_IF  shift 192
	.  error


state 176
	sentenciaWhile : WHILE '(' condicion ')' DO '{' . bloque_ejecucion '}'  (72)

	ID  shift 154
	CADENA  shift 2
	IF  shift 4
	PRINT  shift 5
	WHILE  shift 10
	.  error

	sentenciaEjecutable  goto 173
	referenciaClase  goto 20
	listaReferencia  goto 21
	asignacion  goto 23
	sentenciaIf  goto 24
	sentenciaWhile  goto 25
	print  goto 26
	invocacionMetodo  goto 27
	bloque_ejecucion  goto 193


state 177
	sentenciaWhile : WHILE '(' condicion ')' DO sentenciaEjecutable .  (73)

	.  reduce 73


state 178
	encabezadoMetodo : VOID ID '(' ID . ')'  (79)
	tipo : ID .  (107)

	')'  shift 194
	ID  reduce 107


state 179
	encabezadoMetodo : VOID ID '(' ')' .  (80)

	.  reduce 80


state 180
	encabezadoMetodo : VOID ID '(' parametro . ')'  (78)

	')'  shift 195
	.  error


state 181
	listaAtributos : ID ';' listaAtributos .  (27)

	.  reduce 27


state 182
	listaSentenciasMetodo : sentenciaEjecutable ',' .  (92)

	.  reduce 92


state 183
	declaracionMetodo : encabezadoMetodo '{' cuerpoMetodo '}' .  (81)

	.  reduce 81


state 184
	listaSentenciasMetodo : listaSentenciasMetodo sentenciaEjecutable . ','  (90)

	','  shift 196
	.  error


state 185
	listaSentenciasMetodo : listaSentenciasMetodo sentenciaDeclarativaMetodo .  (89)

	.  reduce 89


state 186
	sentenciaIfRetorno : IF '(' condicion ')' . '{' bloque_ejecucion_return '}' ELSE '{' bloque_ejecucion_return '}' END_IF  (54)
	sentenciaIfRetorno : IF '(' condicion ')' . '{' bloque_ejecucion_return '}' ELSE '{' bloque_ejecucion_return '}'  (55)
	sentenciaIfRetorno : IF '(' condicion ')' . '{' bloque_ejecucion_return '}' END_IF  (56)
	sentenciaIfRetorno : IF '(' condicion ')' . '{' bloque_ejecucion_return '}'  (57)
	sentenciaIfRetorno : IF '(' condicion ')' . sentencia_ejecutable_return ',' ELSE sentencia_ejecutable_return ',' END_IF  (58)
	sentenciaIfRetorno : IF '(' condicion ')' . sentencia_ejecutable_return ',' ELSE '{' bloque_ejecucion_return '}' END_IF  (59)
	sentenciaIfRetorno : IF '(' condicion ')' . sentencia_ejecutable_return ',' END_IF  (60)

	ID  shift 154
	CADENA  shift 2
	IF  shift 92
	PRINT  shift 5
	WHILE  shift 10
	RETURN  shift 93
	'{'  shift 197
	.  error

	referenciaClase  goto 94
	listaReferencia  goto 21
	asignacion  goto 95
	sentenciaWhile  goto 96
	print  goto 97
	invocacionMetodo  goto 98
	sentenciaIfRetorno  goto 102
	sentencia_ejecutable_return  goto 198
	return  goto 104


state 187
	declaracionFuncionLocal : encabezadoFuncion '{' cuerpoFuncion '}' .  (86)

	.  reduce 86


state 188
	bloque_ejecucion : sentenciaEjecutable ',' .  (69)

	.  reduce 69


state 189
	sentenciaIf : IF '(' condicion ')' '{' bloque_ejecucion '}' . ELSE '{' bloque_ejecucion '}' END_IF  (44)
	sentenciaIf : IF '(' condicion ')' '{' bloque_ejecucion '}' . ELSE '{' bloque_ejecucion '}'  (45)
	sentenciaIf : IF '(' condicion ')' '{' bloque_ejecucion '}' . END_IF  (46)
	sentenciaIf : IF '(' condicion ')' '{' bloque_ejecucion '}' .  (47)

	ELSE  shift 199
	END_IF  shift 200
	','  reduce 47


state 190
	bloque_ejecucion : bloque_ejecucion sentenciaEjecutable . ','  (68)

	','  shift 201
	.  error


state 191
	sentenciaIf : IF '(' condicion ')' sentenciaEjecutable ',' ELSE . sentenciaEjecutable ',' END_IF  (48)
	sentenciaIf : IF '(' condicion ')' sentenciaEjecutable ',' ELSE . '{' bloque_ejecucion '}' END_IF  (49)

	ID  shift 154
	CADENA  shift 2
	IF  shift 4
	PRINT  shift 5
	WHILE  shift 10
	'{'  shift 202
	.  error

	sentenciaEjecutable  goto 203
	referenciaClase  goto 20
	listaReferencia  goto 21
	asignacion  goto 23
	sentenciaIf  goto 24
	sentenciaWhile  goto 25
	print  goto 26
	invocacionMetodo  goto 27


state 192
	sentenciaIf : IF '(' condicion ')' sentenciaEjecutable ',' END_IF .  (50)

	.  reduce 50


state 193
	bloque_ejecucion : bloque_ejecucion . sentenciaEjecutable ','  (68)
	sentenciaWhile : WHILE '(' condicion ')' DO '{' bloque_ejecucion . '}'  (72)

	ID  shift 154
	CADENA  shift 2
	IF  shift 4
	PRINT  shift 5
	WHILE  shift 10
	'}'  shift 204
	.  error

	sentenciaEjecutable  goto 190
	referenciaClase  goto 20
	listaReferencia  goto 21
	asignacion  goto 23
	sentenciaIf  goto 24
	sentenciaWhile  goto 25
	print  goto 26
	invocacionMetodo  goto 27


state 194
	encabezadoMetodo : VOID ID '(' ID ')' .  (79)

	.  reduce 79


state 195
	encabezadoMetodo : VOID ID '(' parametro ')' .  (78)

	.  reduce 78


state 196
	listaSentenciasMetodo : listaSentenciasMetodo sentenciaEjecutable ',' .  (90)

	.  reduce 90


state 197
	sentenciaIfRetorno : IF '(' condicion ')' '{' . bloque_ejecucion_return '}' ELSE '{' bloque_ejecucion_return '}' END_IF  (54)
	sentenciaIfRetorno : IF '(' condicion ')' '{' . bloque_ejecucion_return '}' ELSE '{' bloque_ejecucion_return '}'  (55)
	sentenciaIfRetorno : IF '(' condicion ')' '{' . bloque_ejecucion_return '}' END_IF  (56)
	sentenciaIfRetorno : IF '(' condicion ')' '{' . bloque_ejecucion_return '}'  (57)

	ID  shift 154
	CADENA  shift 2
	IF  shift 92
	PRINT  shift 5
	WHILE  shift 10
	RETURN  shift 93
	.  error

	referenciaClase  goto 94
	listaReferencia  goto 21
	asignacion  goto 95
	sentenciaWhile  goto 96
	print  goto 97
	invocacionMetodo  goto 98
	sentenciaIfRetorno  goto 102
	bloque_ejecucion_return  goto 205
	sentencia_ejecutable_return  goto 206
	return  goto 104


state 198
	sentenciaIfRetorno : IF '(' condicion ')' sentencia_ejecutable_return . ',' ELSE sentencia_ejecutable_return ',' END_IF  (58)
	sentenciaIfRetorno : IF '(' condicion ')' sentencia_ejecutable_return . ',' ELSE '{' bloque_ejecucion_return '}' END_IF  (59)
	sentenciaIfRetorno : IF '(' condicion ')' sentencia_ejecutable_return . ',' END_IF  (60)

	','  shift 207
	.  error


state 199
	sentenciaIf : IF '(' condicion ')' '{' bloque_ejecucion '}' ELSE . '{' bloque_ejecucion '}' END_IF  (44)
	sentenciaIf : IF '(' condicion ')' '{' bloque_ejecucion '}' ELSE . '{' bloque_ejecucion '}'  (45)

	'{'  shift 208
	.  error


state 200
	sentenciaIf : IF '(' condicion ')' '{' bloque_ejecucion '}' END_IF .  (46)

	.  reduce 46


state 201
	bloque_ejecucion : bloque_ejecucion sentenciaEjecutable ',' .  (68)

	.  reduce 68


state 202
	sentenciaIf : IF '(' condicion ')' sentenciaEjecutable ',' ELSE '{' . bloque_ejecucion '}' END_IF  (49)

	ID  shift 154
	CADENA  shift 2
	IF  shift 4
	PRINT  shift 5
	WHILE  shift 10
	.  error

	sentenciaEjecutable  goto 173
	referenciaClase  goto 20
	listaReferencia  goto 21
	asignacion  goto 23
	sentenciaIf  goto 24
	sentenciaWhile  goto 25
	print  goto 26
	invocacionMetodo  goto 27
	bloque_ejecucion  goto 209


state 203
	sentenciaIf : IF '(' condicion ')' sentenciaEjecutable ',' ELSE sentenciaEjecutable . ',' END_IF  (48)

	','  shift 210
	.  error


state 204
	sentenciaWhile : WHILE '(' condicion ')' DO '{' bloque_ejecucion '}' .  (72)

	.  reduce 72


state 205
	sentenciaIfRetorno : IF '(' condicion ')' '{' bloque_ejecucion_return . '}' ELSE '{' bloque_ejecucion_return '}' END_IF  (54)
	sentenciaIfRetorno : IF '(' condicion ')' '{' bloque_ejecucion_return . '}' ELSE '{' bloque_ejecucion_return '}'  (55)
	sentenciaIfRetorno : IF '(' condicion ')' '{' bloque_ejecucion_return . '}' END_IF  (56)
	sentenciaIfRetorno : IF '(' condicion ')' '{' bloque_ejecucion_return . '}'  (57)
	bloque_ejecucion_return : bloque_ejecucion_return . sentencia_ejecutable_return ','  (70)

	ID  shift 154
	CADENA  shift 2
	IF  shift 92
	PRINT  shift 5
	WHILE  shift 10
	RETURN  shift 93
	'}'  shift 211
	.  error

	referenciaClase  goto 94
	listaReferencia  goto 21
	asignacion  goto 95
	sentenciaWhile  goto 96
	print  goto 97
	invocacionMetodo  goto 98
	sentenciaIfRetorno  goto 102
	sentencia_ejecutable_return  goto 212
	return  goto 104


state 206
	bloque_ejecucion_return : sentencia_ejecutable_return . ','  (71)

	','  shift 213
	.  error


state 207
	sentenciaIfRetorno : IF '(' condicion ')' sentencia_ejecutable_return ',' . ELSE sentencia_ejecutable_return ',' END_IF  (58)
	sentenciaIfRetorno : IF '(' condicion ')' sentencia_ejecutable_return ',' . ELSE '{' bloque_ejecucion_return '}' END_IF  (59)
	sentenciaIfRetorno : IF '(' condicion ')' sentencia_ejecutable_return ',' . END_IF  (60)

	ELSE  shift 214
	END_IF  shift 215
	.  error


state 208
	sentenciaIf : IF '(' condicion ')' '{' bloque_ejecucion '}' ELSE '{' . bloque_ejecucion '}' END_IF  (44)
	sentenciaIf : IF '(' condicion ')' '{' bloque_ejecucion '}' ELSE '{' . bloque_ejecucion '}'  (45)

	ID  shift 154
	CADENA  shift 2
	IF  shift 4
	PRINT  shift 5
	WHILE  shift 10
	.  error

	sentenciaEjecutable  goto 173
	referenciaClase  goto 20
	listaReferencia  goto 21
	asignacion  goto 23
	sentenciaIf  goto 24
	sentenciaWhile  goto 25
	print  goto 26
	invocacionMetodo  goto 27
	bloque_ejecucion  goto 216


state 209
	sentenciaIf : IF '(' condicion ')' sentenciaEjecutable ',' ELSE '{' bloque_ejecucion . '}' END_IF  (49)
	bloque_ejecucion : bloque_ejecucion . sentenciaEjecutable ','  (68)

	ID  shift 154
	CADENA  shift 2
	IF  shift 4
	PRINT  shift 5
	WHILE  shift 10
	'}'  shift 217
	.  error

	sentenciaEjecutable  goto 190
	referenciaClase  goto 20
	listaReferencia  goto 21
	asignacion  goto 23
	sentenciaIf  goto 24
	sentenciaWhile  goto 25
	print  goto 26
	invocacionMetodo  goto 27


state 210
	sentenciaIf : IF '(' condicion ')' sentenciaEjecutable ',' ELSE sentenciaEjecutable ',' . END_IF  (48)

	END_IF  shift 218
	.  error


state 211
	sentenciaIfRetorno : IF '(' condicion ')' '{' bloque_ejecucion_return '}' . ELSE '{' bloque_ejecucion_return '}' END_IF  (54)
	sentenciaIfRetorno : IF '(' condicion ')' '{' bloque_ejecucion_return '}' . ELSE '{' bloque_ejecucion_return '}'  (55)
	sentenciaIfRetorno : IF '(' condicion ')' '{' bloque_ejecucion_return '}' . END_IF  (56)
	sentenciaIfRetorno : IF '(' condicion ')' '{' bloque_ejecucion_return '}' .  (57)

	ELSE  shift 219
	END_IF  shift 220
	','  reduce 57


state 212
	bloque_ejecucion_return : bloque_ejecucion_return sentencia_ejecutable_return . ','  (70)

	','  shift 221
	.  error


state 213
	bloque_ejecucion_return : sentencia_ejecutable_return ',' .  (71)

	.  reduce 71


state 214
	sentenciaIfRetorno : IF '(' condicion ')' sentencia_ejecutable_return ',' ELSE . sentencia_ejecutable_return ',' END_IF  (58)
	sentenciaIfRetorno : IF '(' condicion ')' sentencia_ejecutable_return ',' ELSE . '{' bloque_ejecucion_return '}' END_IF  (59)

	ID  shift 154
	CADENA  shift 2
	IF  shift 92
	PRINT  shift 5
	WHILE  shift 10
	RETURN  shift 93
	'{'  shift 222
	.  error

	referenciaClase  goto 94
	listaReferencia  goto 21
	asignacion  goto 95
	sentenciaWhile  goto 96
	print  goto 97
	invocacionMetodo  goto 98
	sentenciaIfRetorno  goto 102
	sentencia_ejecutable_return  goto 223
	return  goto 104


state 215
	sentenciaIfRetorno : IF '(' condicion ')' sentencia_ejecutable_return ',' END_IF .  (60)

	.  reduce 60


state 216
	sentenciaIf : IF '(' condicion ')' '{' bloque_ejecucion '}' ELSE '{' bloque_ejecucion . '}' END_IF  (44)
	sentenciaIf : IF '(' condicion ')' '{' bloque_ejecucion '}' ELSE '{' bloque_ejecucion . '}'  (45)
	bloque_ejecucion : bloque_ejecucion . sentenciaEjecutable ','  (68)

	ID  shift 154
	CADENA  shift 2
	IF  shift 4
	PRINT  shift 5
	WHILE  shift 10
	'}'  shift 224
	.  error

	sentenciaEjecutable  goto 190
	referenciaClase  goto 20
	listaReferencia  goto 21
	asignacion  goto 23
	sentenciaIf  goto 24
	sentenciaWhile  goto 25
	print  goto 26
	invocacionMetodo  goto 27


state 217
	sentenciaIf : IF '(' condicion ')' sentenciaEjecutable ',' ELSE '{' bloque_ejecucion '}' . END_IF  (49)

	END_IF  shift 225
	.  error


state 218
	sentenciaIf : IF '(' condicion ')' sentenciaEjecutable ',' ELSE sentenciaEjecutable ',' END_IF .  (48)

	.  reduce 48


state 219
	sentenciaIfRetorno : IF '(' condicion ')' '{' bloque_ejecucion_return '}' ELSE . '{' bloque_ejecucion_return '}' END_IF  (54)
	sentenciaIfRetorno : IF '(' condicion ')' '{' bloque_ejecucion_return '}' ELSE . '{' bloque_ejecucion_return '}'  (55)

	'{'  shift 226
	.  error


state 220
	sentenciaIfRetorno : IF '(' condicion ')' '{' bloque_ejecucion_return '}' END_IF .  (56)

	.  reduce 56


state 221
	bloque_ejecucion_return : bloque_ejecucion_return sentencia_ejecutable_return ',' .  (70)

	.  reduce 70


state 222
	sentenciaIfRetorno : IF '(' condicion ')' sentencia_ejecutable_return ',' ELSE '{' . bloque_ejecucion_return '}' END_IF  (59)

	ID  shift 154
	CADENA  shift 2
	IF  shift 92
	PRINT  shift 5
	WHILE  shift 10
	RETURN  shift 93
	.  error

	referenciaClase  goto 94
	listaReferencia  goto 21
	asignacion  goto 95
	sentenciaWhile  goto 96
	print  goto 97
	invocacionMetodo  goto 98
	sentenciaIfRetorno  goto 102
	bloque_ejecucion_return  goto 227
	sentencia_ejecutable_return  goto 206
	return  goto 104


state 223
	sentenciaIfRetorno : IF '(' condicion ')' sentencia_ejecutable_return ',' ELSE sentencia_ejecutable_return . ',' END_IF  (58)

	','  shift 228
	.  error


state 224
	sentenciaIf : IF '(' condicion ')' '{' bloque_ejecucion '}' ELSE '{' bloque_ejecucion '}' . END_IF  (44)
	sentenciaIf : IF '(' condicion ')' '{' bloque_ejecucion '}' ELSE '{' bloque_ejecucion '}' .  (45)

	END_IF  shift 229
	','  reduce 45


state 225
	sentenciaIf : IF '(' condicion ')' sentenciaEjecutable ',' ELSE '{' bloque_ejecucion '}' END_IF .  (49)

	.  reduce 49


state 226
	sentenciaIfRetorno : IF '(' condicion ')' '{' bloque_ejecucion_return '}' ELSE '{' . bloque_ejecucion_return '}' END_IF  (54)
	sentenciaIfRetorno : IF '(' condicion ')' '{' bloque_ejecucion_return '}' ELSE '{' . bloque_ejecucion_return '}'  (55)

	ID  shift 154
	CADENA  shift 2
	IF  shift 92
	PRINT  shift 5
	WHILE  shift 10
	RETURN  shift 93
	.  error

	referenciaClase  goto 94
	listaReferencia  goto 21
	asignacion  goto 95
	sentenciaWhile  goto 96
	print  goto 97
	invocacionMetodo  goto 98
	sentenciaIfRetorno  goto 102
	bloque_ejecucion_return  goto 230
	sentencia_ejecutable_return  goto 206
	return  goto 104


state 227
	sentenciaIfRetorno : IF '(' condicion ')' sentencia_ejecutable_return ',' ELSE '{' bloque_ejecucion_return . '}' END_IF  (59)
	bloque_ejecucion_return : bloque_ejecucion_return . sentencia_ejecutable_return ','  (70)

	ID  shift 154
	CADENA  shift 2
	IF  shift 92
	PRINT  shift 5
	WHILE  shift 10
	RETURN  shift 93
	'}'  shift 231
	.  error

	referenciaClase  goto 94
	listaReferencia  goto 21
	asignacion  goto 95
	sentenciaWhile  goto 96
	print  goto 97
	invocacionMetodo  goto 98
	sentenciaIfRetorno  goto 102
	sentencia_ejecutable_return  goto 212
	return  goto 104


state 228
	sentenciaIfRetorno : IF '(' condicion ')' sentencia_ejecutable_return ',' ELSE sentencia_ejecutable_return ',' . END_IF  (58)

	END_IF  shift 232
	.  error


state 229
	sentenciaIf : IF '(' condicion ')' '{' bloque_ejecucion '}' ELSE '{' bloque_ejecucion '}' END_IF .  (44)

	.  reduce 44


state 230
	sentenciaIfRetorno : IF '(' condicion ')' '{' bloque_ejecucion_return '}' ELSE '{' bloque_ejecucion_return . '}' END_IF  (54)
	sentenciaIfRetorno : IF '(' condicion ')' '{' bloque_ejecucion_return '}' ELSE '{' bloque_ejecucion_return . '}'  (55)
	bloque_ejecucion_return : bloque_ejecucion_return . sentencia_ejecutable_return ','  (70)

	ID  shift 154
	CADENA  shift 2
	IF  shift 92
	PRINT  shift 5
	WHILE  shift 10
	RETURN  shift 93
	'}'  shift 233
	.  error

	referenciaClase  goto 94
	listaReferencia  goto 21
	asignacion  goto 95
	sentenciaWhile  goto 96
	print  goto 97
	invocacionMetodo  goto 98
	sentenciaIfRetorno  goto 102
	sentencia_ejecutable_return  goto 212
	return  goto 104


state 231
	sentenciaIfRetorno : IF '(' condicion ')' sentencia_ejecutable_return ',' ELSE '{' bloque_ejecucion_return '}' . END_IF  (59)

	END_IF  shift 234
	.  error


state 232
	sentenciaIfRetorno : IF '(' condicion ')' sentencia_ejecutable_return ',' ELSE sentencia_ejecutable_return ',' END_IF .  (58)

	.  reduce 58


state 233
	sentenciaIfRetorno : IF '(' condicion ')' '{' bloque_ejecucion_return '}' ELSE '{' bloque_ejecucion_return '}' . END_IF  (54)
	sentenciaIfRetorno : IF '(' condicion ')' '{' bloque_ejecucion_return '}' ELSE '{' bloque_ejecucion_return '}' .  (55)

	END_IF  shift 235
	','  reduce 55


state 234
	sentenciaIfRetorno : IF '(' condicion ')' sentencia_ejecutable_return ',' ELSE '{' bloque_ejecucion_return '}' END_IF .  (59)

	.  reduce 59


state 235
	sentenciaIfRetorno : IF '(' condicion ')' '{' bloque_ejecucion_return '}' ELSE '{' bloque_ejecucion_return '}' END_IF .  (54)

	.  reduce 54


36 terminals, 46 nonterminals
126 grammar rules, 236 states
