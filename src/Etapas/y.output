   0  $accept : programa $end

   1  programa : '{' cuerpoPrograma '}'
   2           | '{' '}'
   3           | cuerpoPrograma '}'
   4           | '{' cuerpoPrograma

   5  cuerpoPrograma : sentencia
   6                 | cuerpoPrograma sentencia

   7  sentencia : sentenciaDeclarativa
   8            | sentenciaEjecutable ','

   9  declaracionClase : CLASS ID '{' cuerpoClase '}'
  10                   | CLASS ID ','
  11                   | CLASS ID

  12  cuerpoClase : seccionClase

  13  seccionClase : seccionClase seccionAtributos
  14               | seccionClase declaracionMetodo ','
  15               | declaracionMetodo ','
  16               | seccionAtributos

  17  referenciaClase : ID '.' referenciaClase
  18                  | ID '.' asignacion
  19                  | ID '.' invocacionMetodo

  20  seccionAtributos : tipo ID ';' listaAtributos
  21                   | ID ','
  22                   | tipo ID ','
  23                   | tipo ID

  24  listaAtributos : ID ';' listaAtributos
  25                 | ID ','
  26                 | ID

  27  sentenciaEjecutable : asignacion
  28                      | sentenciaIf
  29                      | sentenciaWhile
  30                      | print
  31                      | invocacionMetodo
  32                      | referenciaClase

  33  sentenciaDeclarativa : declaracionFuncion
  34                       | declaracion ','
  35                       | declaracionClase

  36  sentenciaDeclarativaMetodo : declaracionFuncion
  37                             | declaracion ','

  38  asignacion : ID '=' expresion
  39             | ID IGUAL expresion

  40  sentenciaIf : IF '(' condicion ')' '{' bloque_ejecucion '}' ELSE '{' bloque_ejecucion '}' END_IF
  41              | IF '(' condicion ')' '{' bloque_ejecucion '}' ELSE '{' bloque_ejecucion '}'
  42              | IF '(' condicion ')' '{' bloque_ejecucion '}' END_IF
  43              | IF '(' condicion ')' '{' bloque_ejecucion '}'
  44              | IF '(' condicion ')' sentenciaEjecutable ',' ELSE sentenciaEjecutable ',' END_IF
  45              | IF '(' condicion ')' sentenciaEjecutable ',' ELSE '{' bloque_ejecucion '}' END_IF
  46              | IF '(' condicion ')' sentenciaEjecutable ',' END_IF

  47  condicion : expresion comparador expresion
  48            | comparador expresion
  49            | expresion comparador

  50  sentenciaIfRetorno : IF '(' condicion ')' '{' bloque_ejecucion_return '}' ELSE '{' bloque_ejecucion_return ',' '}' END_IF
  51                     | IF '(' condicion ')' '{' bloque_ejecucion_return '}' ELSE '{' bloque_ejecucion_return ',' '}'
  52                     | IF '(' condicion ')' '{' bloque_ejecucion_return '}' END_IF
  53                     | IF '(' condicion ')' '{' bloque_ejecucion_return '}'
  54                     | IF '(' condicion ')' sentencia_ejecutable_return ',' ELSE sentencia_ejecutable_return ',' END_IF
  55                     | IF '(' condicion ')' sentencia_ejecutable_return ',' ELSE '{' bloque_ejecucion_return ',' '}' END_IF
  56                     | IF '(' condicion ')' sentencia_ejecutable_return ',' END_IF

  57  sentencia_ejecutable_return : print
  58                              | asignacion
  59                              | sentenciaIfRetorno
  60                              | sentenciaWhile
  61                              | invocacionMetodo
  62                              | referenciaClase
  63                              | return

  64  bloque_ejecucion : bloque_ejecucion sentenciaEjecutable ','
  65                   | sentenciaEjecutable ','

  66  bloque_ejecucion_return : bloque_ejecucion_return sentencia_ejecutable_return ','
  67                          | sentencia_ejecutable_return ','

  68  sentenciaWhile : WHILE '(' condicion ')' DO '{' bloque_ejecucion '}'
  69                 | WHILE '(' condicion ')' DO sentenciaEjecutable

  70  print : PRINT CADENA
  71        | CADENA

  72  return : RETURN

  73  declaracionMetodo : VOID ID '(' tipo ID ')' '{' cuerpoMetodo '}'
  74                    | VOID ID '(' ')' '{' cuerpoMetodo '}'

  75  declaracionFuncion : VOID ID '(' tipo ID ')' '{' cuerpoMetodo '}'
  76                     | VOID ID '(' ID ')' '{' cuerpoMetodo '}'
  77                     | VOID ID '(' ')' '{' cuerpoMetodo '}'

  78  cuerpoMetodo : listaSentenciasMetodo

  79  listaSentenciasMetodo : listaSentenciasMetodo sentenciaDeclarativaMetodo
  80                        | listaSentenciasMetodo sentencia_ejecutable_return ','
  81                        | sentenciaDeclarativaMetodo
  82                        | sentencia_ejecutable_return ','

  83  invocacionMetodo : ID '(' expresion ')'
  84                   | ID '(' ')'
  85                   | ID '(' asignacion ')'
  86                   | ID '(' tipo asignacion ')'

  87  declaracion : tipo listaDeclaracion

  88  listaDeclaracion : ID ';' listaDeclaracion
  89                   | ID

  90  tipo : SHORT
  91       | ULONG
  92       | FLOAT
  93       | ID

  94  expresion : termino
  95            | expresion '+' termino
  96            | expresion '-' termino

  97  termino : factor
  98          | termino '*' factor
  99          | termino '/' factor

 100  factor : ID
 101         | ID MENOSMENOS
 102         | CTE
 103         | '-' CTE
 104         | '(' expresion ')'

 105  comparador : MAYORIGUAL
 106             | MENORIGUAL
 107             | IGUAL
 108             | DISTINTO
 109             | '<'
 110             | '>'
 111             | '='

state 0
	$accept : . programa $end  (0)

	ID  shift 1
	CADENA  shift 2
	CLASS  shift 3
	IF  shift 4
	PRINT  shift 5
	VOID  shift 6
	SHORT  shift 7
	ULONG  shift 8
	FLOAT  shift 9
	WHILE  shift 10
	'{'  shift 11
	.  error

	programa  goto 12
	cuerpoPrograma  goto 13
	sentencia  goto 14
	sentenciaDeclarativa  goto 15
	sentenciaEjecutable  goto 16
	declaracionClase  goto 17
	referenciaClase  goto 18
	asignacion  goto 19
	invocacionMetodo  goto 20
	tipo  goto 21
	sentenciaIf  goto 22
	sentenciaWhile  goto 23
	print  goto 24
	declaracionFuncion  goto 25
	declaracion  goto 26


state 1
	referenciaClase : ID . '.' referenciaClase  (17)
	referenciaClase : ID . '.' asignacion  (18)
	referenciaClase : ID . '.' invocacionMetodo  (19)
	asignacion : ID . '=' expresion  (38)
	asignacion : ID . IGUAL expresion  (39)
	invocacionMetodo : ID . '(' expresion ')'  (83)
	invocacionMetodo : ID . '(' ')'  (84)
	invocacionMetodo : ID . '(' asignacion ')'  (85)
	invocacionMetodo : ID . '(' tipo asignacion ')'  (86)
	tipo : ID .  (93)

	IGUAL  shift 27
	'.'  shift 28
	'='  shift 29
	'('  shift 30
	ID  reduce 93


state 2
	print : CADENA .  (71)

	.  reduce 71


state 3
	declaracionClase : CLASS . ID '{' cuerpoClase '}'  (9)
	declaracionClase : CLASS . ID ','  (10)
	declaracionClase : CLASS . ID  (11)

	ID  shift 31
	.  error


state 4
	sentenciaIf : IF . '(' condicion ')' '{' bloque_ejecucion '}' ELSE '{' bloque_ejecucion '}' END_IF  (40)
	sentenciaIf : IF . '(' condicion ')' '{' bloque_ejecucion '}' ELSE '{' bloque_ejecucion '}'  (41)
	sentenciaIf : IF . '(' condicion ')' '{' bloque_ejecucion '}' END_IF  (42)
	sentenciaIf : IF . '(' condicion ')' '{' bloque_ejecucion '}'  (43)
	sentenciaIf : IF . '(' condicion ')' sentenciaEjecutable ',' ELSE sentenciaEjecutable ',' END_IF  (44)
	sentenciaIf : IF . '(' condicion ')' sentenciaEjecutable ',' ELSE '{' bloque_ejecucion '}' END_IF  (45)
	sentenciaIf : IF . '(' condicion ')' sentenciaEjecutable ',' END_IF  (46)

	'('  shift 32
	.  error


state 5
	print : PRINT . CADENA  (70)

	CADENA  shift 33
	.  error


state 6
	declaracionFuncion : VOID . ID '(' tipo ID ')' '{' cuerpoMetodo '}'  (75)
	declaracionFuncion : VOID . ID '(' ID ')' '{' cuerpoMetodo '}'  (76)
	declaracionFuncion : VOID . ID '(' ')' '{' cuerpoMetodo '}'  (77)

	ID  shift 34
	.  error


state 7
	tipo : SHORT .  (90)

	.  reduce 90


state 8
	tipo : ULONG .  (91)

	.  reduce 91


state 9
	tipo : FLOAT .  (92)

	.  reduce 92


state 10
	sentenciaWhile : WHILE . '(' condicion ')' DO '{' bloque_ejecucion '}'  (68)
	sentenciaWhile : WHILE . '(' condicion ')' DO sentenciaEjecutable  (69)

	'('  shift 35
	.  error


state 11
	programa : '{' . cuerpoPrograma '}'  (1)
	programa : '{' . '}'  (2)
	programa : '{' . cuerpoPrograma  (4)

	ID  shift 1
	CADENA  shift 2
	CLASS  shift 3
	IF  shift 4
	PRINT  shift 5
	VOID  shift 6
	SHORT  shift 7
	ULONG  shift 8
	FLOAT  shift 9
	WHILE  shift 10
	'}'  shift 36
	.  error

	cuerpoPrograma  goto 37
	sentencia  goto 14
	sentenciaDeclarativa  goto 15
	sentenciaEjecutable  goto 16
	declaracionClase  goto 17
	referenciaClase  goto 18
	asignacion  goto 19
	invocacionMetodo  goto 20
	tipo  goto 21
	sentenciaIf  goto 22
	sentenciaWhile  goto 23
	print  goto 24
	declaracionFuncion  goto 25
	declaracion  goto 26


state 12
	$accept : programa . $end  (0)

	$end  accept


state 13
	programa : cuerpoPrograma . '}'  (3)
	cuerpoPrograma : cuerpoPrograma . sentencia  (6)

	ID  shift 1
	CADENA  shift 2
	CLASS  shift 3
	IF  shift 4
	PRINT  shift 5
	VOID  shift 6
	SHORT  shift 7
	ULONG  shift 8
	FLOAT  shift 9
	WHILE  shift 10
	'}'  shift 38
	.  error

	sentencia  goto 39
	sentenciaDeclarativa  goto 15
	sentenciaEjecutable  goto 16
	declaracionClase  goto 17
	referenciaClase  goto 18
	asignacion  goto 19
	invocacionMetodo  goto 20
	tipo  goto 21
	sentenciaIf  goto 22
	sentenciaWhile  goto 23
	print  goto 24
	declaracionFuncion  goto 25
	declaracion  goto 26


state 14
	cuerpoPrograma : sentencia .  (5)

	.  reduce 5


state 15
	sentencia : sentenciaDeclarativa .  (7)

	.  reduce 7


state 16
	sentencia : sentenciaEjecutable . ','  (8)

	','  shift 40
	.  error


state 17
	sentenciaDeclarativa : declaracionClase .  (35)

	.  reduce 35


state 18
	sentenciaEjecutable : referenciaClase .  (32)

	.  reduce 32


state 19
	sentenciaEjecutable : asignacion .  (27)

	.  reduce 27


state 20
	sentenciaEjecutable : invocacionMetodo .  (31)

	.  reduce 31


state 21
	declaracion : tipo . listaDeclaracion  (87)

	ID  shift 41
	.  error

	listaDeclaracion  goto 42


state 22
	sentenciaEjecutable : sentenciaIf .  (28)

	.  reduce 28


state 23
	sentenciaEjecutable : sentenciaWhile .  (29)

	.  reduce 29


state 24
	sentenciaEjecutable : print .  (30)

	.  reduce 30


state 25
	sentenciaDeclarativa : declaracionFuncion .  (33)

	.  reduce 33


state 26
	sentenciaDeclarativa : declaracion . ','  (34)

	','  shift 43
	.  error


state 27
	asignacion : ID IGUAL . expresion  (39)

	ID  shift 44
	CTE  shift 45
	'-'  shift 46
	'('  shift 47
	.  error

	expresion  goto 48
	termino  goto 49
	factor  goto 50


state 28
	referenciaClase : ID '.' . referenciaClase  (17)
	referenciaClase : ID '.' . asignacion  (18)
	referenciaClase : ID '.' . invocacionMetodo  (19)

	ID  shift 51
	.  error

	referenciaClase  goto 52
	asignacion  goto 53
	invocacionMetodo  goto 54


state 29
	asignacion : ID '=' . expresion  (38)

	ID  shift 44
	CTE  shift 45
	'-'  shift 46
	'('  shift 47
	.  error

	expresion  goto 55
	termino  goto 49
	factor  goto 50


state 30
	invocacionMetodo : ID '(' . expresion ')'  (83)
	invocacionMetodo : ID '(' . ')'  (84)
	invocacionMetodo : ID '(' . asignacion ')'  (85)
	invocacionMetodo : ID '(' . tipo asignacion ')'  (86)

	ID  shift 56
	CTE  shift 45
	SHORT  shift 7
	ULONG  shift 8
	FLOAT  shift 9
	'-'  shift 46
	'('  shift 47
	')'  shift 57
	.  error

	asignacion  goto 58
	tipo  goto 59
	expresion  goto 60
	termino  goto 49
	factor  goto 50


state 31
	declaracionClase : CLASS ID . '{' cuerpoClase '}'  (9)
	declaracionClase : CLASS ID . ','  (10)
	declaracionClase : CLASS ID .  (11)

	'{'  shift 61
	','  shift 62
	$end  reduce 11
	ID  reduce 11
	CADENA  reduce 11
	CLASS  reduce 11
	IF  reduce 11
	PRINT  reduce 11
	VOID  reduce 11
	SHORT  reduce 11
	ULONG  reduce 11
	FLOAT  reduce 11
	WHILE  reduce 11
	'}'  reduce 11


state 32
	sentenciaIf : IF '(' . condicion ')' '{' bloque_ejecucion '}' ELSE '{' bloque_ejecucion '}' END_IF  (40)
	sentenciaIf : IF '(' . condicion ')' '{' bloque_ejecucion '}' ELSE '{' bloque_ejecucion '}'  (41)
	sentenciaIf : IF '(' . condicion ')' '{' bloque_ejecucion '}' END_IF  (42)
	sentenciaIf : IF '(' . condicion ')' '{' bloque_ejecucion '}'  (43)
	sentenciaIf : IF '(' . condicion ')' sentenciaEjecutable ',' ELSE sentenciaEjecutable ',' END_IF  (44)
	sentenciaIf : IF '(' . condicion ')' sentenciaEjecutable ',' ELSE '{' bloque_ejecucion '}' END_IF  (45)
	sentenciaIf : IF '(' . condicion ')' sentenciaEjecutable ',' END_IF  (46)

	ID  shift 44
	CTE  shift 45
	MAYORIGUAL  shift 63
	MENORIGUAL  shift 64
	IGUAL  shift 65
	DISTINTO  shift 66
	'-'  shift 46
	'='  shift 67
	'('  shift 47
	'<'  shift 68
	'>'  shift 69
	.  error

	expresion  goto 70
	condicion  goto 71
	comparador  goto 72
	termino  goto 49
	factor  goto 50


state 33
	print : PRINT CADENA .  (70)

	.  reduce 70


state 34
	declaracionFuncion : VOID ID . '(' tipo ID ')' '{' cuerpoMetodo '}'  (75)
	declaracionFuncion : VOID ID . '(' ID ')' '{' cuerpoMetodo '}'  (76)
	declaracionFuncion : VOID ID . '(' ')' '{' cuerpoMetodo '}'  (77)

	'('  shift 73
	.  error


state 35
	sentenciaWhile : WHILE '(' . condicion ')' DO '{' bloque_ejecucion '}'  (68)
	sentenciaWhile : WHILE '(' . condicion ')' DO sentenciaEjecutable  (69)

	ID  shift 44
	CTE  shift 45
	MAYORIGUAL  shift 63
	MENORIGUAL  shift 64
	IGUAL  shift 65
	DISTINTO  shift 66
	'-'  shift 46
	'='  shift 67
	'('  shift 47
	'<'  shift 68
	'>'  shift 69
	.  error

	expresion  goto 70
	condicion  goto 74
	comparador  goto 72
	termino  goto 49
	factor  goto 50


state 36
	programa : '{' '}' .  (2)

	.  reduce 2


state 37
	programa : '{' cuerpoPrograma . '}'  (1)
	programa : '{' cuerpoPrograma .  (4)
	cuerpoPrograma : cuerpoPrograma . sentencia  (6)

	ID  shift 1
	CADENA  shift 2
	CLASS  shift 3
	IF  shift 4
	PRINT  shift 5
	VOID  shift 6
	SHORT  shift 7
	ULONG  shift 8
	FLOAT  shift 9
	WHILE  shift 10
	'}'  shift 75
	$end  reduce 4

	sentencia  goto 39
	sentenciaDeclarativa  goto 15
	sentenciaEjecutable  goto 16
	declaracionClase  goto 17
	referenciaClase  goto 18
	asignacion  goto 19
	invocacionMetodo  goto 20
	tipo  goto 21
	sentenciaIf  goto 22
	sentenciaWhile  goto 23
	print  goto 24
	declaracionFuncion  goto 25
	declaracion  goto 26


state 38
	programa : cuerpoPrograma '}' .  (3)

	.  reduce 3


state 39
	cuerpoPrograma : cuerpoPrograma sentencia .  (6)

	.  reduce 6


state 40
	sentencia : sentenciaEjecutable ',' .  (8)

	.  reduce 8


state 41
	listaDeclaracion : ID . ';' listaDeclaracion  (88)
	listaDeclaracion : ID .  (89)

	';'  shift 76
	','  reduce 89


state 42
	declaracion : tipo listaDeclaracion .  (87)

	.  reduce 87


state 43
	sentenciaDeclarativa : declaracion ',' .  (34)

	.  reduce 34


state 44
	factor : ID .  (100)
	factor : ID . MENOSMENOS  (101)

	MENOSMENOS  shift 77
	MAYORIGUAL  reduce 100
	MENORIGUAL  reduce 100
	IGUAL  reduce 100
	DISTINTO  reduce 100
	'+'  reduce 100
	'-'  reduce 100
	'*'  reduce 100
	'/'  reduce 100
	','  reduce 100
	'='  reduce 100
	')'  reduce 100
	'<'  reduce 100
	'>'  reduce 100


state 45
	factor : CTE .  (102)

	.  reduce 102


state 46
	factor : '-' . CTE  (103)

	CTE  shift 78
	.  error


state 47
	factor : '(' . expresion ')'  (104)

	ID  shift 44
	CTE  shift 45
	'-'  shift 46
	'('  shift 47
	.  error

	expresion  goto 79
	termino  goto 49
	factor  goto 50


state 48
	asignacion : ID IGUAL expresion .  (39)
	expresion : expresion . '+' termino  (95)
	expresion : expresion . '-' termino  (96)

	'+'  shift 80
	'-'  shift 81
	','  reduce 39
	')'  reduce 39


state 49
	expresion : termino .  (94)
	termino : termino . '*' factor  (98)
	termino : termino . '/' factor  (99)

	'*'  shift 82
	'/'  shift 83
	MAYORIGUAL  reduce 94
	MENORIGUAL  reduce 94
	IGUAL  reduce 94
	DISTINTO  reduce 94
	'+'  reduce 94
	'-'  reduce 94
	','  reduce 94
	'='  reduce 94
	')'  reduce 94
	'<'  reduce 94
	'>'  reduce 94


state 50
	termino : factor .  (97)

	.  reduce 97


state 51
	referenciaClase : ID . '.' referenciaClase  (17)
	referenciaClase : ID . '.' asignacion  (18)
	referenciaClase : ID . '.' invocacionMetodo  (19)
	asignacion : ID . '=' expresion  (38)
	asignacion : ID . IGUAL expresion  (39)
	invocacionMetodo : ID . '(' expresion ')'  (83)
	invocacionMetodo : ID . '(' ')'  (84)
	invocacionMetodo : ID . '(' asignacion ')'  (85)
	invocacionMetodo : ID . '(' tipo asignacion ')'  (86)

	IGUAL  shift 27
	'.'  shift 28
	'='  shift 29
	'('  shift 30
	.  error


state 52
	referenciaClase : ID '.' referenciaClase .  (17)

	.  reduce 17


state 53
	referenciaClase : ID '.' asignacion .  (18)

	.  reduce 18


state 54
	referenciaClase : ID '.' invocacionMetodo .  (19)

	.  reduce 19


state 55
	asignacion : ID '=' expresion .  (38)
	expresion : expresion . '+' termino  (95)
	expresion : expresion . '-' termino  (96)

	'+'  shift 80
	'-'  shift 81
	','  reduce 38
	')'  reduce 38


state 56
	asignacion : ID . '=' expresion  (38)
	asignacion : ID . IGUAL expresion  (39)
	tipo : ID .  (93)
	factor : ID .  (100)
	factor : ID . MENOSMENOS  (101)

	IGUAL  shift 27
	MENOSMENOS  shift 77
	'='  shift 29
	ID  reduce 93
	'+'  reduce 100
	'-'  reduce 100
	'*'  reduce 100
	'/'  reduce 100
	')'  reduce 100


state 57
	invocacionMetodo : ID '(' ')' .  (84)

	.  reduce 84


state 58
	invocacionMetodo : ID '(' asignacion . ')'  (85)

	')'  shift 84
	.  error


state 59
	invocacionMetodo : ID '(' tipo . asignacion ')'  (86)

	ID  shift 85
	.  error

	asignacion  goto 86


state 60
	invocacionMetodo : ID '(' expresion . ')'  (83)
	expresion : expresion . '+' termino  (95)
	expresion : expresion . '-' termino  (96)

	'+'  shift 80
	'-'  shift 81
	')'  shift 87
	.  error


state 61
	declaracionClase : CLASS ID '{' . cuerpoClase '}'  (9)

	ID  shift 88
	VOID  shift 89
	SHORT  shift 7
	ULONG  shift 8
	FLOAT  shift 9
	.  error

	cuerpoClase  goto 90
	seccionClase  goto 91
	seccionAtributos  goto 92
	declaracionMetodo  goto 93
	tipo  goto 94


state 62
	declaracionClase : CLASS ID ',' .  (10)

	.  reduce 10


state 63
	comparador : MAYORIGUAL .  (105)

	.  reduce 105


state 64
	comparador : MENORIGUAL .  (106)

	.  reduce 106


state 65
	comparador : IGUAL .  (107)

	.  reduce 107


state 66
	comparador : DISTINTO .  (108)

	.  reduce 108


state 67
	comparador : '=' .  (111)

	.  reduce 111


state 68
	comparador : '<' .  (109)

	.  reduce 109


state 69
	comparador : '>' .  (110)

	.  reduce 110


state 70
	condicion : expresion . comparador expresion  (47)
	condicion : expresion . comparador  (49)
	expresion : expresion . '+' termino  (95)
	expresion : expresion . '-' termino  (96)

	MAYORIGUAL  shift 63
	MENORIGUAL  shift 64
	IGUAL  shift 65
	DISTINTO  shift 66
	'+'  shift 80
	'-'  shift 81
	'='  shift 67
	'<'  shift 68
	'>'  shift 69
	.  error

	comparador  goto 95


state 71
	sentenciaIf : IF '(' condicion . ')' '{' bloque_ejecucion '}' ELSE '{' bloque_ejecucion '}' END_IF  (40)
	sentenciaIf : IF '(' condicion . ')' '{' bloque_ejecucion '}' ELSE '{' bloque_ejecucion '}'  (41)
	sentenciaIf : IF '(' condicion . ')' '{' bloque_ejecucion '}' END_IF  (42)
	sentenciaIf : IF '(' condicion . ')' '{' bloque_ejecucion '}'  (43)
	sentenciaIf : IF '(' condicion . ')' sentenciaEjecutable ',' ELSE sentenciaEjecutable ',' END_IF  (44)
	sentenciaIf : IF '(' condicion . ')' sentenciaEjecutable ',' ELSE '{' bloque_ejecucion '}' END_IF  (45)
	sentenciaIf : IF '(' condicion . ')' sentenciaEjecutable ',' END_IF  (46)

	')'  shift 96
	.  error


state 72
	condicion : comparador . expresion  (48)

	ID  shift 44
	CTE  shift 45
	'-'  shift 46
	'('  shift 47
	.  error

	expresion  goto 97
	termino  goto 49
	factor  goto 50


state 73
	declaracionFuncion : VOID ID '(' . tipo ID ')' '{' cuerpoMetodo '}'  (75)
	declaracionFuncion : VOID ID '(' . ID ')' '{' cuerpoMetodo '}'  (76)
	declaracionFuncion : VOID ID '(' . ')' '{' cuerpoMetodo '}'  (77)

	ID  shift 98
	SHORT  shift 7
	ULONG  shift 8
	FLOAT  shift 9
	')'  shift 99
	.  error

	tipo  goto 100


state 74
	sentenciaWhile : WHILE '(' condicion . ')' DO '{' bloque_ejecucion '}'  (68)
	sentenciaWhile : WHILE '(' condicion . ')' DO sentenciaEjecutable  (69)

	')'  shift 101
	.  error


state 75
	programa : '{' cuerpoPrograma '}' .  (1)

	.  reduce 1


state 76
	listaDeclaracion : ID ';' . listaDeclaracion  (88)

	ID  shift 41
	.  error

	listaDeclaracion  goto 102


state 77
	factor : ID MENOSMENOS .  (101)

	.  reduce 101


state 78
	factor : '-' CTE .  (103)

	.  reduce 103


state 79
	expresion : expresion . '+' termino  (95)
	expresion : expresion . '-' termino  (96)
	factor : '(' expresion . ')'  (104)

	'+'  shift 80
	'-'  shift 81
	')'  shift 103
	.  error


state 80
	expresion : expresion '+' . termino  (95)

	ID  shift 44
	CTE  shift 45
	'-'  shift 46
	'('  shift 47
	.  error

	termino  goto 104
	factor  goto 50


state 81
	expresion : expresion '-' . termino  (96)

	ID  shift 44
	CTE  shift 45
	'-'  shift 46
	'('  shift 47
	.  error

	termino  goto 105
	factor  goto 50


state 82
	termino : termino '*' . factor  (98)

	ID  shift 44
	CTE  shift 45
	'-'  shift 46
	'('  shift 47
	.  error

	factor  goto 106


state 83
	termino : termino '/' . factor  (99)

	ID  shift 44
	CTE  shift 45
	'-'  shift 46
	'('  shift 47
	.  error

	factor  goto 107


state 84
	invocacionMetodo : ID '(' asignacion ')' .  (85)

	.  reduce 85


state 85
	asignacion : ID . '=' expresion  (38)
	asignacion : ID . IGUAL expresion  (39)

	IGUAL  shift 27
	'='  shift 29
	.  error


state 86
	invocacionMetodo : ID '(' tipo asignacion . ')'  (86)

	')'  shift 108
	.  error


state 87
	invocacionMetodo : ID '(' expresion ')' .  (83)

	.  reduce 83


state 88
	seccionAtributos : ID . ','  (21)
	tipo : ID .  (93)

	','  shift 109
	ID  reduce 93


state 89
	declaracionMetodo : VOID . ID '(' tipo ID ')' '{' cuerpoMetodo '}'  (73)
	declaracionMetodo : VOID . ID '(' ')' '{' cuerpoMetodo '}'  (74)

	ID  shift 110
	.  error


state 90
	declaracionClase : CLASS ID '{' cuerpoClase . '}'  (9)

	'}'  shift 111
	.  error


state 91
	cuerpoClase : seccionClase .  (12)
	seccionClase : seccionClase . seccionAtributos  (13)
	seccionClase : seccionClase . declaracionMetodo ','  (14)

	ID  shift 88
	VOID  shift 89
	SHORT  shift 7
	ULONG  shift 8
	FLOAT  shift 9
	'}'  reduce 12

	seccionAtributos  goto 112
	declaracionMetodo  goto 113
	tipo  goto 94


state 92
	seccionClase : seccionAtributos .  (16)

	.  reduce 16


state 93
	seccionClase : declaracionMetodo . ','  (15)

	','  shift 114
	.  error


state 94
	seccionAtributos : tipo . ID ';' listaAtributos  (20)
	seccionAtributos : tipo . ID ','  (22)
	seccionAtributos : tipo . ID  (23)

	ID  shift 115
	.  error


state 95
	condicion : expresion comparador . expresion  (47)
	condicion : expresion comparador .  (49)

	ID  shift 44
	CTE  shift 45
	'-'  shift 46
	'('  shift 47
	')'  reduce 49

	expresion  goto 116
	termino  goto 49
	factor  goto 50


state 96
	sentenciaIf : IF '(' condicion ')' . '{' bloque_ejecucion '}' ELSE '{' bloque_ejecucion '}' END_IF  (40)
	sentenciaIf : IF '(' condicion ')' . '{' bloque_ejecucion '}' ELSE '{' bloque_ejecucion '}'  (41)
	sentenciaIf : IF '(' condicion ')' . '{' bloque_ejecucion '}' END_IF  (42)
	sentenciaIf : IF '(' condicion ')' . '{' bloque_ejecucion '}'  (43)
	sentenciaIf : IF '(' condicion ')' . sentenciaEjecutable ',' ELSE sentenciaEjecutable ',' END_IF  (44)
	sentenciaIf : IF '(' condicion ')' . sentenciaEjecutable ',' ELSE '{' bloque_ejecucion '}' END_IF  (45)
	sentenciaIf : IF '(' condicion ')' . sentenciaEjecutable ',' END_IF  (46)

	ID  shift 51
	CADENA  shift 2
	IF  shift 4
	PRINT  shift 5
	WHILE  shift 10
	'{'  shift 117
	.  error

	sentenciaEjecutable  goto 118
	referenciaClase  goto 18
	asignacion  goto 19
	invocacionMetodo  goto 20
	sentenciaIf  goto 22
	sentenciaWhile  goto 23
	print  goto 24


state 97
	condicion : comparador expresion .  (48)
	expresion : expresion . '+' termino  (95)
	expresion : expresion . '-' termino  (96)

	'+'  shift 80
	'-'  shift 81
	')'  reduce 48


state 98
	declaracionFuncion : VOID ID '(' ID . ')' '{' cuerpoMetodo '}'  (76)
	tipo : ID .  (93)

	')'  shift 119
	ID  reduce 93


state 99
	declaracionFuncion : VOID ID '(' ')' . '{' cuerpoMetodo '}'  (77)

	'{'  shift 120
	.  error


state 100
	declaracionFuncion : VOID ID '(' tipo . ID ')' '{' cuerpoMetodo '}'  (75)

	ID  shift 121
	.  error


state 101
	sentenciaWhile : WHILE '(' condicion ')' . DO '{' bloque_ejecucion '}'  (68)
	sentenciaWhile : WHILE '(' condicion ')' . DO sentenciaEjecutable  (69)

	DO  shift 122
	.  error


state 102
	listaDeclaracion : ID ';' listaDeclaracion .  (88)

	.  reduce 88


state 103
	factor : '(' expresion ')' .  (104)

	.  reduce 104


state 104
	expresion : expresion '+' termino .  (95)
	termino : termino . '*' factor  (98)
	termino : termino . '/' factor  (99)

	'*'  shift 82
	'/'  shift 83
	MAYORIGUAL  reduce 95
	MENORIGUAL  reduce 95
	IGUAL  reduce 95
	DISTINTO  reduce 95
	'+'  reduce 95
	'-'  reduce 95
	','  reduce 95
	'='  reduce 95
	')'  reduce 95
	'<'  reduce 95
	'>'  reduce 95


state 105
	expresion : expresion '-' termino .  (96)
	termino : termino . '*' factor  (98)
	termino : termino . '/' factor  (99)

	'*'  shift 82
	'/'  shift 83
	MAYORIGUAL  reduce 96
	MENORIGUAL  reduce 96
	IGUAL  reduce 96
	DISTINTO  reduce 96
	'+'  reduce 96
	'-'  reduce 96
	','  reduce 96
	'='  reduce 96
	')'  reduce 96
	'<'  reduce 96
	'>'  reduce 96


state 106
	termino : termino '*' factor .  (98)

	.  reduce 98


state 107
	termino : termino '/' factor .  (99)

	.  reduce 99


state 108
	invocacionMetodo : ID '(' tipo asignacion ')' .  (86)

	.  reduce 86


state 109
	seccionAtributos : ID ',' .  (21)

	.  reduce 21


state 110
	declaracionMetodo : VOID ID . '(' tipo ID ')' '{' cuerpoMetodo '}'  (73)
	declaracionMetodo : VOID ID . '(' ')' '{' cuerpoMetodo '}'  (74)

	'('  shift 123
	.  error


state 111
	declaracionClase : CLASS ID '{' cuerpoClase '}' .  (9)

	.  reduce 9


state 112
	seccionClase : seccionClase seccionAtributos .  (13)

	.  reduce 13


state 113
	seccionClase : seccionClase declaracionMetodo . ','  (14)

	','  shift 124
	.  error


state 114
	seccionClase : declaracionMetodo ',' .  (15)

	.  reduce 15


state 115
	seccionAtributos : tipo ID . ';' listaAtributos  (20)
	seccionAtributos : tipo ID . ','  (22)
	seccionAtributos : tipo ID .  (23)

	','  shift 125
	';'  shift 126
	ID  reduce 23
	VOID  reduce 23
	SHORT  reduce 23
	ULONG  reduce 23
	FLOAT  reduce 23
	'}'  reduce 23


state 116
	condicion : expresion comparador expresion .  (47)
	expresion : expresion . '+' termino  (95)
	expresion : expresion . '-' termino  (96)

	'+'  shift 80
	'-'  shift 81
	')'  reduce 47


state 117
	sentenciaIf : IF '(' condicion ')' '{' . bloque_ejecucion '}' ELSE '{' bloque_ejecucion '}' END_IF  (40)
	sentenciaIf : IF '(' condicion ')' '{' . bloque_ejecucion '}' ELSE '{' bloque_ejecucion '}'  (41)
	sentenciaIf : IF '(' condicion ')' '{' . bloque_ejecucion '}' END_IF  (42)
	sentenciaIf : IF '(' condicion ')' '{' . bloque_ejecucion '}'  (43)

	ID  shift 51
	CADENA  shift 2
	IF  shift 4
	PRINT  shift 5
	WHILE  shift 10
	.  error

	sentenciaEjecutable  goto 127
	referenciaClase  goto 18
	asignacion  goto 19
	invocacionMetodo  goto 20
	sentenciaIf  goto 22
	sentenciaWhile  goto 23
	print  goto 24
	bloque_ejecucion  goto 128


state 118
	sentenciaIf : IF '(' condicion ')' sentenciaEjecutable . ',' ELSE sentenciaEjecutable ',' END_IF  (44)
	sentenciaIf : IF '(' condicion ')' sentenciaEjecutable . ',' ELSE '{' bloque_ejecucion '}' END_IF  (45)
	sentenciaIf : IF '(' condicion ')' sentenciaEjecutable . ',' END_IF  (46)

	','  shift 129
	.  error


state 119
	declaracionFuncion : VOID ID '(' ID ')' . '{' cuerpoMetodo '}'  (76)

	'{'  shift 130
	.  error


state 120
	declaracionFuncion : VOID ID '(' ')' '{' . cuerpoMetodo '}'  (77)

	ID  shift 1
	CADENA  shift 2
	IF  shift 131
	PRINT  shift 5
	VOID  shift 6
	SHORT  shift 7
	ULONG  shift 8
	FLOAT  shift 9
	WHILE  shift 10
	RETURN  shift 132
	.  error

	referenciaClase  goto 133
	asignacion  goto 134
	invocacionMetodo  goto 135
	tipo  goto 21
	sentenciaWhile  goto 136
	print  goto 137
	declaracionFuncion  goto 138
	declaracion  goto 139
	sentenciaDeclarativaMetodo  goto 140
	sentenciaIfRetorno  goto 141
	sentencia_ejecutable_return  goto 142
	return  goto 143
	cuerpoMetodo  goto 144
	listaSentenciasMetodo  goto 145


state 121
	declaracionFuncion : VOID ID '(' tipo ID . ')' '{' cuerpoMetodo '}'  (75)

	')'  shift 146
	.  error


state 122
	sentenciaWhile : WHILE '(' condicion ')' DO . '{' bloque_ejecucion '}'  (68)
	sentenciaWhile : WHILE '(' condicion ')' DO . sentenciaEjecutable  (69)

	ID  shift 51
	CADENA  shift 2
	IF  shift 4
	PRINT  shift 5
	WHILE  shift 10
	'{'  shift 147
	.  error

	sentenciaEjecutable  goto 148
	referenciaClase  goto 18
	asignacion  goto 19
	invocacionMetodo  goto 20
	sentenciaIf  goto 22
	sentenciaWhile  goto 23
	print  goto 24


state 123
	declaracionMetodo : VOID ID '(' . tipo ID ')' '{' cuerpoMetodo '}'  (73)
	declaracionMetodo : VOID ID '(' . ')' '{' cuerpoMetodo '}'  (74)

	ID  shift 149
	SHORT  shift 7
	ULONG  shift 8
	FLOAT  shift 9
	')'  shift 150
	.  error

	tipo  goto 151


state 124
	seccionClase : seccionClase declaracionMetodo ',' .  (14)

	.  reduce 14


state 125
	seccionAtributos : tipo ID ',' .  (22)

	.  reduce 22


state 126
	seccionAtributos : tipo ID ';' . listaAtributos  (20)

	ID  shift 152
	.  error

	listaAtributos  goto 153


state 127
	bloque_ejecucion : sentenciaEjecutable . ','  (65)

	','  shift 154
	.  error


state 128
	sentenciaIf : IF '(' condicion ')' '{' bloque_ejecucion . '}' ELSE '{' bloque_ejecucion '}' END_IF  (40)
	sentenciaIf : IF '(' condicion ')' '{' bloque_ejecucion . '}' ELSE '{' bloque_ejecucion '}'  (41)
	sentenciaIf : IF '(' condicion ')' '{' bloque_ejecucion . '}' END_IF  (42)
	sentenciaIf : IF '(' condicion ')' '{' bloque_ejecucion . '}'  (43)
	bloque_ejecucion : bloque_ejecucion . sentenciaEjecutable ','  (64)

	ID  shift 51
	CADENA  shift 2
	IF  shift 4
	PRINT  shift 5
	WHILE  shift 10
	'}'  shift 155
	.  error

	sentenciaEjecutable  goto 156
	referenciaClase  goto 18
	asignacion  goto 19
	invocacionMetodo  goto 20
	sentenciaIf  goto 22
	sentenciaWhile  goto 23
	print  goto 24


state 129
	sentenciaIf : IF '(' condicion ')' sentenciaEjecutable ',' . ELSE sentenciaEjecutable ',' END_IF  (44)
	sentenciaIf : IF '(' condicion ')' sentenciaEjecutable ',' . ELSE '{' bloque_ejecucion '}' END_IF  (45)
	sentenciaIf : IF '(' condicion ')' sentenciaEjecutable ',' . END_IF  (46)

	ELSE  shift 157
	END_IF  shift 158
	.  error


state 130
	declaracionFuncion : VOID ID '(' ID ')' '{' . cuerpoMetodo '}'  (76)

	ID  shift 1
	CADENA  shift 2
	IF  shift 131
	PRINT  shift 5
	VOID  shift 6
	SHORT  shift 7
	ULONG  shift 8
	FLOAT  shift 9
	WHILE  shift 10
	RETURN  shift 132
	.  error

	referenciaClase  goto 133
	asignacion  goto 134
	invocacionMetodo  goto 135
	tipo  goto 21
	sentenciaWhile  goto 136
	print  goto 137
	declaracionFuncion  goto 138
	declaracion  goto 139
	sentenciaDeclarativaMetodo  goto 140
	sentenciaIfRetorno  goto 141
	sentencia_ejecutable_return  goto 142
	return  goto 143
	cuerpoMetodo  goto 159
	listaSentenciasMetodo  goto 145


state 131
	sentenciaIfRetorno : IF . '(' condicion ')' '{' bloque_ejecucion_return '}' ELSE '{' bloque_ejecucion_return ',' '}' END_IF  (50)
	sentenciaIfRetorno : IF . '(' condicion ')' '{' bloque_ejecucion_return '}' ELSE '{' bloque_ejecucion_return ',' '}'  (51)
	sentenciaIfRetorno : IF . '(' condicion ')' '{' bloque_ejecucion_return '}' END_IF  (52)
	sentenciaIfRetorno : IF . '(' condicion ')' '{' bloque_ejecucion_return '}'  (53)
	sentenciaIfRetorno : IF . '(' condicion ')' sentencia_ejecutable_return ',' ELSE sentencia_ejecutable_return ',' END_IF  (54)
	sentenciaIfRetorno : IF . '(' condicion ')' sentencia_ejecutable_return ',' ELSE '{' bloque_ejecucion_return ',' '}' END_IF  (55)
	sentenciaIfRetorno : IF . '(' condicion ')' sentencia_ejecutable_return ',' END_IF  (56)

	'('  shift 160
	.  error


state 132
	return : RETURN .  (72)

	.  reduce 72


state 133
	sentencia_ejecutable_return : referenciaClase .  (62)

	.  reduce 62


state 134
	sentencia_ejecutable_return : asignacion .  (58)

	.  reduce 58


state 135
	sentencia_ejecutable_return : invocacionMetodo .  (61)

	.  reduce 61


state 136
	sentencia_ejecutable_return : sentenciaWhile .  (60)

	.  reduce 60


state 137
	sentencia_ejecutable_return : print .  (57)

	.  reduce 57


state 138
	sentenciaDeclarativaMetodo : declaracionFuncion .  (36)

	.  reduce 36


state 139
	sentenciaDeclarativaMetodo : declaracion . ','  (37)

	','  shift 161
	.  error


state 140
	listaSentenciasMetodo : sentenciaDeclarativaMetodo .  (81)

	.  reduce 81


state 141
	sentencia_ejecutable_return : sentenciaIfRetorno .  (59)

	.  reduce 59


state 142
	listaSentenciasMetodo : sentencia_ejecutable_return . ','  (82)

	','  shift 162
	.  error


state 143
	sentencia_ejecutable_return : return .  (63)

	.  reduce 63


state 144
	declaracionFuncion : VOID ID '(' ')' '{' cuerpoMetodo . '}'  (77)

	'}'  shift 163
	.  error


state 145
	cuerpoMetodo : listaSentenciasMetodo .  (78)
	listaSentenciasMetodo : listaSentenciasMetodo . sentenciaDeclarativaMetodo  (79)
	listaSentenciasMetodo : listaSentenciasMetodo . sentencia_ejecutable_return ','  (80)

	ID  shift 1
	CADENA  shift 2
	IF  shift 131
	PRINT  shift 5
	VOID  shift 6
	SHORT  shift 7
	ULONG  shift 8
	FLOAT  shift 9
	WHILE  shift 10
	RETURN  shift 132
	'}'  reduce 78

	referenciaClase  goto 133
	asignacion  goto 134
	invocacionMetodo  goto 135
	tipo  goto 21
	sentenciaWhile  goto 136
	print  goto 137
	declaracionFuncion  goto 138
	declaracion  goto 139
	sentenciaDeclarativaMetodo  goto 164
	sentenciaIfRetorno  goto 141
	sentencia_ejecutable_return  goto 165
	return  goto 143


state 146
	declaracionFuncion : VOID ID '(' tipo ID ')' . '{' cuerpoMetodo '}'  (75)

	'{'  shift 166
	.  error


state 147
	sentenciaWhile : WHILE '(' condicion ')' DO '{' . bloque_ejecucion '}'  (68)

	ID  shift 51
	CADENA  shift 2
	IF  shift 4
	PRINT  shift 5
	WHILE  shift 10
	.  error

	sentenciaEjecutable  goto 127
	referenciaClase  goto 18
	asignacion  goto 19
	invocacionMetodo  goto 20
	sentenciaIf  goto 22
	sentenciaWhile  goto 23
	print  goto 24
	bloque_ejecucion  goto 167


state 148
	sentenciaWhile : WHILE '(' condicion ')' DO sentenciaEjecutable .  (69)

	.  reduce 69


state 149
	tipo : ID .  (93)

	.  reduce 93


state 150
	declaracionMetodo : VOID ID '(' ')' . '{' cuerpoMetodo '}'  (74)

	'{'  shift 168
	.  error


state 151
	declaracionMetodo : VOID ID '(' tipo . ID ')' '{' cuerpoMetodo '}'  (73)

	ID  shift 169
	.  error


state 152
	listaAtributos : ID . ';' listaAtributos  (24)
	listaAtributos : ID . ','  (25)
	listaAtributos : ID .  (26)

	','  shift 170
	';'  shift 171
	ID  reduce 26
	VOID  reduce 26
	SHORT  reduce 26
	ULONG  reduce 26
	FLOAT  reduce 26
	'}'  reduce 26


state 153
	seccionAtributos : tipo ID ';' listaAtributos .  (20)

	.  reduce 20


state 154
	bloque_ejecucion : sentenciaEjecutable ',' .  (65)

	.  reduce 65


state 155
	sentenciaIf : IF '(' condicion ')' '{' bloque_ejecucion '}' . ELSE '{' bloque_ejecucion '}' END_IF  (40)
	sentenciaIf : IF '(' condicion ')' '{' bloque_ejecucion '}' . ELSE '{' bloque_ejecucion '}'  (41)
	sentenciaIf : IF '(' condicion ')' '{' bloque_ejecucion '}' . END_IF  (42)
	sentenciaIf : IF '(' condicion ')' '{' bloque_ejecucion '}' .  (43)

	ELSE  shift 172
	END_IF  shift 173
	','  reduce 43


state 156
	bloque_ejecucion : bloque_ejecucion sentenciaEjecutable . ','  (64)

	','  shift 174
	.  error


state 157
	sentenciaIf : IF '(' condicion ')' sentenciaEjecutable ',' ELSE . sentenciaEjecutable ',' END_IF  (44)
	sentenciaIf : IF '(' condicion ')' sentenciaEjecutable ',' ELSE . '{' bloque_ejecucion '}' END_IF  (45)

	ID  shift 51
	CADENA  shift 2
	IF  shift 4
	PRINT  shift 5
	WHILE  shift 10
	'{'  shift 175
	.  error

	sentenciaEjecutable  goto 176
	referenciaClase  goto 18
	asignacion  goto 19
	invocacionMetodo  goto 20
	sentenciaIf  goto 22
	sentenciaWhile  goto 23
	print  goto 24


state 158
	sentenciaIf : IF '(' condicion ')' sentenciaEjecutable ',' END_IF .  (46)

	.  reduce 46


state 159
	declaracionFuncion : VOID ID '(' ID ')' '{' cuerpoMetodo . '}'  (76)

	'}'  shift 177
	.  error


state 160
	sentenciaIfRetorno : IF '(' . condicion ')' '{' bloque_ejecucion_return '}' ELSE '{' bloque_ejecucion_return ',' '}' END_IF  (50)
	sentenciaIfRetorno : IF '(' . condicion ')' '{' bloque_ejecucion_return '}' ELSE '{' bloque_ejecucion_return ',' '}'  (51)
	sentenciaIfRetorno : IF '(' . condicion ')' '{' bloque_ejecucion_return '}' END_IF  (52)
	sentenciaIfRetorno : IF '(' . condicion ')' '{' bloque_ejecucion_return '}'  (53)
	sentenciaIfRetorno : IF '(' . condicion ')' sentencia_ejecutable_return ',' ELSE sentencia_ejecutable_return ',' END_IF  (54)
	sentenciaIfRetorno : IF '(' . condicion ')' sentencia_ejecutable_return ',' ELSE '{' bloque_ejecucion_return ',' '}' END_IF  (55)
	sentenciaIfRetorno : IF '(' . condicion ')' sentencia_ejecutable_return ',' END_IF  (56)

	ID  shift 44
	CTE  shift 45
	MAYORIGUAL  shift 63
	MENORIGUAL  shift 64
	IGUAL  shift 65
	DISTINTO  shift 66
	'-'  shift 46
	'='  shift 67
	'('  shift 47
	'<'  shift 68
	'>'  shift 69
	.  error

	expresion  goto 70
	condicion  goto 178
	comparador  goto 72
	termino  goto 49
	factor  goto 50


state 161
	sentenciaDeclarativaMetodo : declaracion ',' .  (37)

	.  reduce 37


state 162
	listaSentenciasMetodo : sentencia_ejecutable_return ',' .  (82)

	.  reduce 82


state 163
	declaracionFuncion : VOID ID '(' ')' '{' cuerpoMetodo '}' .  (77)

	.  reduce 77


state 164
	listaSentenciasMetodo : listaSentenciasMetodo sentenciaDeclarativaMetodo .  (79)

	.  reduce 79


state 165
	listaSentenciasMetodo : listaSentenciasMetodo sentencia_ejecutable_return . ','  (80)

	','  shift 179
	.  error


state 166
	declaracionFuncion : VOID ID '(' tipo ID ')' '{' . cuerpoMetodo '}'  (75)

	ID  shift 1
	CADENA  shift 2
	IF  shift 131
	PRINT  shift 5
	VOID  shift 6
	SHORT  shift 7
	ULONG  shift 8
	FLOAT  shift 9
	WHILE  shift 10
	RETURN  shift 132
	.  error

	referenciaClase  goto 133
	asignacion  goto 134
	invocacionMetodo  goto 135
	tipo  goto 21
	sentenciaWhile  goto 136
	print  goto 137
	declaracionFuncion  goto 138
	declaracion  goto 139
	sentenciaDeclarativaMetodo  goto 140
	sentenciaIfRetorno  goto 141
	sentencia_ejecutable_return  goto 142
	return  goto 143
	cuerpoMetodo  goto 180
	listaSentenciasMetodo  goto 145


state 167
	bloque_ejecucion : bloque_ejecucion . sentenciaEjecutable ','  (64)
	sentenciaWhile : WHILE '(' condicion ')' DO '{' bloque_ejecucion . '}'  (68)

	ID  shift 51
	CADENA  shift 2
	IF  shift 4
	PRINT  shift 5
	WHILE  shift 10
	'}'  shift 181
	.  error

	sentenciaEjecutable  goto 156
	referenciaClase  goto 18
	asignacion  goto 19
	invocacionMetodo  goto 20
	sentenciaIf  goto 22
	sentenciaWhile  goto 23
	print  goto 24


state 168
	declaracionMetodo : VOID ID '(' ')' '{' . cuerpoMetodo '}'  (74)

	ID  shift 1
	CADENA  shift 2
	IF  shift 131
	PRINT  shift 5
	VOID  shift 6
	SHORT  shift 7
	ULONG  shift 8
	FLOAT  shift 9
	WHILE  shift 10
	RETURN  shift 132
	.  error

	referenciaClase  goto 133
	asignacion  goto 134
	invocacionMetodo  goto 135
	tipo  goto 21
	sentenciaWhile  goto 136
	print  goto 137
	declaracionFuncion  goto 138
	declaracion  goto 139
	sentenciaDeclarativaMetodo  goto 140
	sentenciaIfRetorno  goto 141
	sentencia_ejecutable_return  goto 142
	return  goto 143
	cuerpoMetodo  goto 182
	listaSentenciasMetodo  goto 145


state 169
	declaracionMetodo : VOID ID '(' tipo ID . ')' '{' cuerpoMetodo '}'  (73)

	')'  shift 183
	.  error


state 170
	listaAtributos : ID ',' .  (25)

	.  reduce 25


state 171
	listaAtributos : ID ';' . listaAtributos  (24)

	ID  shift 152
	.  error

	listaAtributos  goto 184


state 172
	sentenciaIf : IF '(' condicion ')' '{' bloque_ejecucion '}' ELSE . '{' bloque_ejecucion '}' END_IF  (40)
	sentenciaIf : IF '(' condicion ')' '{' bloque_ejecucion '}' ELSE . '{' bloque_ejecucion '}'  (41)

	'{'  shift 185
	.  error


state 173
	sentenciaIf : IF '(' condicion ')' '{' bloque_ejecucion '}' END_IF .  (42)

	.  reduce 42


state 174
	bloque_ejecucion : bloque_ejecucion sentenciaEjecutable ',' .  (64)

	.  reduce 64


state 175
	sentenciaIf : IF '(' condicion ')' sentenciaEjecutable ',' ELSE '{' . bloque_ejecucion '}' END_IF  (45)

	ID  shift 51
	CADENA  shift 2
	IF  shift 4
	PRINT  shift 5
	WHILE  shift 10
	.  error

	sentenciaEjecutable  goto 127
	referenciaClase  goto 18
	asignacion  goto 19
	invocacionMetodo  goto 20
	sentenciaIf  goto 22
	sentenciaWhile  goto 23
	print  goto 24
	bloque_ejecucion  goto 186


state 176
	sentenciaIf : IF '(' condicion ')' sentenciaEjecutable ',' ELSE sentenciaEjecutable . ',' END_IF  (44)

	','  shift 187
	.  error


state 177
	declaracionFuncion : VOID ID '(' ID ')' '{' cuerpoMetodo '}' .  (76)

	.  reduce 76


state 178
	sentenciaIfRetorno : IF '(' condicion . ')' '{' bloque_ejecucion_return '}' ELSE '{' bloque_ejecucion_return ',' '}' END_IF  (50)
	sentenciaIfRetorno : IF '(' condicion . ')' '{' bloque_ejecucion_return '}' ELSE '{' bloque_ejecucion_return ',' '}'  (51)
	sentenciaIfRetorno : IF '(' condicion . ')' '{' bloque_ejecucion_return '}' END_IF  (52)
	sentenciaIfRetorno : IF '(' condicion . ')' '{' bloque_ejecucion_return '}'  (53)
	sentenciaIfRetorno : IF '(' condicion . ')' sentencia_ejecutable_return ',' ELSE sentencia_ejecutable_return ',' END_IF  (54)
	sentenciaIfRetorno : IF '(' condicion . ')' sentencia_ejecutable_return ',' ELSE '{' bloque_ejecucion_return ',' '}' END_IF  (55)
	sentenciaIfRetorno : IF '(' condicion . ')' sentencia_ejecutable_return ',' END_IF  (56)

	')'  shift 188
	.  error


state 179
	listaSentenciasMetodo : listaSentenciasMetodo sentencia_ejecutable_return ',' .  (80)

	.  reduce 80


state 180
	declaracionFuncion : VOID ID '(' tipo ID ')' '{' cuerpoMetodo . '}'  (75)

	'}'  shift 189
	.  error


state 181
	sentenciaWhile : WHILE '(' condicion ')' DO '{' bloque_ejecucion '}' .  (68)

	.  reduce 68


state 182
	declaracionMetodo : VOID ID '(' ')' '{' cuerpoMetodo . '}'  (74)

	'}'  shift 190
	.  error


state 183
	declaracionMetodo : VOID ID '(' tipo ID ')' . '{' cuerpoMetodo '}'  (73)

	'{'  shift 191
	.  error


state 184
	listaAtributos : ID ';' listaAtributos .  (24)

	.  reduce 24


state 185
	sentenciaIf : IF '(' condicion ')' '{' bloque_ejecucion '}' ELSE '{' . bloque_ejecucion '}' END_IF  (40)
	sentenciaIf : IF '(' condicion ')' '{' bloque_ejecucion '}' ELSE '{' . bloque_ejecucion '}'  (41)

	ID  shift 51
	CADENA  shift 2
	IF  shift 4
	PRINT  shift 5
	WHILE  shift 10
	.  error

	sentenciaEjecutable  goto 127
	referenciaClase  goto 18
	asignacion  goto 19
	invocacionMetodo  goto 20
	sentenciaIf  goto 22
	sentenciaWhile  goto 23
	print  goto 24
	bloque_ejecucion  goto 192


state 186
	sentenciaIf : IF '(' condicion ')' sentenciaEjecutable ',' ELSE '{' bloque_ejecucion . '}' END_IF  (45)
	bloque_ejecucion : bloque_ejecucion . sentenciaEjecutable ','  (64)

	ID  shift 51
	CADENA  shift 2
	IF  shift 4
	PRINT  shift 5
	WHILE  shift 10
	'}'  shift 193
	.  error

	sentenciaEjecutable  goto 156
	referenciaClase  goto 18
	asignacion  goto 19
	invocacionMetodo  goto 20
	sentenciaIf  goto 22
	sentenciaWhile  goto 23
	print  goto 24


state 187
	sentenciaIf : IF '(' condicion ')' sentenciaEjecutable ',' ELSE sentenciaEjecutable ',' . END_IF  (44)

	END_IF  shift 194
	.  error


state 188
	sentenciaIfRetorno : IF '(' condicion ')' . '{' bloque_ejecucion_return '}' ELSE '{' bloque_ejecucion_return ',' '}' END_IF  (50)
	sentenciaIfRetorno : IF '(' condicion ')' . '{' bloque_ejecucion_return '}' ELSE '{' bloque_ejecucion_return ',' '}'  (51)
	sentenciaIfRetorno : IF '(' condicion ')' . '{' bloque_ejecucion_return '}' END_IF  (52)
	sentenciaIfRetorno : IF '(' condicion ')' . '{' bloque_ejecucion_return '}'  (53)
	sentenciaIfRetorno : IF '(' condicion ')' . sentencia_ejecutable_return ',' ELSE sentencia_ejecutable_return ',' END_IF  (54)
	sentenciaIfRetorno : IF '(' condicion ')' . sentencia_ejecutable_return ',' ELSE '{' bloque_ejecucion_return ',' '}' END_IF  (55)
	sentenciaIfRetorno : IF '(' condicion ')' . sentencia_ejecutable_return ',' END_IF  (56)

	ID  shift 51
	CADENA  shift 2
	IF  shift 131
	PRINT  shift 5
	WHILE  shift 10
	RETURN  shift 132
	'{'  shift 195
	.  error

	referenciaClase  goto 133
	asignacion  goto 134
	invocacionMetodo  goto 135
	sentenciaWhile  goto 136
	print  goto 137
	sentenciaIfRetorno  goto 141
	sentencia_ejecutable_return  goto 196
	return  goto 143


state 189
	declaracionFuncion : VOID ID '(' tipo ID ')' '{' cuerpoMetodo '}' .  (75)

	.  reduce 75


state 190
	declaracionMetodo : VOID ID '(' ')' '{' cuerpoMetodo '}' .  (74)

	.  reduce 74


state 191
	declaracionMetodo : VOID ID '(' tipo ID ')' '{' . cuerpoMetodo '}'  (73)

	ID  shift 1
	CADENA  shift 2
	IF  shift 131
	PRINT  shift 5
	VOID  shift 6
	SHORT  shift 7
	ULONG  shift 8
	FLOAT  shift 9
	WHILE  shift 10
	RETURN  shift 132
	.  error

	referenciaClase  goto 133
	asignacion  goto 134
	invocacionMetodo  goto 135
	tipo  goto 21
	sentenciaWhile  goto 136
	print  goto 137
	declaracionFuncion  goto 138
	declaracion  goto 139
	sentenciaDeclarativaMetodo  goto 140
	sentenciaIfRetorno  goto 141
	sentencia_ejecutable_return  goto 142
	return  goto 143
	cuerpoMetodo  goto 197
	listaSentenciasMetodo  goto 145


state 192
	sentenciaIf : IF '(' condicion ')' '{' bloque_ejecucion '}' ELSE '{' bloque_ejecucion . '}' END_IF  (40)
	sentenciaIf : IF '(' condicion ')' '{' bloque_ejecucion '}' ELSE '{' bloque_ejecucion . '}'  (41)
	bloque_ejecucion : bloque_ejecucion . sentenciaEjecutable ','  (64)

	ID  shift 51
	CADENA  shift 2
	IF  shift 4
	PRINT  shift 5
	WHILE  shift 10
	'}'  shift 198
	.  error

	sentenciaEjecutable  goto 156
	referenciaClase  goto 18
	asignacion  goto 19
	invocacionMetodo  goto 20
	sentenciaIf  goto 22
	sentenciaWhile  goto 23
	print  goto 24


state 193
	sentenciaIf : IF '(' condicion ')' sentenciaEjecutable ',' ELSE '{' bloque_ejecucion '}' . END_IF  (45)

	END_IF  shift 199
	.  error


state 194
	sentenciaIf : IF '(' condicion ')' sentenciaEjecutable ',' ELSE sentenciaEjecutable ',' END_IF .  (44)

	.  reduce 44


state 195
	sentenciaIfRetorno : IF '(' condicion ')' '{' . bloque_ejecucion_return '}' ELSE '{' bloque_ejecucion_return ',' '}' END_IF  (50)
	sentenciaIfRetorno : IF '(' condicion ')' '{' . bloque_ejecucion_return '}' ELSE '{' bloque_ejecucion_return ',' '}'  (51)
	sentenciaIfRetorno : IF '(' condicion ')' '{' . bloque_ejecucion_return '}' END_IF  (52)
	sentenciaIfRetorno : IF '(' condicion ')' '{' . bloque_ejecucion_return '}'  (53)

	ID  shift 51
	CADENA  shift 2
	IF  shift 131
	PRINT  shift 5
	WHILE  shift 10
	RETURN  shift 132
	.  error

	referenciaClase  goto 133
	asignacion  goto 134
	invocacionMetodo  goto 135
	sentenciaWhile  goto 136
	print  goto 137
	sentenciaIfRetorno  goto 141
	bloque_ejecucion_return  goto 200
	sentencia_ejecutable_return  goto 201
	return  goto 143


state 196
	sentenciaIfRetorno : IF '(' condicion ')' sentencia_ejecutable_return . ',' ELSE sentencia_ejecutable_return ',' END_IF  (54)
	sentenciaIfRetorno : IF '(' condicion ')' sentencia_ejecutable_return . ',' ELSE '{' bloque_ejecucion_return ',' '}' END_IF  (55)
	sentenciaIfRetorno : IF '(' condicion ')' sentencia_ejecutable_return . ',' END_IF  (56)

	','  shift 202
	.  error


state 197
	declaracionMetodo : VOID ID '(' tipo ID ')' '{' cuerpoMetodo . '}'  (73)

	'}'  shift 203
	.  error


state 198
	sentenciaIf : IF '(' condicion ')' '{' bloque_ejecucion '}' ELSE '{' bloque_ejecucion '}' . END_IF  (40)
	sentenciaIf : IF '(' condicion ')' '{' bloque_ejecucion '}' ELSE '{' bloque_ejecucion '}' .  (41)

	END_IF  shift 204
	','  reduce 41


state 199
	sentenciaIf : IF '(' condicion ')' sentenciaEjecutable ',' ELSE '{' bloque_ejecucion '}' END_IF .  (45)

	.  reduce 45


state 200
	sentenciaIfRetorno : IF '(' condicion ')' '{' bloque_ejecucion_return . '}' ELSE '{' bloque_ejecucion_return ',' '}' END_IF  (50)
	sentenciaIfRetorno : IF '(' condicion ')' '{' bloque_ejecucion_return . '}' ELSE '{' bloque_ejecucion_return ',' '}'  (51)
	sentenciaIfRetorno : IF '(' condicion ')' '{' bloque_ejecucion_return . '}' END_IF  (52)
	sentenciaIfRetorno : IF '(' condicion ')' '{' bloque_ejecucion_return . '}'  (53)
	bloque_ejecucion_return : bloque_ejecucion_return . sentencia_ejecutable_return ','  (66)

	ID  shift 51
	CADENA  shift 2
	IF  shift 131
	PRINT  shift 5
	WHILE  shift 10
	RETURN  shift 132
	'}'  shift 205
	.  error

	referenciaClase  goto 133
	asignacion  goto 134
	invocacionMetodo  goto 135
	sentenciaWhile  goto 136
	print  goto 137
	sentenciaIfRetorno  goto 141
	sentencia_ejecutable_return  goto 206
	return  goto 143


state 201
	bloque_ejecucion_return : sentencia_ejecutable_return . ','  (67)

	','  shift 207
	.  error


state 202
	sentenciaIfRetorno : IF '(' condicion ')' sentencia_ejecutable_return ',' . ELSE sentencia_ejecutable_return ',' END_IF  (54)
	sentenciaIfRetorno : IF '(' condicion ')' sentencia_ejecutable_return ',' . ELSE '{' bloque_ejecucion_return ',' '}' END_IF  (55)
	sentenciaIfRetorno : IF '(' condicion ')' sentencia_ejecutable_return ',' . END_IF  (56)

	ELSE  shift 208
	END_IF  shift 209
	.  error


state 203
	declaracionMetodo : VOID ID '(' tipo ID ')' '{' cuerpoMetodo '}' .  (73)

	.  reduce 73


state 204
	sentenciaIf : IF '(' condicion ')' '{' bloque_ejecucion '}' ELSE '{' bloque_ejecucion '}' END_IF .  (40)

	.  reduce 40


state 205
	sentenciaIfRetorno : IF '(' condicion ')' '{' bloque_ejecucion_return '}' . ELSE '{' bloque_ejecucion_return ',' '}' END_IF  (50)
	sentenciaIfRetorno : IF '(' condicion ')' '{' bloque_ejecucion_return '}' . ELSE '{' bloque_ejecucion_return ',' '}'  (51)
	sentenciaIfRetorno : IF '(' condicion ')' '{' bloque_ejecucion_return '}' . END_IF  (52)
	sentenciaIfRetorno : IF '(' condicion ')' '{' bloque_ejecucion_return '}' .  (53)

	ELSE  shift 210
	END_IF  shift 211
	','  reduce 53


state 206
	bloque_ejecucion_return : bloque_ejecucion_return sentencia_ejecutable_return . ','  (66)

	','  shift 212
	.  error


state 207
	bloque_ejecucion_return : sentencia_ejecutable_return ',' .  (67)

	.  reduce 67


state 208
	sentenciaIfRetorno : IF '(' condicion ')' sentencia_ejecutable_return ',' ELSE . sentencia_ejecutable_return ',' END_IF  (54)
	sentenciaIfRetorno : IF '(' condicion ')' sentencia_ejecutable_return ',' ELSE . '{' bloque_ejecucion_return ',' '}' END_IF  (55)

	ID  shift 51
	CADENA  shift 2
	IF  shift 131
	PRINT  shift 5
	WHILE  shift 10
	RETURN  shift 132
	'{'  shift 213
	.  error

	referenciaClase  goto 133
	asignacion  goto 134
	invocacionMetodo  goto 135
	sentenciaWhile  goto 136
	print  goto 137
	sentenciaIfRetorno  goto 141
	sentencia_ejecutable_return  goto 214
	return  goto 143


state 209
	sentenciaIfRetorno : IF '(' condicion ')' sentencia_ejecutable_return ',' END_IF .  (56)

	.  reduce 56


state 210
	sentenciaIfRetorno : IF '(' condicion ')' '{' bloque_ejecucion_return '}' ELSE . '{' bloque_ejecucion_return ',' '}' END_IF  (50)
	sentenciaIfRetorno : IF '(' condicion ')' '{' bloque_ejecucion_return '}' ELSE . '{' bloque_ejecucion_return ',' '}'  (51)

	'{'  shift 215
	.  error


state 211
	sentenciaIfRetorno : IF '(' condicion ')' '{' bloque_ejecucion_return '}' END_IF .  (52)

	.  reduce 52


state 212
	bloque_ejecucion_return : bloque_ejecucion_return sentencia_ejecutable_return ',' .  (66)

	.  reduce 66


state 213
	sentenciaIfRetorno : IF '(' condicion ')' sentencia_ejecutable_return ',' ELSE '{' . bloque_ejecucion_return ',' '}' END_IF  (55)

	ID  shift 51
	CADENA  shift 2
	IF  shift 131
	PRINT  shift 5
	WHILE  shift 10
	RETURN  shift 132
	.  error

	referenciaClase  goto 133
	asignacion  goto 134
	invocacionMetodo  goto 135
	sentenciaWhile  goto 136
	print  goto 137
	sentenciaIfRetorno  goto 141
	bloque_ejecucion_return  goto 216
	sentencia_ejecutable_return  goto 201
	return  goto 143


state 214
	sentenciaIfRetorno : IF '(' condicion ')' sentencia_ejecutable_return ',' ELSE sentencia_ejecutable_return . ',' END_IF  (54)

	','  shift 217
	.  error


state 215
	sentenciaIfRetorno : IF '(' condicion ')' '{' bloque_ejecucion_return '}' ELSE '{' . bloque_ejecucion_return ',' '}' END_IF  (50)
	sentenciaIfRetorno : IF '(' condicion ')' '{' bloque_ejecucion_return '}' ELSE '{' . bloque_ejecucion_return ',' '}'  (51)

	ID  shift 51
	CADENA  shift 2
	IF  shift 131
	PRINT  shift 5
	WHILE  shift 10
	RETURN  shift 132
	.  error

	referenciaClase  goto 133
	asignacion  goto 134
	invocacionMetodo  goto 135
	sentenciaWhile  goto 136
	print  goto 137
	sentenciaIfRetorno  goto 141
	bloque_ejecucion_return  goto 218
	sentencia_ejecutable_return  goto 201
	return  goto 143


state 216
	sentenciaIfRetorno : IF '(' condicion ')' sentencia_ejecutable_return ',' ELSE '{' bloque_ejecucion_return . ',' '}' END_IF  (55)
	bloque_ejecucion_return : bloque_ejecucion_return . sentencia_ejecutable_return ','  (66)

	ID  shift 51
	CADENA  shift 2
	IF  shift 131
	PRINT  shift 5
	WHILE  shift 10
	RETURN  shift 132
	','  shift 219
	.  error

	referenciaClase  goto 133
	asignacion  goto 134
	invocacionMetodo  goto 135
	sentenciaWhile  goto 136
	print  goto 137
	sentenciaIfRetorno  goto 141
	sentencia_ejecutable_return  goto 206
	return  goto 143


state 217
	sentenciaIfRetorno : IF '(' condicion ')' sentencia_ejecutable_return ',' ELSE sentencia_ejecutable_return ',' . END_IF  (54)

	END_IF  shift 220
	.  error


state 218
	sentenciaIfRetorno : IF '(' condicion ')' '{' bloque_ejecucion_return '}' ELSE '{' bloque_ejecucion_return . ',' '}' END_IF  (50)
	sentenciaIfRetorno : IF '(' condicion ')' '{' bloque_ejecucion_return '}' ELSE '{' bloque_ejecucion_return . ',' '}'  (51)
	bloque_ejecucion_return : bloque_ejecucion_return . sentencia_ejecutable_return ','  (66)

	ID  shift 51
	CADENA  shift 2
	IF  shift 131
	PRINT  shift 5
	WHILE  shift 10
	RETURN  shift 132
	','  shift 221
	.  error

	referenciaClase  goto 133
	asignacion  goto 134
	invocacionMetodo  goto 135
	sentenciaWhile  goto 136
	print  goto 137
	sentenciaIfRetorno  goto 141
	sentencia_ejecutable_return  goto 206
	return  goto 143


state 219
	sentenciaIfRetorno : IF '(' condicion ')' sentencia_ejecutable_return ',' ELSE '{' bloque_ejecucion_return ',' . '}' END_IF  (55)

	'}'  shift 222
	.  error


state 220
	sentenciaIfRetorno : IF '(' condicion ')' sentencia_ejecutable_return ',' ELSE sentencia_ejecutable_return ',' END_IF .  (54)

	.  reduce 54


state 221
	sentenciaIfRetorno : IF '(' condicion ')' '{' bloque_ejecucion_return '}' ELSE '{' bloque_ejecucion_return ',' . '}' END_IF  (50)
	sentenciaIfRetorno : IF '(' condicion ')' '{' bloque_ejecucion_return '}' ELSE '{' bloque_ejecucion_return ',' . '}'  (51)

	'}'  shift 223
	.  error


state 222
	sentenciaIfRetorno : IF '(' condicion ')' sentencia_ejecutable_return ',' ELSE '{' bloque_ejecucion_return ',' '}' . END_IF  (55)

	END_IF  shift 224
	.  error


state 223
	sentenciaIfRetorno : IF '(' condicion ')' '{' bloque_ejecucion_return '}' ELSE '{' bloque_ejecucion_return ',' '}' . END_IF  (50)
	sentenciaIfRetorno : IF '(' condicion ')' '{' bloque_ejecucion_return '}' ELSE '{' bloque_ejecucion_return ',' '}' .  (51)

	END_IF  shift 225
	','  reduce 51


state 224
	sentenciaIfRetorno : IF '(' condicion ')' sentencia_ejecutable_return ',' ELSE '{' bloque_ejecucion_return ',' '}' END_IF .  (55)

	.  reduce 55


state 225
	sentenciaIfRetorno : IF '(' condicion ')' '{' bloque_ejecucion_return '}' ELSE '{' bloque_ejecucion_return ',' '}' END_IF .  (50)

	.  reduce 50


36 terminals, 35 nonterminals
112 grammar rules, 226 states
