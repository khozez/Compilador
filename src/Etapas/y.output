   0  $accept : programa $end

   1  programa : '{' cuerpoPrograma '}'
   2           | '{' '}'
   3           | cuerpoPrograma '}'
   4           | '{' cuerpoPrograma

   5  cuerpoPrograma : sentencia
   6                 | cuerpoPrograma sentencia

   7  sentencia : sentenciaDeclarativa
   8            | sentenciaEjecutable ','

   9  encabezadoClase : CLASS ID

  10  declaracionClase : encabezadoClase '{' cuerpoClase '}'
  11                   | encabezadoClase ','
  12                   | encabezadoClase

  13  cuerpoClase : cuerpoClase seccionAtributos
  14              | cuerpoClase declaracionMetodo ','
  15              | declaracionMetodo ','
  16              | seccionAtributos

  17  referenciaClase : listaReferencia asignacionClase
  18                  | listaReferencia referenciaMetodo

  19  asignacionClase : ID '=' expresion

  20  referenciaMetodo : ID '(' ')'
  21                   | ID '(' expresion ')'

  22  listaReferencia : listaReferencia ID '.'
  23                  | ID '.'

  24  seccionAtributos : tipo listaAtributos
  25                   | herenciaNombre

  26  listaAtributos : ID ';' listaAtributos
  27                 | ID ','
  28                 | ID

  29  herenciaNombre : ID ','

  30  sentenciaEjecutable : asignacion
  31                      | sentenciaIf
  32                      | sentenciaWhile
  33                      | print
  34                      | invocacionMetodo
  35                      | referenciaClase

  36  sentenciaDeclarativa : declaracionFuncion
  37                       | declaracion ','
  38                       | declaracionClase

  39  sentenciaDeclarativaMetodo : declaracionFuncionLocal
  40                             | declaracion ','

  41  asignacion : ID '=' expresion
  42             | ID IGUAL expresion

  43  sentenciaIf : IF '(' condicion ')' '{' bloque_ejecucion '}' ELSE '{' bloque_ejecucion '}' END_IF
  44              | IF '(' condicion ')' '{' bloque_ejecucion '}' ELSE '{' bloque_ejecucion '}'
  45              | IF '(' condicion ')' '{' bloque_ejecucion '}' END_IF
  46              | IF '(' condicion ')' '{' bloque_ejecucion '}'
  47              | IF '(' condicion ')' sentenciaEjecutable ',' ELSE sentenciaEjecutable ',' END_IF
  48              | IF '(' condicion ')' sentenciaEjecutable ',' ELSE '{' bloque_ejecucion '}' END_IF
  49              | IF '(' condicion ')' sentenciaEjecutable ',' END_IF

  50  condicion : expresion comparador expresion
  51            | comparador expresion
  52            | expresion comparador

  53  sentenciaIfRetorno : IF '(' condicion ')' '{' bloque_ejecucion_return '}' ELSE '{' bloque_ejecucion_return '}' END_IF
  54                     | IF '(' condicion ')' '{' bloque_ejecucion_return '}' ELSE '{' bloque_ejecucion_return '}'
  55                     | IF '(' condicion ')' '{' bloque_ejecucion_return '}' END_IF
  56                     | IF '(' condicion ')' '{' bloque_ejecucion_return '}'
  57                     | IF '(' condicion ')' sentencia_ejecutable_return ',' ELSE sentencia_ejecutable_return ',' END_IF
  58                     | IF '(' condicion ')' sentencia_ejecutable_return ',' ELSE '{' bloque_ejecucion_return '}' END_IF
  59                     | IF '(' condicion ')' sentencia_ejecutable_return ',' END_IF

  60  sentencia_ejecutable_return : print
  61                              | asignacion
  62                              | sentenciaIfRetorno
  63                              | sentenciaWhile
  64                              | invocacionMetodo
  65                              | referenciaClase
  66                              | return

  67  bloque_ejecucion : bloque_ejecucion sentenciaEjecutable ','
  68                   | sentenciaEjecutable ','

  69  bloque_ejecucion_return : bloque_ejecucion_return sentencia_ejecutable_return ','
  70                          | sentencia_ejecutable_return ','

  71  sentenciaWhile : WHILE '(' condicion ')' DO '{' bloque_ejecucion '}'
  72                 | WHILE '(' condicion ')' DO sentenciaEjecutable

  73  print : PRINT CADENA
  74        | CADENA

  75  return : RETURN

  76  parametro : tipo ID

  77  encabezadoMetodo : VOID ID '(' parametro ')'
  78                   | VOID ID '(' ID ')'
  79                   | VOID ID '(' ')'

  80  declaracionMetodo : encabezadoMetodo '{' cuerpoMetodo '}'

  81  encabezadoFuncion : VOID ID '(' parametro ')'
  82                    | VOID ID '(' ID ')'
  83                    | VOID ID '(' ')'

  84  declaracionFuncion : encabezadoFuncion '{' cuerpoFuncion '}'

  85  declaracionFuncionLocal : encabezadoFuncion '{' cuerpoFuncion '}'

  86  cuerpoMetodo : listaSentenciasMetodo

  87  cuerpoFuncion : listaSentenciasFuncion

  88  listaSentenciasMetodo : listaSentenciasMetodo sentenciaDeclarativaMetodo
  89                        | listaSentenciasMetodo sentenciaEjecutable ','
  90                        | sentenciaDeclarativaMetodo
  91                        | sentenciaEjecutable ','

  92  listaSentenciasFuncion : listaSentenciasFuncion sentenciaDeclarativaMetodo
  93                         | listaSentenciasFuncion sentencia_ejecutable_return ','
  94                         | sentenciaDeclarativaMetodo
  95                         | sentencia_ejecutable_return ','

  96  invocacionMetodo : ID '(' expresion ')'
  97                   | ID '(' ')'
  98                   | ID '(' asignacion ')'
  99                   | ID '(' tipo asignacion ')'

 100  declaracion : tipo listaDeclaracion

 101  listaDeclaracion : ID ';' listaDeclaracion
 102                   | ID

 103  tipo : SHORT
 104       | ULONG
 105       | FLOAT
 106       | ID

 107  expresion : termino
 108            | expresion '+' termino
 109            | expresion '-' termino

 110  termino : factor
 111          | termino '*' factor
 112          | termino '/' factor

 113  factor : ID
 114         | ID MENOSMENOS
 115         | CTE
 116         | '-' CTE
 117         | '(' expresion ')'

 118  comparador : MAYORIGUAL
 119             | MENORIGUAL
 120             | IGUAL
 121             | DISTINTO
 122             | '<'
 123             | '>'
 124             | '='

state 0
	$accept : . programa $end  (0)

	ID  shift 1
	CADENA  shift 2
	CLASS  shift 3
	IF  shift 4
	PRINT  shift 5
	VOID  shift 6
	SHORT  shift 7
	ULONG  shift 8
	FLOAT  shift 9
	WHILE  shift 10
	'{'  shift 11
	.  error

	programa  goto 12
	cuerpoPrograma  goto 13
	sentencia  goto 14
	sentenciaDeclarativa  goto 15
	sentenciaEjecutable  goto 16
	encabezadoClase  goto 17
	declaracionClase  goto 18
	referenciaClase  goto 19
	listaReferencia  goto 20
	tipo  goto 21
	asignacion  goto 22
	sentenciaIf  goto 23
	sentenciaWhile  goto 24
	print  goto 25
	invocacionMetodo  goto 26
	declaracionFuncion  goto 27
	declaracion  goto 28
	encabezadoFuncion  goto 29


state 1
	listaReferencia : ID . '.'  (23)
	asignacion : ID . '=' expresion  (41)
	asignacion : ID . IGUAL expresion  (42)
	invocacionMetodo : ID . '(' expresion ')'  (96)
	invocacionMetodo : ID . '(' ')'  (97)
	invocacionMetodo : ID . '(' asignacion ')'  (98)
	invocacionMetodo : ID . '(' tipo asignacion ')'  (99)
	tipo : ID .  (106)

	IGUAL  shift 30
	'='  shift 31
	'('  shift 32
	'.'  shift 33
	ID  reduce 106


state 2
	print : CADENA .  (74)

	.  reduce 74


state 3
	encabezadoClase : CLASS . ID  (9)

	ID  shift 34
	.  error


state 4
	sentenciaIf : IF . '(' condicion ')' '{' bloque_ejecucion '}' ELSE '{' bloque_ejecucion '}' END_IF  (43)
	sentenciaIf : IF . '(' condicion ')' '{' bloque_ejecucion '}' ELSE '{' bloque_ejecucion '}'  (44)
	sentenciaIf : IF . '(' condicion ')' '{' bloque_ejecucion '}' END_IF  (45)
	sentenciaIf : IF . '(' condicion ')' '{' bloque_ejecucion '}'  (46)
	sentenciaIf : IF . '(' condicion ')' sentenciaEjecutable ',' ELSE sentenciaEjecutable ',' END_IF  (47)
	sentenciaIf : IF . '(' condicion ')' sentenciaEjecutable ',' ELSE '{' bloque_ejecucion '}' END_IF  (48)
	sentenciaIf : IF . '(' condicion ')' sentenciaEjecutable ',' END_IF  (49)

	'('  shift 35
	.  error


state 5
	print : PRINT . CADENA  (73)

	CADENA  shift 36
	.  error


state 6
	encabezadoFuncion : VOID . ID '(' parametro ')'  (81)
	encabezadoFuncion : VOID . ID '(' ID ')'  (82)
	encabezadoFuncion : VOID . ID '(' ')'  (83)

	ID  shift 37
	.  error


state 7
	tipo : SHORT .  (103)

	.  reduce 103


state 8
	tipo : ULONG .  (104)

	.  reduce 104


state 9
	tipo : FLOAT .  (105)

	.  reduce 105


state 10
	sentenciaWhile : WHILE . '(' condicion ')' DO '{' bloque_ejecucion '}'  (71)
	sentenciaWhile : WHILE . '(' condicion ')' DO sentenciaEjecutable  (72)

	'('  shift 38
	.  error


state 11
	programa : '{' . cuerpoPrograma '}'  (1)
	programa : '{' . '}'  (2)
	programa : '{' . cuerpoPrograma  (4)

	ID  shift 1
	CADENA  shift 2
	CLASS  shift 3
	IF  shift 4
	PRINT  shift 5
	VOID  shift 6
	SHORT  shift 7
	ULONG  shift 8
	FLOAT  shift 9
	WHILE  shift 10
	'}'  shift 39
	.  error

	cuerpoPrograma  goto 40
	sentencia  goto 14
	sentenciaDeclarativa  goto 15
	sentenciaEjecutable  goto 16
	encabezadoClase  goto 17
	declaracionClase  goto 18
	referenciaClase  goto 19
	listaReferencia  goto 20
	tipo  goto 21
	asignacion  goto 22
	sentenciaIf  goto 23
	sentenciaWhile  goto 24
	print  goto 25
	invocacionMetodo  goto 26
	declaracionFuncion  goto 27
	declaracion  goto 28
	encabezadoFuncion  goto 29


state 12
	$accept : programa . $end  (0)

	$end  accept


state 13
	programa : cuerpoPrograma . '}'  (3)
	cuerpoPrograma : cuerpoPrograma . sentencia  (6)

	ID  shift 1
	CADENA  shift 2
	CLASS  shift 3
	IF  shift 4
	PRINT  shift 5
	VOID  shift 6
	SHORT  shift 7
	ULONG  shift 8
	FLOAT  shift 9
	WHILE  shift 10
	'}'  shift 41
	.  error

	sentencia  goto 42
	sentenciaDeclarativa  goto 15
	sentenciaEjecutable  goto 16
	encabezadoClase  goto 17
	declaracionClase  goto 18
	referenciaClase  goto 19
	listaReferencia  goto 20
	tipo  goto 21
	asignacion  goto 22
	sentenciaIf  goto 23
	sentenciaWhile  goto 24
	print  goto 25
	invocacionMetodo  goto 26
	declaracionFuncion  goto 27
	declaracion  goto 28
	encabezadoFuncion  goto 29


state 14
	cuerpoPrograma : sentencia .  (5)

	.  reduce 5


state 15
	sentencia : sentenciaDeclarativa .  (7)

	.  reduce 7


state 16
	sentencia : sentenciaEjecutable . ','  (8)

	','  shift 43
	.  error


state 17
	declaracionClase : encabezadoClase . '{' cuerpoClase '}'  (10)
	declaracionClase : encabezadoClase . ','  (11)
	declaracionClase : encabezadoClase .  (12)

	'{'  shift 44
	','  shift 45
	$end  reduce 12
	ID  reduce 12
	CADENA  reduce 12
	CLASS  reduce 12
	IF  reduce 12
	PRINT  reduce 12
	VOID  reduce 12
	SHORT  reduce 12
	ULONG  reduce 12
	FLOAT  reduce 12
	WHILE  reduce 12
	'}'  reduce 12


state 18
	sentenciaDeclarativa : declaracionClase .  (38)

	.  reduce 38


state 19
	sentenciaEjecutable : referenciaClase .  (35)

	.  reduce 35


state 20
	referenciaClase : listaReferencia . asignacionClase  (17)
	referenciaClase : listaReferencia . referenciaMetodo  (18)
	listaReferencia : listaReferencia . ID '.'  (22)

	ID  shift 46
	.  error

	asignacionClase  goto 47
	referenciaMetodo  goto 48


state 21
	declaracion : tipo . listaDeclaracion  (100)

	ID  shift 49
	.  error

	listaDeclaracion  goto 50


state 22
	sentenciaEjecutable : asignacion .  (30)

	.  reduce 30


state 23
	sentenciaEjecutable : sentenciaIf .  (31)

	.  reduce 31


state 24
	sentenciaEjecutable : sentenciaWhile .  (32)

	.  reduce 32


state 25
	sentenciaEjecutable : print .  (33)

	.  reduce 33


state 26
	sentenciaEjecutable : invocacionMetodo .  (34)

	.  reduce 34


state 27
	sentenciaDeclarativa : declaracionFuncion .  (36)

	.  reduce 36


state 28
	sentenciaDeclarativa : declaracion . ','  (37)

	','  shift 51
	.  error


state 29
	declaracionFuncion : encabezadoFuncion . '{' cuerpoFuncion '}'  (84)

	'{'  shift 52
	.  error


state 30
	asignacion : ID IGUAL . expresion  (42)

	ID  shift 53
	CTE  shift 54
	'-'  shift 55
	'('  shift 56
	.  error

	expresion  goto 57
	termino  goto 58
	factor  goto 59


state 31
	asignacion : ID '=' . expresion  (41)

	ID  shift 53
	CTE  shift 54
	'-'  shift 55
	'('  shift 56
	.  error

	expresion  goto 60
	termino  goto 58
	factor  goto 59


state 32
	invocacionMetodo : ID '(' . expresion ')'  (96)
	invocacionMetodo : ID '(' . ')'  (97)
	invocacionMetodo : ID '(' . asignacion ')'  (98)
	invocacionMetodo : ID '(' . tipo asignacion ')'  (99)

	ID  shift 61
	CTE  shift 54
	SHORT  shift 7
	ULONG  shift 8
	FLOAT  shift 9
	'-'  shift 55
	'('  shift 56
	')'  shift 62
	.  error

	expresion  goto 63
	tipo  goto 64
	asignacion  goto 65
	termino  goto 58
	factor  goto 59


state 33
	listaReferencia : ID '.' .  (23)

	.  reduce 23


state 34
	encabezadoClase : CLASS ID .  (9)

	.  reduce 9


state 35
	sentenciaIf : IF '(' . condicion ')' '{' bloque_ejecucion '}' ELSE '{' bloque_ejecucion '}' END_IF  (43)
	sentenciaIf : IF '(' . condicion ')' '{' bloque_ejecucion '}' ELSE '{' bloque_ejecucion '}'  (44)
	sentenciaIf : IF '(' . condicion ')' '{' bloque_ejecucion '}' END_IF  (45)
	sentenciaIf : IF '(' . condicion ')' '{' bloque_ejecucion '}'  (46)
	sentenciaIf : IF '(' . condicion ')' sentenciaEjecutable ',' ELSE sentenciaEjecutable ',' END_IF  (47)
	sentenciaIf : IF '(' . condicion ')' sentenciaEjecutable ',' ELSE '{' bloque_ejecucion '}' END_IF  (48)
	sentenciaIf : IF '(' . condicion ')' sentenciaEjecutable ',' END_IF  (49)

	ID  shift 53
	CTE  shift 54
	MAYORIGUAL  shift 66
	MENORIGUAL  shift 67
	IGUAL  shift 68
	DISTINTO  shift 69
	'-'  shift 55
	'='  shift 70
	'('  shift 56
	'<'  shift 71
	'>'  shift 72
	.  error

	expresion  goto 73
	condicion  goto 74
	comparador  goto 75
	termino  goto 58
	factor  goto 59


state 36
	print : PRINT CADENA .  (73)

	.  reduce 73


state 37
	encabezadoFuncion : VOID ID . '(' parametro ')'  (81)
	encabezadoFuncion : VOID ID . '(' ID ')'  (82)
	encabezadoFuncion : VOID ID . '(' ')'  (83)

	'('  shift 76
	.  error


state 38
	sentenciaWhile : WHILE '(' . condicion ')' DO '{' bloque_ejecucion '}'  (71)
	sentenciaWhile : WHILE '(' . condicion ')' DO sentenciaEjecutable  (72)

	ID  shift 53
	CTE  shift 54
	MAYORIGUAL  shift 66
	MENORIGUAL  shift 67
	IGUAL  shift 68
	DISTINTO  shift 69
	'-'  shift 55
	'='  shift 70
	'('  shift 56
	'<'  shift 71
	'>'  shift 72
	.  error

	expresion  goto 73
	condicion  goto 77
	comparador  goto 75
	termino  goto 58
	factor  goto 59


state 39
	programa : '{' '}' .  (2)

	.  reduce 2


state 40
	programa : '{' cuerpoPrograma . '}'  (1)
	programa : '{' cuerpoPrograma .  (4)
	cuerpoPrograma : cuerpoPrograma . sentencia  (6)

	ID  shift 1
	CADENA  shift 2
	CLASS  shift 3
	IF  shift 4
	PRINT  shift 5
	VOID  shift 6
	SHORT  shift 7
	ULONG  shift 8
	FLOAT  shift 9
	WHILE  shift 10
	'}'  shift 78
	$end  reduce 4

	sentencia  goto 42
	sentenciaDeclarativa  goto 15
	sentenciaEjecutable  goto 16
	encabezadoClase  goto 17
	declaracionClase  goto 18
	referenciaClase  goto 19
	listaReferencia  goto 20
	tipo  goto 21
	asignacion  goto 22
	sentenciaIf  goto 23
	sentenciaWhile  goto 24
	print  goto 25
	invocacionMetodo  goto 26
	declaracionFuncion  goto 27
	declaracion  goto 28
	encabezadoFuncion  goto 29


state 41
	programa : cuerpoPrograma '}' .  (3)

	.  reduce 3


state 42
	cuerpoPrograma : cuerpoPrograma sentencia .  (6)

	.  reduce 6


state 43
	sentencia : sentenciaEjecutable ',' .  (8)

	.  reduce 8


state 44
	declaracionClase : encabezadoClase '{' . cuerpoClase '}'  (10)

	ID  shift 79
	VOID  shift 80
	SHORT  shift 7
	ULONG  shift 8
	FLOAT  shift 9
	.  error

	cuerpoClase  goto 81
	seccionAtributos  goto 82
	declaracionMetodo  goto 83
	tipo  goto 84
	herenciaNombre  goto 85
	encabezadoMetodo  goto 86


state 45
	declaracionClase : encabezadoClase ',' .  (11)

	.  reduce 11


state 46
	asignacionClase : ID . '=' expresion  (19)
	referenciaMetodo : ID . '(' ')'  (20)
	referenciaMetodo : ID . '(' expresion ')'  (21)
	listaReferencia : listaReferencia ID . '.'  (22)

	'='  shift 87
	'('  shift 88
	'.'  shift 89
	.  error


state 47
	referenciaClase : listaReferencia asignacionClase .  (17)

	.  reduce 17


state 48
	referenciaClase : listaReferencia referenciaMetodo .  (18)

	.  reduce 18


state 49
	listaDeclaracion : ID . ';' listaDeclaracion  (101)
	listaDeclaracion : ID .  (102)

	';'  shift 90
	','  reduce 102


state 50
	declaracion : tipo listaDeclaracion .  (100)

	.  reduce 100


state 51
	sentenciaDeclarativa : declaracion ',' .  (37)

	.  reduce 37


state 52
	declaracionFuncion : encabezadoFuncion '{' . cuerpoFuncion '}'  (84)

	ID  shift 1
	CADENA  shift 2
	IF  shift 91
	PRINT  shift 5
	VOID  shift 6
	SHORT  shift 7
	ULONG  shift 8
	FLOAT  shift 9
	WHILE  shift 10
	RETURN  shift 92
	.  error

	referenciaClase  goto 93
	listaReferencia  goto 20
	tipo  goto 21
	asignacion  goto 94
	sentenciaWhile  goto 95
	print  goto 96
	invocacionMetodo  goto 97
	declaracion  goto 98
	sentenciaDeclarativaMetodo  goto 99
	declaracionFuncionLocal  goto 100
	sentenciaIfRetorno  goto 101
	sentencia_ejecutable_return  goto 102
	return  goto 103
	encabezadoFuncion  goto 104
	cuerpoFuncion  goto 105
	listaSentenciasFuncion  goto 106


state 53
	factor : ID .  (113)
	factor : ID . MENOSMENOS  (114)

	MENOSMENOS  shift 107
	MAYORIGUAL  reduce 113
	MENORIGUAL  reduce 113
	IGUAL  reduce 113
	DISTINTO  reduce 113
	'+'  reduce 113
	'-'  reduce 113
	'*'  reduce 113
	'/'  reduce 113
	','  reduce 113
	'='  reduce 113
	')'  reduce 113
	'<'  reduce 113
	'>'  reduce 113


state 54
	factor : CTE .  (115)

	.  reduce 115


state 55
	factor : '-' . CTE  (116)

	CTE  shift 108
	.  error


state 56
	factor : '(' . expresion ')'  (117)

	ID  shift 53
	CTE  shift 54
	'-'  shift 55
	'('  shift 56
	.  error

	expresion  goto 109
	termino  goto 58
	factor  goto 59


state 57
	asignacion : ID IGUAL expresion .  (42)
	expresion : expresion . '+' termino  (108)
	expresion : expresion . '-' termino  (109)

	'+'  shift 110
	'-'  shift 111
	','  reduce 42
	')'  reduce 42


state 58
	expresion : termino .  (107)
	termino : termino . '*' factor  (111)
	termino : termino . '/' factor  (112)

	'*'  shift 112
	'/'  shift 113
	MAYORIGUAL  reduce 107
	MENORIGUAL  reduce 107
	IGUAL  reduce 107
	DISTINTO  reduce 107
	'+'  reduce 107
	'-'  reduce 107
	','  reduce 107
	'='  reduce 107
	')'  reduce 107
	'<'  reduce 107
	'>'  reduce 107


state 59
	termino : factor .  (110)

	.  reduce 110


state 60
	asignacion : ID '=' expresion .  (41)
	expresion : expresion . '+' termino  (108)
	expresion : expresion . '-' termino  (109)

	'+'  shift 110
	'-'  shift 111
	','  reduce 41
	')'  reduce 41


state 61
	asignacion : ID . '=' expresion  (41)
	asignacion : ID . IGUAL expresion  (42)
	tipo : ID .  (106)
	factor : ID .  (113)
	factor : ID . MENOSMENOS  (114)

	IGUAL  shift 30
	MENOSMENOS  shift 107
	'='  shift 31
	ID  reduce 106
	'+'  reduce 113
	'-'  reduce 113
	'*'  reduce 113
	'/'  reduce 113
	')'  reduce 113


state 62
	invocacionMetodo : ID '(' ')' .  (97)

	.  reduce 97


state 63
	invocacionMetodo : ID '(' expresion . ')'  (96)
	expresion : expresion . '+' termino  (108)
	expresion : expresion . '-' termino  (109)

	'+'  shift 110
	'-'  shift 111
	')'  shift 114
	.  error


state 64
	invocacionMetodo : ID '(' tipo . asignacion ')'  (99)

	ID  shift 115
	.  error

	asignacion  goto 116


state 65
	invocacionMetodo : ID '(' asignacion . ')'  (98)

	')'  shift 117
	.  error


state 66
	comparador : MAYORIGUAL .  (118)

	.  reduce 118


state 67
	comparador : MENORIGUAL .  (119)

	.  reduce 119


state 68
	comparador : IGUAL .  (120)

	.  reduce 120


state 69
	comparador : DISTINTO .  (121)

	.  reduce 121


state 70
	comparador : '=' .  (124)

	.  reduce 124


state 71
	comparador : '<' .  (122)

	.  reduce 122


state 72
	comparador : '>' .  (123)

	.  reduce 123


state 73
	condicion : expresion . comparador expresion  (50)
	condicion : expresion . comparador  (52)
	expresion : expresion . '+' termino  (108)
	expresion : expresion . '-' termino  (109)

	MAYORIGUAL  shift 66
	MENORIGUAL  shift 67
	IGUAL  shift 68
	DISTINTO  shift 69
	'+'  shift 110
	'-'  shift 111
	'='  shift 70
	'<'  shift 71
	'>'  shift 72
	.  error

	comparador  goto 118


state 74
	sentenciaIf : IF '(' condicion . ')' '{' bloque_ejecucion '}' ELSE '{' bloque_ejecucion '}' END_IF  (43)
	sentenciaIf : IF '(' condicion . ')' '{' bloque_ejecucion '}' ELSE '{' bloque_ejecucion '}'  (44)
	sentenciaIf : IF '(' condicion . ')' '{' bloque_ejecucion '}' END_IF  (45)
	sentenciaIf : IF '(' condicion . ')' '{' bloque_ejecucion '}'  (46)
	sentenciaIf : IF '(' condicion . ')' sentenciaEjecutable ',' ELSE sentenciaEjecutable ',' END_IF  (47)
	sentenciaIf : IF '(' condicion . ')' sentenciaEjecutable ',' ELSE '{' bloque_ejecucion '}' END_IF  (48)
	sentenciaIf : IF '(' condicion . ')' sentenciaEjecutable ',' END_IF  (49)

	')'  shift 119
	.  error


state 75
	condicion : comparador . expresion  (51)

	ID  shift 53
	CTE  shift 54
	'-'  shift 55
	'('  shift 56
	.  error

	expresion  goto 120
	termino  goto 58
	factor  goto 59


state 76
	encabezadoFuncion : VOID ID '(' . parametro ')'  (81)
	encabezadoFuncion : VOID ID '(' . ID ')'  (82)
	encabezadoFuncion : VOID ID '(' . ')'  (83)

	ID  shift 121
	SHORT  shift 7
	ULONG  shift 8
	FLOAT  shift 9
	')'  shift 122
	.  error

	tipo  goto 123
	parametro  goto 124


state 77
	sentenciaWhile : WHILE '(' condicion . ')' DO '{' bloque_ejecucion '}'  (71)
	sentenciaWhile : WHILE '(' condicion . ')' DO sentenciaEjecutable  (72)

	')'  shift 125
	.  error


state 78
	programa : '{' cuerpoPrograma '}' .  (1)

	.  reduce 1


state 79
	herenciaNombre : ID . ','  (29)
	tipo : ID .  (106)

	','  shift 126
	ID  reduce 106


state 80
	encabezadoMetodo : VOID . ID '(' parametro ')'  (77)
	encabezadoMetodo : VOID . ID '(' ID ')'  (78)
	encabezadoMetodo : VOID . ID '(' ')'  (79)

	ID  shift 127
	.  error


state 81
	declaracionClase : encabezadoClase '{' cuerpoClase . '}'  (10)
	cuerpoClase : cuerpoClase . seccionAtributos  (13)
	cuerpoClase : cuerpoClase . declaracionMetodo ','  (14)

	ID  shift 79
	VOID  shift 80
	SHORT  shift 7
	ULONG  shift 8
	FLOAT  shift 9
	'}'  shift 128
	.  error

	seccionAtributos  goto 129
	declaracionMetodo  goto 130
	tipo  goto 84
	herenciaNombre  goto 85
	encabezadoMetodo  goto 86


state 82
	cuerpoClase : seccionAtributos .  (16)

	.  reduce 16


state 83
	cuerpoClase : declaracionMetodo . ','  (15)

	','  shift 131
	.  error


state 84
	seccionAtributos : tipo . listaAtributos  (24)

	ID  shift 132
	.  error

	listaAtributos  goto 133


state 85
	seccionAtributos : herenciaNombre .  (25)

	.  reduce 25


state 86
	declaracionMetodo : encabezadoMetodo . '{' cuerpoMetodo '}'  (80)

	'{'  shift 134
	.  error


state 87
	asignacionClase : ID '=' . expresion  (19)

	ID  shift 53
	CTE  shift 54
	'-'  shift 55
	'('  shift 56
	.  error

	expresion  goto 135
	termino  goto 58
	factor  goto 59


state 88
	referenciaMetodo : ID '(' . ')'  (20)
	referenciaMetodo : ID '(' . expresion ')'  (21)

	ID  shift 53
	CTE  shift 54
	'-'  shift 55
	'('  shift 56
	')'  shift 136
	.  error

	expresion  goto 137
	termino  goto 58
	factor  goto 59


state 89
	listaReferencia : listaReferencia ID '.' .  (22)

	.  reduce 22


state 90
	listaDeclaracion : ID ';' . listaDeclaracion  (101)

	ID  shift 49
	.  error

	listaDeclaracion  goto 138


state 91
	sentenciaIfRetorno : IF . '(' condicion ')' '{' bloque_ejecucion_return '}' ELSE '{' bloque_ejecucion_return '}' END_IF  (53)
	sentenciaIfRetorno : IF . '(' condicion ')' '{' bloque_ejecucion_return '}' ELSE '{' bloque_ejecucion_return '}'  (54)
	sentenciaIfRetorno : IF . '(' condicion ')' '{' bloque_ejecucion_return '}' END_IF  (55)
	sentenciaIfRetorno : IF . '(' condicion ')' '{' bloque_ejecucion_return '}'  (56)
	sentenciaIfRetorno : IF . '(' condicion ')' sentencia_ejecutable_return ',' ELSE sentencia_ejecutable_return ',' END_IF  (57)
	sentenciaIfRetorno : IF . '(' condicion ')' sentencia_ejecutable_return ',' ELSE '{' bloque_ejecucion_return '}' END_IF  (58)
	sentenciaIfRetorno : IF . '(' condicion ')' sentencia_ejecutable_return ',' END_IF  (59)

	'('  shift 139
	.  error


state 92
	return : RETURN .  (75)

	.  reduce 75


state 93
	sentencia_ejecutable_return : referenciaClase .  (65)

	.  reduce 65


state 94
	sentencia_ejecutable_return : asignacion .  (61)

	.  reduce 61


state 95
	sentencia_ejecutable_return : sentenciaWhile .  (63)

	.  reduce 63


state 96
	sentencia_ejecutable_return : print .  (60)

	.  reduce 60


state 97
	sentencia_ejecutable_return : invocacionMetodo .  (64)

	.  reduce 64


state 98
	sentenciaDeclarativaMetodo : declaracion . ','  (40)

	','  shift 140
	.  error


state 99
	listaSentenciasFuncion : sentenciaDeclarativaMetodo .  (94)

	.  reduce 94


state 100
	sentenciaDeclarativaMetodo : declaracionFuncionLocal .  (39)

	.  reduce 39


state 101
	sentencia_ejecutable_return : sentenciaIfRetorno .  (62)

	.  reduce 62


state 102
	listaSentenciasFuncion : sentencia_ejecutable_return . ','  (95)

	','  shift 141
	.  error


state 103
	sentencia_ejecutable_return : return .  (66)

	.  reduce 66


state 104
	declaracionFuncionLocal : encabezadoFuncion . '{' cuerpoFuncion '}'  (85)

	'{'  shift 142
	.  error


state 105
	declaracionFuncion : encabezadoFuncion '{' cuerpoFuncion . '}'  (84)

	'}'  shift 143
	.  error


state 106
	cuerpoFuncion : listaSentenciasFuncion .  (87)
	listaSentenciasFuncion : listaSentenciasFuncion . sentenciaDeclarativaMetodo  (92)
	listaSentenciasFuncion : listaSentenciasFuncion . sentencia_ejecutable_return ','  (93)

	ID  shift 1
	CADENA  shift 2
	IF  shift 91
	PRINT  shift 5
	VOID  shift 6
	SHORT  shift 7
	ULONG  shift 8
	FLOAT  shift 9
	WHILE  shift 10
	RETURN  shift 92
	'}'  reduce 87

	referenciaClase  goto 93
	listaReferencia  goto 20
	tipo  goto 21
	asignacion  goto 94
	sentenciaWhile  goto 95
	print  goto 96
	invocacionMetodo  goto 97
	declaracion  goto 98
	sentenciaDeclarativaMetodo  goto 144
	declaracionFuncionLocal  goto 100
	sentenciaIfRetorno  goto 101
	sentencia_ejecutable_return  goto 145
	return  goto 103
	encabezadoFuncion  goto 104


state 107
	factor : ID MENOSMENOS .  (114)

	.  reduce 114


state 108
	factor : '-' CTE .  (116)

	.  reduce 116


state 109
	expresion : expresion . '+' termino  (108)
	expresion : expresion . '-' termino  (109)
	factor : '(' expresion . ')'  (117)

	'+'  shift 110
	'-'  shift 111
	')'  shift 146
	.  error


state 110
	expresion : expresion '+' . termino  (108)

	ID  shift 53
	CTE  shift 54
	'-'  shift 55
	'('  shift 56
	.  error

	termino  goto 147
	factor  goto 59


state 111
	expresion : expresion '-' . termino  (109)

	ID  shift 53
	CTE  shift 54
	'-'  shift 55
	'('  shift 56
	.  error

	termino  goto 148
	factor  goto 59


state 112
	termino : termino '*' . factor  (111)

	ID  shift 53
	CTE  shift 54
	'-'  shift 55
	'('  shift 56
	.  error

	factor  goto 149


state 113
	termino : termino '/' . factor  (112)

	ID  shift 53
	CTE  shift 54
	'-'  shift 55
	'('  shift 56
	.  error

	factor  goto 150


state 114
	invocacionMetodo : ID '(' expresion ')' .  (96)

	.  reduce 96


state 115
	asignacion : ID . '=' expresion  (41)
	asignacion : ID . IGUAL expresion  (42)

	IGUAL  shift 30
	'='  shift 31
	.  error


state 116
	invocacionMetodo : ID '(' tipo asignacion . ')'  (99)

	')'  shift 151
	.  error


state 117
	invocacionMetodo : ID '(' asignacion ')' .  (98)

	.  reduce 98


state 118
	condicion : expresion comparador . expresion  (50)
	condicion : expresion comparador .  (52)

	ID  shift 53
	CTE  shift 54
	'-'  shift 55
	'('  shift 56
	')'  reduce 52

	expresion  goto 152
	termino  goto 58
	factor  goto 59


state 119
	sentenciaIf : IF '(' condicion ')' . '{' bloque_ejecucion '}' ELSE '{' bloque_ejecucion '}' END_IF  (43)
	sentenciaIf : IF '(' condicion ')' . '{' bloque_ejecucion '}' ELSE '{' bloque_ejecucion '}'  (44)
	sentenciaIf : IF '(' condicion ')' . '{' bloque_ejecucion '}' END_IF  (45)
	sentenciaIf : IF '(' condicion ')' . '{' bloque_ejecucion '}'  (46)
	sentenciaIf : IF '(' condicion ')' . sentenciaEjecutable ',' ELSE sentenciaEjecutable ',' END_IF  (47)
	sentenciaIf : IF '(' condicion ')' . sentenciaEjecutable ',' ELSE '{' bloque_ejecucion '}' END_IF  (48)
	sentenciaIf : IF '(' condicion ')' . sentenciaEjecutable ',' END_IF  (49)

	ID  shift 153
	CADENA  shift 2
	IF  shift 4
	PRINT  shift 5
	WHILE  shift 10
	'{'  shift 154
	.  error

	sentenciaEjecutable  goto 155
	referenciaClase  goto 19
	listaReferencia  goto 20
	asignacion  goto 22
	sentenciaIf  goto 23
	sentenciaWhile  goto 24
	print  goto 25
	invocacionMetodo  goto 26


state 120
	condicion : comparador expresion .  (51)
	expresion : expresion . '+' termino  (108)
	expresion : expresion . '-' termino  (109)

	'+'  shift 110
	'-'  shift 111
	')'  reduce 51


state 121
	encabezadoFuncion : VOID ID '(' ID . ')'  (82)
	tipo : ID .  (106)

	')'  shift 156
	ID  reduce 106


state 122
	encabezadoFuncion : VOID ID '(' ')' .  (83)

	.  reduce 83


state 123
	parametro : tipo . ID  (76)

	ID  shift 157
	.  error


state 124
	encabezadoFuncion : VOID ID '(' parametro . ')'  (81)

	')'  shift 158
	.  error


state 125
	sentenciaWhile : WHILE '(' condicion ')' . DO '{' bloque_ejecucion '}'  (71)
	sentenciaWhile : WHILE '(' condicion ')' . DO sentenciaEjecutable  (72)

	DO  shift 159
	.  error


state 126
	herenciaNombre : ID ',' .  (29)

	.  reduce 29


state 127
	encabezadoMetodo : VOID ID . '(' parametro ')'  (77)
	encabezadoMetodo : VOID ID . '(' ID ')'  (78)
	encabezadoMetodo : VOID ID . '(' ')'  (79)

	'('  shift 160
	.  error


state 128
	declaracionClase : encabezadoClase '{' cuerpoClase '}' .  (10)

	.  reduce 10


state 129
	cuerpoClase : cuerpoClase seccionAtributos .  (13)

	.  reduce 13


state 130
	cuerpoClase : cuerpoClase declaracionMetodo . ','  (14)

	','  shift 161
	.  error


state 131
	cuerpoClase : declaracionMetodo ',' .  (15)

	.  reduce 15


state 132
	listaAtributos : ID . ';' listaAtributos  (26)
	listaAtributos : ID . ','  (27)
	listaAtributos : ID .  (28)

	','  shift 162
	';'  shift 163
	ID  reduce 28
	VOID  reduce 28
	SHORT  reduce 28
	ULONG  reduce 28
	FLOAT  reduce 28
	'}'  reduce 28


state 133
	seccionAtributos : tipo listaAtributos .  (24)

	.  reduce 24


state 134
	declaracionMetodo : encabezadoMetodo '{' . cuerpoMetodo '}'  (80)

	ID  shift 1
	CADENA  shift 2
	IF  shift 4
	PRINT  shift 5
	VOID  shift 6
	SHORT  shift 7
	ULONG  shift 8
	FLOAT  shift 9
	WHILE  shift 10
	.  error

	sentenciaEjecutable  goto 164
	referenciaClase  goto 19
	listaReferencia  goto 20
	tipo  goto 21
	asignacion  goto 22
	sentenciaIf  goto 23
	sentenciaWhile  goto 24
	print  goto 25
	invocacionMetodo  goto 26
	declaracion  goto 98
	sentenciaDeclarativaMetodo  goto 165
	declaracionFuncionLocal  goto 100
	cuerpoMetodo  goto 166
	encabezadoFuncion  goto 104
	listaSentenciasMetodo  goto 167


state 135
	asignacionClase : ID '=' expresion .  (19)
	expresion : expresion . '+' termino  (108)
	expresion : expresion . '-' termino  (109)

	'+'  shift 110
	'-'  shift 111
	','  reduce 19


state 136
	referenciaMetodo : ID '(' ')' .  (20)

	.  reduce 20


state 137
	referenciaMetodo : ID '(' expresion . ')'  (21)
	expresion : expresion . '+' termino  (108)
	expresion : expresion . '-' termino  (109)

	'+'  shift 110
	'-'  shift 111
	')'  shift 168
	.  error


state 138
	listaDeclaracion : ID ';' listaDeclaracion .  (101)

	.  reduce 101


state 139
	sentenciaIfRetorno : IF '(' . condicion ')' '{' bloque_ejecucion_return '}' ELSE '{' bloque_ejecucion_return '}' END_IF  (53)
	sentenciaIfRetorno : IF '(' . condicion ')' '{' bloque_ejecucion_return '}' ELSE '{' bloque_ejecucion_return '}'  (54)
	sentenciaIfRetorno : IF '(' . condicion ')' '{' bloque_ejecucion_return '}' END_IF  (55)
	sentenciaIfRetorno : IF '(' . condicion ')' '{' bloque_ejecucion_return '}'  (56)
	sentenciaIfRetorno : IF '(' . condicion ')' sentencia_ejecutable_return ',' ELSE sentencia_ejecutable_return ',' END_IF  (57)
	sentenciaIfRetorno : IF '(' . condicion ')' sentencia_ejecutable_return ',' ELSE '{' bloque_ejecucion_return '}' END_IF  (58)
	sentenciaIfRetorno : IF '(' . condicion ')' sentencia_ejecutable_return ',' END_IF  (59)

	ID  shift 53
	CTE  shift 54
	MAYORIGUAL  shift 66
	MENORIGUAL  shift 67
	IGUAL  shift 68
	DISTINTO  shift 69
	'-'  shift 55
	'='  shift 70
	'('  shift 56
	'<'  shift 71
	'>'  shift 72
	.  error

	expresion  goto 73
	condicion  goto 169
	comparador  goto 75
	termino  goto 58
	factor  goto 59


state 140
	sentenciaDeclarativaMetodo : declaracion ',' .  (40)

	.  reduce 40


state 141
	listaSentenciasFuncion : sentencia_ejecutable_return ',' .  (95)

	.  reduce 95


state 142
	declaracionFuncionLocal : encabezadoFuncion '{' . cuerpoFuncion '}'  (85)

	ID  shift 1
	CADENA  shift 2
	IF  shift 91
	PRINT  shift 5
	VOID  shift 6
	SHORT  shift 7
	ULONG  shift 8
	FLOAT  shift 9
	WHILE  shift 10
	RETURN  shift 92
	.  error

	referenciaClase  goto 93
	listaReferencia  goto 20
	tipo  goto 21
	asignacion  goto 94
	sentenciaWhile  goto 95
	print  goto 96
	invocacionMetodo  goto 97
	declaracion  goto 98
	sentenciaDeclarativaMetodo  goto 99
	declaracionFuncionLocal  goto 100
	sentenciaIfRetorno  goto 101
	sentencia_ejecutable_return  goto 102
	return  goto 103
	encabezadoFuncion  goto 104
	cuerpoFuncion  goto 170
	listaSentenciasFuncion  goto 106


state 143
	declaracionFuncion : encabezadoFuncion '{' cuerpoFuncion '}' .  (84)

	.  reduce 84


state 144
	listaSentenciasFuncion : listaSentenciasFuncion sentenciaDeclarativaMetodo .  (92)

	.  reduce 92


state 145
	listaSentenciasFuncion : listaSentenciasFuncion sentencia_ejecutable_return . ','  (93)

	','  shift 171
	.  error


state 146
	factor : '(' expresion ')' .  (117)

	.  reduce 117


state 147
	expresion : expresion '+' termino .  (108)
	termino : termino . '*' factor  (111)
	termino : termino . '/' factor  (112)

	'*'  shift 112
	'/'  shift 113
	MAYORIGUAL  reduce 108
	MENORIGUAL  reduce 108
	IGUAL  reduce 108
	DISTINTO  reduce 108
	'+'  reduce 108
	'-'  reduce 108
	','  reduce 108
	'='  reduce 108
	')'  reduce 108
	'<'  reduce 108
	'>'  reduce 108


state 148
	expresion : expresion '-' termino .  (109)
	termino : termino . '*' factor  (111)
	termino : termino . '/' factor  (112)

	'*'  shift 112
	'/'  shift 113
	MAYORIGUAL  reduce 109
	MENORIGUAL  reduce 109
	IGUAL  reduce 109
	DISTINTO  reduce 109
	'+'  reduce 109
	'-'  reduce 109
	','  reduce 109
	'='  reduce 109
	')'  reduce 109
	'<'  reduce 109
	'>'  reduce 109


state 149
	termino : termino '*' factor .  (111)

	.  reduce 111


state 150
	termino : termino '/' factor .  (112)

	.  reduce 112


state 151
	invocacionMetodo : ID '(' tipo asignacion ')' .  (99)

	.  reduce 99


state 152
	condicion : expresion comparador expresion .  (50)
	expresion : expresion . '+' termino  (108)
	expresion : expresion . '-' termino  (109)

	'+'  shift 110
	'-'  shift 111
	')'  reduce 50


state 153
	listaReferencia : ID . '.'  (23)
	asignacion : ID . '=' expresion  (41)
	asignacion : ID . IGUAL expresion  (42)
	invocacionMetodo : ID . '(' expresion ')'  (96)
	invocacionMetodo : ID . '(' ')'  (97)
	invocacionMetodo : ID . '(' asignacion ')'  (98)
	invocacionMetodo : ID . '(' tipo asignacion ')'  (99)

	IGUAL  shift 30
	'='  shift 31
	'('  shift 32
	'.'  shift 33
	.  error


state 154
	sentenciaIf : IF '(' condicion ')' '{' . bloque_ejecucion '}' ELSE '{' bloque_ejecucion '}' END_IF  (43)
	sentenciaIf : IF '(' condicion ')' '{' . bloque_ejecucion '}' ELSE '{' bloque_ejecucion '}'  (44)
	sentenciaIf : IF '(' condicion ')' '{' . bloque_ejecucion '}' END_IF  (45)
	sentenciaIf : IF '(' condicion ')' '{' . bloque_ejecucion '}'  (46)

	ID  shift 153
	CADENA  shift 2
	IF  shift 4
	PRINT  shift 5
	WHILE  shift 10
	.  error

	sentenciaEjecutable  goto 172
	referenciaClase  goto 19
	listaReferencia  goto 20
	asignacion  goto 22
	sentenciaIf  goto 23
	sentenciaWhile  goto 24
	print  goto 25
	invocacionMetodo  goto 26
	bloque_ejecucion  goto 173


state 155
	sentenciaIf : IF '(' condicion ')' sentenciaEjecutable . ',' ELSE sentenciaEjecutable ',' END_IF  (47)
	sentenciaIf : IF '(' condicion ')' sentenciaEjecutable . ',' ELSE '{' bloque_ejecucion '}' END_IF  (48)
	sentenciaIf : IF '(' condicion ')' sentenciaEjecutable . ',' END_IF  (49)

	','  shift 174
	.  error


state 156
	encabezadoFuncion : VOID ID '(' ID ')' .  (82)

	.  reduce 82


state 157
	parametro : tipo ID .  (76)

	.  reduce 76


state 158
	encabezadoFuncion : VOID ID '(' parametro ')' .  (81)

	.  reduce 81


state 159
	sentenciaWhile : WHILE '(' condicion ')' DO . '{' bloque_ejecucion '}'  (71)
	sentenciaWhile : WHILE '(' condicion ')' DO . sentenciaEjecutable  (72)

	ID  shift 153
	CADENA  shift 2
	IF  shift 4
	PRINT  shift 5
	WHILE  shift 10
	'{'  shift 175
	.  error

	sentenciaEjecutable  goto 176
	referenciaClase  goto 19
	listaReferencia  goto 20
	asignacion  goto 22
	sentenciaIf  goto 23
	sentenciaWhile  goto 24
	print  goto 25
	invocacionMetodo  goto 26


state 160
	encabezadoMetodo : VOID ID '(' . parametro ')'  (77)
	encabezadoMetodo : VOID ID '(' . ID ')'  (78)
	encabezadoMetodo : VOID ID '(' . ')'  (79)

	ID  shift 177
	SHORT  shift 7
	ULONG  shift 8
	FLOAT  shift 9
	')'  shift 178
	.  error

	tipo  goto 123
	parametro  goto 179


state 161
	cuerpoClase : cuerpoClase declaracionMetodo ',' .  (14)

	.  reduce 14


state 162
	listaAtributos : ID ',' .  (27)

	.  reduce 27


state 163
	listaAtributos : ID ';' . listaAtributos  (26)

	ID  shift 132
	.  error

	listaAtributos  goto 180


state 164
	listaSentenciasMetodo : sentenciaEjecutable . ','  (91)

	','  shift 181
	.  error


state 165
	listaSentenciasMetodo : sentenciaDeclarativaMetodo .  (90)

	.  reduce 90


state 166
	declaracionMetodo : encabezadoMetodo '{' cuerpoMetodo . '}'  (80)

	'}'  shift 182
	.  error


state 167
	cuerpoMetodo : listaSentenciasMetodo .  (86)
	listaSentenciasMetodo : listaSentenciasMetodo . sentenciaDeclarativaMetodo  (88)
	listaSentenciasMetodo : listaSentenciasMetodo . sentenciaEjecutable ','  (89)

	ID  shift 1
	CADENA  shift 2
	IF  shift 4
	PRINT  shift 5
	VOID  shift 6
	SHORT  shift 7
	ULONG  shift 8
	FLOAT  shift 9
	WHILE  shift 10
	'}'  reduce 86

	sentenciaEjecutable  goto 183
	referenciaClase  goto 19
	listaReferencia  goto 20
	tipo  goto 21
	asignacion  goto 22
	sentenciaIf  goto 23
	sentenciaWhile  goto 24
	print  goto 25
	invocacionMetodo  goto 26
	declaracion  goto 98
	sentenciaDeclarativaMetodo  goto 184
	declaracionFuncionLocal  goto 100
	encabezadoFuncion  goto 104


state 168
	referenciaMetodo : ID '(' expresion ')' .  (21)

	.  reduce 21


state 169
	sentenciaIfRetorno : IF '(' condicion . ')' '{' bloque_ejecucion_return '}' ELSE '{' bloque_ejecucion_return '}' END_IF  (53)
	sentenciaIfRetorno : IF '(' condicion . ')' '{' bloque_ejecucion_return '}' ELSE '{' bloque_ejecucion_return '}'  (54)
	sentenciaIfRetorno : IF '(' condicion . ')' '{' bloque_ejecucion_return '}' END_IF  (55)
	sentenciaIfRetorno : IF '(' condicion . ')' '{' bloque_ejecucion_return '}'  (56)
	sentenciaIfRetorno : IF '(' condicion . ')' sentencia_ejecutable_return ',' ELSE sentencia_ejecutable_return ',' END_IF  (57)
	sentenciaIfRetorno : IF '(' condicion . ')' sentencia_ejecutable_return ',' ELSE '{' bloque_ejecucion_return '}' END_IF  (58)
	sentenciaIfRetorno : IF '(' condicion . ')' sentencia_ejecutable_return ',' END_IF  (59)

	')'  shift 185
	.  error


state 170
	declaracionFuncionLocal : encabezadoFuncion '{' cuerpoFuncion . '}'  (85)

	'}'  shift 186
	.  error


state 171
	listaSentenciasFuncion : listaSentenciasFuncion sentencia_ejecutable_return ',' .  (93)

	.  reduce 93


state 172
	bloque_ejecucion : sentenciaEjecutable . ','  (68)

	','  shift 187
	.  error


state 173
	sentenciaIf : IF '(' condicion ')' '{' bloque_ejecucion . '}' ELSE '{' bloque_ejecucion '}' END_IF  (43)
	sentenciaIf : IF '(' condicion ')' '{' bloque_ejecucion . '}' ELSE '{' bloque_ejecucion '}'  (44)
	sentenciaIf : IF '(' condicion ')' '{' bloque_ejecucion . '}' END_IF  (45)
	sentenciaIf : IF '(' condicion ')' '{' bloque_ejecucion . '}'  (46)
	bloque_ejecucion : bloque_ejecucion . sentenciaEjecutable ','  (67)

	ID  shift 153
	CADENA  shift 2
	IF  shift 4
	PRINT  shift 5
	WHILE  shift 10
	'}'  shift 188
	.  error

	sentenciaEjecutable  goto 189
	referenciaClase  goto 19
	listaReferencia  goto 20
	asignacion  goto 22
	sentenciaIf  goto 23
	sentenciaWhile  goto 24
	print  goto 25
	invocacionMetodo  goto 26


state 174
	sentenciaIf : IF '(' condicion ')' sentenciaEjecutable ',' . ELSE sentenciaEjecutable ',' END_IF  (47)
	sentenciaIf : IF '(' condicion ')' sentenciaEjecutable ',' . ELSE '{' bloque_ejecucion '}' END_IF  (48)
	sentenciaIf : IF '(' condicion ')' sentenciaEjecutable ',' . END_IF  (49)

	ELSE  shift 190
	END_IF  shift 191
	.  error


state 175
	sentenciaWhile : WHILE '(' condicion ')' DO '{' . bloque_ejecucion '}'  (71)

	ID  shift 153
	CADENA  shift 2
	IF  shift 4
	PRINT  shift 5
	WHILE  shift 10
	.  error

	sentenciaEjecutable  goto 172
	referenciaClase  goto 19
	listaReferencia  goto 20
	asignacion  goto 22
	sentenciaIf  goto 23
	sentenciaWhile  goto 24
	print  goto 25
	invocacionMetodo  goto 26
	bloque_ejecucion  goto 192


state 176
	sentenciaWhile : WHILE '(' condicion ')' DO sentenciaEjecutable .  (72)

	.  reduce 72


state 177
	encabezadoMetodo : VOID ID '(' ID . ')'  (78)
	tipo : ID .  (106)

	')'  shift 193
	ID  reduce 106


state 178
	encabezadoMetodo : VOID ID '(' ')' .  (79)

	.  reduce 79


state 179
	encabezadoMetodo : VOID ID '(' parametro . ')'  (77)

	')'  shift 194
	.  error


state 180
	listaAtributos : ID ';' listaAtributos .  (26)

	.  reduce 26


state 181
	listaSentenciasMetodo : sentenciaEjecutable ',' .  (91)

	.  reduce 91


state 182
	declaracionMetodo : encabezadoMetodo '{' cuerpoMetodo '}' .  (80)

	.  reduce 80


state 183
	listaSentenciasMetodo : listaSentenciasMetodo sentenciaEjecutable . ','  (89)

	','  shift 195
	.  error


state 184
	listaSentenciasMetodo : listaSentenciasMetodo sentenciaDeclarativaMetodo .  (88)

	.  reduce 88


state 185
	sentenciaIfRetorno : IF '(' condicion ')' . '{' bloque_ejecucion_return '}' ELSE '{' bloque_ejecucion_return '}' END_IF  (53)
	sentenciaIfRetorno : IF '(' condicion ')' . '{' bloque_ejecucion_return '}' ELSE '{' bloque_ejecucion_return '}'  (54)
	sentenciaIfRetorno : IF '(' condicion ')' . '{' bloque_ejecucion_return '}' END_IF  (55)
	sentenciaIfRetorno : IF '(' condicion ')' . '{' bloque_ejecucion_return '}'  (56)
	sentenciaIfRetorno : IF '(' condicion ')' . sentencia_ejecutable_return ',' ELSE sentencia_ejecutable_return ',' END_IF  (57)
	sentenciaIfRetorno : IF '(' condicion ')' . sentencia_ejecutable_return ',' ELSE '{' bloque_ejecucion_return '}' END_IF  (58)
	sentenciaIfRetorno : IF '(' condicion ')' . sentencia_ejecutable_return ',' END_IF  (59)

	ID  shift 153
	CADENA  shift 2
	IF  shift 91
	PRINT  shift 5
	WHILE  shift 10
	RETURN  shift 92
	'{'  shift 196
	.  error

	referenciaClase  goto 93
	listaReferencia  goto 20
	asignacion  goto 94
	sentenciaWhile  goto 95
	print  goto 96
	invocacionMetodo  goto 97
	sentenciaIfRetorno  goto 101
	sentencia_ejecutable_return  goto 197
	return  goto 103


state 186
	declaracionFuncionLocal : encabezadoFuncion '{' cuerpoFuncion '}' .  (85)

	.  reduce 85


state 187
	bloque_ejecucion : sentenciaEjecutable ',' .  (68)

	.  reduce 68


state 188
	sentenciaIf : IF '(' condicion ')' '{' bloque_ejecucion '}' . ELSE '{' bloque_ejecucion '}' END_IF  (43)
	sentenciaIf : IF '(' condicion ')' '{' bloque_ejecucion '}' . ELSE '{' bloque_ejecucion '}'  (44)
	sentenciaIf : IF '(' condicion ')' '{' bloque_ejecucion '}' . END_IF  (45)
	sentenciaIf : IF '(' condicion ')' '{' bloque_ejecucion '}' .  (46)

	ELSE  shift 198
	END_IF  shift 199
	','  reduce 46


state 189
	bloque_ejecucion : bloque_ejecucion sentenciaEjecutable . ','  (67)

	','  shift 200
	.  error


state 190
	sentenciaIf : IF '(' condicion ')' sentenciaEjecutable ',' ELSE . sentenciaEjecutable ',' END_IF  (47)
	sentenciaIf : IF '(' condicion ')' sentenciaEjecutable ',' ELSE . '{' bloque_ejecucion '}' END_IF  (48)

	ID  shift 153
	CADENA  shift 2
	IF  shift 4
	PRINT  shift 5
	WHILE  shift 10
	'{'  shift 201
	.  error

	sentenciaEjecutable  goto 202
	referenciaClase  goto 19
	listaReferencia  goto 20
	asignacion  goto 22
	sentenciaIf  goto 23
	sentenciaWhile  goto 24
	print  goto 25
	invocacionMetodo  goto 26


state 191
	sentenciaIf : IF '(' condicion ')' sentenciaEjecutable ',' END_IF .  (49)

	.  reduce 49


state 192
	bloque_ejecucion : bloque_ejecucion . sentenciaEjecutable ','  (67)
	sentenciaWhile : WHILE '(' condicion ')' DO '{' bloque_ejecucion . '}'  (71)

	ID  shift 153
	CADENA  shift 2
	IF  shift 4
	PRINT  shift 5
	WHILE  shift 10
	'}'  shift 203
	.  error

	sentenciaEjecutable  goto 189
	referenciaClase  goto 19
	listaReferencia  goto 20
	asignacion  goto 22
	sentenciaIf  goto 23
	sentenciaWhile  goto 24
	print  goto 25
	invocacionMetodo  goto 26


state 193
	encabezadoMetodo : VOID ID '(' ID ')' .  (78)

	.  reduce 78


state 194
	encabezadoMetodo : VOID ID '(' parametro ')' .  (77)

	.  reduce 77


state 195
	listaSentenciasMetodo : listaSentenciasMetodo sentenciaEjecutable ',' .  (89)

	.  reduce 89


state 196
	sentenciaIfRetorno : IF '(' condicion ')' '{' . bloque_ejecucion_return '}' ELSE '{' bloque_ejecucion_return '}' END_IF  (53)
	sentenciaIfRetorno : IF '(' condicion ')' '{' . bloque_ejecucion_return '}' ELSE '{' bloque_ejecucion_return '}'  (54)
	sentenciaIfRetorno : IF '(' condicion ')' '{' . bloque_ejecucion_return '}' END_IF  (55)
	sentenciaIfRetorno : IF '(' condicion ')' '{' . bloque_ejecucion_return '}'  (56)

	ID  shift 153
	CADENA  shift 2
	IF  shift 91
	PRINT  shift 5
	WHILE  shift 10
	RETURN  shift 92
	.  error

	referenciaClase  goto 93
	listaReferencia  goto 20
	asignacion  goto 94
	sentenciaWhile  goto 95
	print  goto 96
	invocacionMetodo  goto 97
	sentenciaIfRetorno  goto 101
	bloque_ejecucion_return  goto 204
	sentencia_ejecutable_return  goto 205
	return  goto 103


state 197
	sentenciaIfRetorno : IF '(' condicion ')' sentencia_ejecutable_return . ',' ELSE sentencia_ejecutable_return ',' END_IF  (57)
	sentenciaIfRetorno : IF '(' condicion ')' sentencia_ejecutable_return . ',' ELSE '{' bloque_ejecucion_return '}' END_IF  (58)
	sentenciaIfRetorno : IF '(' condicion ')' sentencia_ejecutable_return . ',' END_IF  (59)

	','  shift 206
	.  error


state 198
	sentenciaIf : IF '(' condicion ')' '{' bloque_ejecucion '}' ELSE . '{' bloque_ejecucion '}' END_IF  (43)
	sentenciaIf : IF '(' condicion ')' '{' bloque_ejecucion '}' ELSE . '{' bloque_ejecucion '}'  (44)

	'{'  shift 207
	.  error


state 199
	sentenciaIf : IF '(' condicion ')' '{' bloque_ejecucion '}' END_IF .  (45)

	.  reduce 45


state 200
	bloque_ejecucion : bloque_ejecucion sentenciaEjecutable ',' .  (67)

	.  reduce 67


state 201
	sentenciaIf : IF '(' condicion ')' sentenciaEjecutable ',' ELSE '{' . bloque_ejecucion '}' END_IF  (48)

	ID  shift 153
	CADENA  shift 2
	IF  shift 4
	PRINT  shift 5
	WHILE  shift 10
	.  error

	sentenciaEjecutable  goto 172
	referenciaClase  goto 19
	listaReferencia  goto 20
	asignacion  goto 22
	sentenciaIf  goto 23
	sentenciaWhile  goto 24
	print  goto 25
	invocacionMetodo  goto 26
	bloque_ejecucion  goto 208


state 202
	sentenciaIf : IF '(' condicion ')' sentenciaEjecutable ',' ELSE sentenciaEjecutable . ',' END_IF  (47)

	','  shift 209
	.  error


state 203
	sentenciaWhile : WHILE '(' condicion ')' DO '{' bloque_ejecucion '}' .  (71)

	.  reduce 71


state 204
	sentenciaIfRetorno : IF '(' condicion ')' '{' bloque_ejecucion_return . '}' ELSE '{' bloque_ejecucion_return '}' END_IF  (53)
	sentenciaIfRetorno : IF '(' condicion ')' '{' bloque_ejecucion_return . '}' ELSE '{' bloque_ejecucion_return '}'  (54)
	sentenciaIfRetorno : IF '(' condicion ')' '{' bloque_ejecucion_return . '}' END_IF  (55)
	sentenciaIfRetorno : IF '(' condicion ')' '{' bloque_ejecucion_return . '}'  (56)
	bloque_ejecucion_return : bloque_ejecucion_return . sentencia_ejecutable_return ','  (69)

	ID  shift 153
	CADENA  shift 2
	IF  shift 91
	PRINT  shift 5
	WHILE  shift 10
	RETURN  shift 92
	'}'  shift 210
	.  error

	referenciaClase  goto 93
	listaReferencia  goto 20
	asignacion  goto 94
	sentenciaWhile  goto 95
	print  goto 96
	invocacionMetodo  goto 97
	sentenciaIfRetorno  goto 101
	sentencia_ejecutable_return  goto 211
	return  goto 103


state 205
	bloque_ejecucion_return : sentencia_ejecutable_return . ','  (70)

	','  shift 212
	.  error


state 206
	sentenciaIfRetorno : IF '(' condicion ')' sentencia_ejecutable_return ',' . ELSE sentencia_ejecutable_return ',' END_IF  (57)
	sentenciaIfRetorno : IF '(' condicion ')' sentencia_ejecutable_return ',' . ELSE '{' bloque_ejecucion_return '}' END_IF  (58)
	sentenciaIfRetorno : IF '(' condicion ')' sentencia_ejecutable_return ',' . END_IF  (59)

	ELSE  shift 213
	END_IF  shift 214
	.  error


state 207
	sentenciaIf : IF '(' condicion ')' '{' bloque_ejecucion '}' ELSE '{' . bloque_ejecucion '}' END_IF  (43)
	sentenciaIf : IF '(' condicion ')' '{' bloque_ejecucion '}' ELSE '{' . bloque_ejecucion '}'  (44)

	ID  shift 153
	CADENA  shift 2
	IF  shift 4
	PRINT  shift 5
	WHILE  shift 10
	.  error

	sentenciaEjecutable  goto 172
	referenciaClase  goto 19
	listaReferencia  goto 20
	asignacion  goto 22
	sentenciaIf  goto 23
	sentenciaWhile  goto 24
	print  goto 25
	invocacionMetodo  goto 26
	bloque_ejecucion  goto 215


state 208
	sentenciaIf : IF '(' condicion ')' sentenciaEjecutable ',' ELSE '{' bloque_ejecucion . '}' END_IF  (48)
	bloque_ejecucion : bloque_ejecucion . sentenciaEjecutable ','  (67)

	ID  shift 153
	CADENA  shift 2
	IF  shift 4
	PRINT  shift 5
	WHILE  shift 10
	'}'  shift 216
	.  error

	sentenciaEjecutable  goto 189
	referenciaClase  goto 19
	listaReferencia  goto 20
	asignacion  goto 22
	sentenciaIf  goto 23
	sentenciaWhile  goto 24
	print  goto 25
	invocacionMetodo  goto 26


state 209
	sentenciaIf : IF '(' condicion ')' sentenciaEjecutable ',' ELSE sentenciaEjecutable ',' . END_IF  (47)

	END_IF  shift 217
	.  error


state 210
	sentenciaIfRetorno : IF '(' condicion ')' '{' bloque_ejecucion_return '}' . ELSE '{' bloque_ejecucion_return '}' END_IF  (53)
	sentenciaIfRetorno : IF '(' condicion ')' '{' bloque_ejecucion_return '}' . ELSE '{' bloque_ejecucion_return '}'  (54)
	sentenciaIfRetorno : IF '(' condicion ')' '{' bloque_ejecucion_return '}' . END_IF  (55)
	sentenciaIfRetorno : IF '(' condicion ')' '{' bloque_ejecucion_return '}' .  (56)

	ELSE  shift 218
	END_IF  shift 219
	','  reduce 56


state 211
	bloque_ejecucion_return : bloque_ejecucion_return sentencia_ejecutable_return . ','  (69)

	','  shift 220
	.  error


state 212
	bloque_ejecucion_return : sentencia_ejecutable_return ',' .  (70)

	.  reduce 70


state 213
	sentenciaIfRetorno : IF '(' condicion ')' sentencia_ejecutable_return ',' ELSE . sentencia_ejecutable_return ',' END_IF  (57)
	sentenciaIfRetorno : IF '(' condicion ')' sentencia_ejecutable_return ',' ELSE . '{' bloque_ejecucion_return '}' END_IF  (58)

	ID  shift 153
	CADENA  shift 2
	IF  shift 91
	PRINT  shift 5
	WHILE  shift 10
	RETURN  shift 92
	'{'  shift 221
	.  error

	referenciaClase  goto 93
	listaReferencia  goto 20
	asignacion  goto 94
	sentenciaWhile  goto 95
	print  goto 96
	invocacionMetodo  goto 97
	sentenciaIfRetorno  goto 101
	sentencia_ejecutable_return  goto 222
	return  goto 103


state 214
	sentenciaIfRetorno : IF '(' condicion ')' sentencia_ejecutable_return ',' END_IF .  (59)

	.  reduce 59


state 215
	sentenciaIf : IF '(' condicion ')' '{' bloque_ejecucion '}' ELSE '{' bloque_ejecucion . '}' END_IF  (43)
	sentenciaIf : IF '(' condicion ')' '{' bloque_ejecucion '}' ELSE '{' bloque_ejecucion . '}'  (44)
	bloque_ejecucion : bloque_ejecucion . sentenciaEjecutable ','  (67)

	ID  shift 153
	CADENA  shift 2
	IF  shift 4
	PRINT  shift 5
	WHILE  shift 10
	'}'  shift 223
	.  error

	sentenciaEjecutable  goto 189
	referenciaClase  goto 19
	listaReferencia  goto 20
	asignacion  goto 22
	sentenciaIf  goto 23
	sentenciaWhile  goto 24
	print  goto 25
	invocacionMetodo  goto 26


state 216
	sentenciaIf : IF '(' condicion ')' sentenciaEjecutable ',' ELSE '{' bloque_ejecucion '}' . END_IF  (48)

	END_IF  shift 224
	.  error


state 217
	sentenciaIf : IF '(' condicion ')' sentenciaEjecutable ',' ELSE sentenciaEjecutable ',' END_IF .  (47)

	.  reduce 47


state 218
	sentenciaIfRetorno : IF '(' condicion ')' '{' bloque_ejecucion_return '}' ELSE . '{' bloque_ejecucion_return '}' END_IF  (53)
	sentenciaIfRetorno : IF '(' condicion ')' '{' bloque_ejecucion_return '}' ELSE . '{' bloque_ejecucion_return '}'  (54)

	'{'  shift 225
	.  error


state 219
	sentenciaIfRetorno : IF '(' condicion ')' '{' bloque_ejecucion_return '}' END_IF .  (55)

	.  reduce 55


state 220
	bloque_ejecucion_return : bloque_ejecucion_return sentencia_ejecutable_return ',' .  (69)

	.  reduce 69


state 221
	sentenciaIfRetorno : IF '(' condicion ')' sentencia_ejecutable_return ',' ELSE '{' . bloque_ejecucion_return '}' END_IF  (58)

	ID  shift 153
	CADENA  shift 2
	IF  shift 91
	PRINT  shift 5
	WHILE  shift 10
	RETURN  shift 92
	.  error

	referenciaClase  goto 93
	listaReferencia  goto 20
	asignacion  goto 94
	sentenciaWhile  goto 95
	print  goto 96
	invocacionMetodo  goto 97
	sentenciaIfRetorno  goto 101
	bloque_ejecucion_return  goto 226
	sentencia_ejecutable_return  goto 205
	return  goto 103


state 222
	sentenciaIfRetorno : IF '(' condicion ')' sentencia_ejecutable_return ',' ELSE sentencia_ejecutable_return . ',' END_IF  (57)

	','  shift 227
	.  error


state 223
	sentenciaIf : IF '(' condicion ')' '{' bloque_ejecucion '}' ELSE '{' bloque_ejecucion '}' . END_IF  (43)
	sentenciaIf : IF '(' condicion ')' '{' bloque_ejecucion '}' ELSE '{' bloque_ejecucion '}' .  (44)

	END_IF  shift 228
	','  reduce 44


state 224
	sentenciaIf : IF '(' condicion ')' sentenciaEjecutable ',' ELSE '{' bloque_ejecucion '}' END_IF .  (48)

	.  reduce 48


state 225
	sentenciaIfRetorno : IF '(' condicion ')' '{' bloque_ejecucion_return '}' ELSE '{' . bloque_ejecucion_return '}' END_IF  (53)
	sentenciaIfRetorno : IF '(' condicion ')' '{' bloque_ejecucion_return '}' ELSE '{' . bloque_ejecucion_return '}'  (54)

	ID  shift 153
	CADENA  shift 2
	IF  shift 91
	PRINT  shift 5
	WHILE  shift 10
	RETURN  shift 92
	.  error

	referenciaClase  goto 93
	listaReferencia  goto 20
	asignacion  goto 94
	sentenciaWhile  goto 95
	print  goto 96
	invocacionMetodo  goto 97
	sentenciaIfRetorno  goto 101
	bloque_ejecucion_return  goto 229
	sentencia_ejecutable_return  goto 205
	return  goto 103


state 226
	sentenciaIfRetorno : IF '(' condicion ')' sentencia_ejecutable_return ',' ELSE '{' bloque_ejecucion_return . '}' END_IF  (58)
	bloque_ejecucion_return : bloque_ejecucion_return . sentencia_ejecutable_return ','  (69)

	ID  shift 153
	CADENA  shift 2
	IF  shift 91
	PRINT  shift 5
	WHILE  shift 10
	RETURN  shift 92
	'}'  shift 230
	.  error

	referenciaClase  goto 93
	listaReferencia  goto 20
	asignacion  goto 94
	sentenciaWhile  goto 95
	print  goto 96
	invocacionMetodo  goto 97
	sentenciaIfRetorno  goto 101
	sentencia_ejecutable_return  goto 211
	return  goto 103


state 227
	sentenciaIfRetorno : IF '(' condicion ')' sentencia_ejecutable_return ',' ELSE sentencia_ejecutable_return ',' . END_IF  (57)

	END_IF  shift 231
	.  error


state 228
	sentenciaIf : IF '(' condicion ')' '{' bloque_ejecucion '}' ELSE '{' bloque_ejecucion '}' END_IF .  (43)

	.  reduce 43


state 229
	sentenciaIfRetorno : IF '(' condicion ')' '{' bloque_ejecucion_return '}' ELSE '{' bloque_ejecucion_return . '}' END_IF  (53)
	sentenciaIfRetorno : IF '(' condicion ')' '{' bloque_ejecucion_return '}' ELSE '{' bloque_ejecucion_return . '}'  (54)
	bloque_ejecucion_return : bloque_ejecucion_return . sentencia_ejecutable_return ','  (69)

	ID  shift 153
	CADENA  shift 2
	IF  shift 91
	PRINT  shift 5
	WHILE  shift 10
	RETURN  shift 92
	'}'  shift 232
	.  error

	referenciaClase  goto 93
	listaReferencia  goto 20
	asignacion  goto 94
	sentenciaWhile  goto 95
	print  goto 96
	invocacionMetodo  goto 97
	sentenciaIfRetorno  goto 101
	sentencia_ejecutable_return  goto 211
	return  goto 103


state 230
	sentenciaIfRetorno : IF '(' condicion ')' sentencia_ejecutable_return ',' ELSE '{' bloque_ejecucion_return '}' . END_IF  (58)

	END_IF  shift 233
	.  error


state 231
	sentenciaIfRetorno : IF '(' condicion ')' sentencia_ejecutable_return ',' ELSE sentencia_ejecutable_return ',' END_IF .  (57)

	.  reduce 57


state 232
	sentenciaIfRetorno : IF '(' condicion ')' '{' bloque_ejecucion_return '}' ELSE '{' bloque_ejecucion_return '}' . END_IF  (53)
	sentenciaIfRetorno : IF '(' condicion ')' '{' bloque_ejecucion_return '}' ELSE '{' bloque_ejecucion_return '}' .  (54)

	END_IF  shift 234
	','  reduce 54


state 233
	sentenciaIfRetorno : IF '(' condicion ')' sentencia_ejecutable_return ',' ELSE '{' bloque_ejecucion_return '}' END_IF .  (58)

	.  reduce 58


state 234
	sentenciaIfRetorno : IF '(' condicion ')' '{' bloque_ejecucion_return '}' ELSE '{' bloque_ejecucion_return '}' END_IF .  (53)

	.  reduce 53


36 terminals, 45 nonterminals
125 grammar rules, 235 states
