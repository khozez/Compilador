   0  $accept : programa $end

   1  programa : '{' cuerpoPrograma '}'
   2           | '{' '}'
   3           | cuerpoPrograma '}'
   4           | '{' cuerpoPrograma

   5  cuerpoPrograma : listaSentencias

   6  listaSentencias : listaSentencias sentenciaDeclarativa
   7                  | listaSentencias sentenciaEjecutable ','
   8                  | sentenciaDeclarativa
   9                  | sentenciaEjecutable ','

  10  declaracionClase : CLASS ID '{' cuerpoClase '}'
  11                   | CLASS ID ','
  12                   | CLASS ID

  13  cuerpoClase : seccionClase

  14  seccionClase : seccionClase seccionAtributos
  15               | seccionClase declaracionMetodo ','
  16               | declaracionMetodo ','
  17               | seccionAtributos

  18  referenciaClase : ID '.' referenciaClase
  19                  | ID '.' asignacion
  20                  | ID '.' invocacionMetodo

  21  seccionAtributos : tipo ID ';' listaAtributos
  22                   | ID ','
  23                   | tipo ID ','
  24                   | tipo ID

  25  listaAtributos : ID ';' listaAtributos
  26                 | ID ','
  27                 | ID

  28  sentenciaEjecutable : asignacion
  29                      | sentenciaIf
  30                      | sentenciaWhile
  31                      | print
  32                      | invocacionMetodo
  33                      | referenciaClase

  34  sentenciaDeclarativa : declaracionFuncion
  35                       | declaracion ','
  36                       | declaracionClase

  37  sentenciaDeclarativaMetodo : declaracionFuncion
  38                             | declaracion ','

  39  asignacion : ID '=' expresion
  40             | ID IGUAL expresion

  41  sentenciaIf : IF '(' expresion comparador expresion ')' '{' bloque_ejecucion '}' ELSE '{' bloque_ejecucion '}' END_IF
  42              | IF '(' expresion comparador expresion ')' '{' bloque_ejecucion '}' ELSE '{' bloque_ejecucion '}'
  43              | IF '(' expresion comparador expresion ')' '{' bloque_ejecucion '}' END_IF
  44              | IF '(' expresion comparador expresion ')' '{' bloque_ejecucion '}'
  45              | IF '(' expresion comparador expresion ')' sentenciaEjecutable ',' ELSE sentenciaEjecutable ',' END_IF
  46              | IF '(' expresion comparador expresion ')' sentenciaEjecutable ',' END_IF
  47              | IF '(' expresion comparador expresion ')' ',' END_IF

  48  bloque_ejecucion : bloque_ejecucion sentenciaEjecutable ','
  49                   | sentenciaEjecutable ','

  50  sentenciaWhile : WHILE '(' expresion comparador expresion ')' DO '{' bloque_ejecucion '}'
  51                 | WHILE '(' expresion comparador expresion ')' DO sentenciaEjecutable
  52                 | WHILE '(' expresion comparador ')' DO '{' bloque_ejecucion '}'

  53  print : PRINT CADENA

  54  return : RETURN ','

  55  declaracionMetodo : VOID ID '(' tipo ID ')' '{' cuerpoMetodo '}'
  56                    | VOID ID '(' ')' '{' cuerpoMetodo '}'

  57  declaracionFuncion : VOID ID '(' tipo ID ')' '{' cuerpoMetodo return '}'
  58                     | VOID ID '(' tipo ID ')' '{' cuerpoMetodo '}'
  59                     | VOID ID '(' ')' '{' cuerpoMetodo return '}'
  60                     | VOID ID '(' ')' '{' cuerpoMetodo '}'

  61  cuerpoMetodo : listaSentenciasMetodo

  62  listaSentenciasMetodo : listaSentenciasMetodo sentenciaDeclarativaMetodo
  63                        | listaSentenciasMetodo sentenciaEjecutable ','
  64                        | sentenciaDeclarativaMetodo
  65                        | sentenciaEjecutable ','

  66  invocacionMetodo : ID '(' expresion ')'
  67                   | ID '(' ')'
  68                   | ID '(' asignacion ')'
  69                   | ID '(' tipo asignacion ')'

  70  declaracion : tipo listaDeclaracion
  71              | tipo asignacion

  72  listaDeclaracion : ID ';' listaDeclaracion
  73                   | ID

  74  tipo : SHORT
  75       | ULONG
  76       | FLOAT
  77       | ID

  78  expresion : termino
  79            | expresion '+' termino
  80            | expresion '-' termino

  81  termino : factor
  82          | termino '*' factor
  83          | termino '/' factor

  84  factor : ID
  85         | ID MENOSMENOS
  86         | CTE
  87         | '-' CTE
  88         | '(' expresion ')'

  89  comparador : MAYORIGUAL
  90             | MENORIGUAL
  91             | IGUAL
  92             | DISTINTO
  93             | '<'
  94             | '>'
  95             | '='

state 0
	$accept : . programa $end  (0)

	ID  shift 1
	CLASS  shift 2
	IF  shift 3
	PRINT  shift 4
	VOID  shift 5
	SHORT  shift 6
	ULONG  shift 7
	FLOAT  shift 8
	WHILE  shift 9
	'{'  shift 10
	.  error

	programa  goto 11
	cuerpoPrograma  goto 12
	listaSentencias  goto 13
	sentenciaDeclarativa  goto 14
	sentenciaEjecutable  goto 15
	declaracionClase  goto 16
	referenciaClase  goto 17
	asignacion  goto 18
	invocacionMetodo  goto 19
	tipo  goto 20
	sentenciaIf  goto 21
	sentenciaWhile  goto 22
	print  goto 23
	declaracionFuncion  goto 24
	declaracion  goto 25


state 1
	referenciaClase : ID . '.' referenciaClase  (18)
	referenciaClase : ID . '.' asignacion  (19)
	referenciaClase : ID . '.' invocacionMetodo  (20)
	asignacion : ID . '=' expresion  (39)
	asignacion : ID . IGUAL expresion  (40)
	invocacionMetodo : ID . '(' expresion ')'  (66)
	invocacionMetodo : ID . '(' ')'  (67)
	invocacionMetodo : ID . '(' asignacion ')'  (68)
	invocacionMetodo : ID . '(' tipo asignacion ')'  (69)
	tipo : ID .  (77)

	IGUAL  shift 26
	'.'  shift 27
	'='  shift 28
	'('  shift 29
	ID  reduce 77


state 2
	declaracionClase : CLASS . ID '{' cuerpoClase '}'  (10)
	declaracionClase : CLASS . ID ','  (11)
	declaracionClase : CLASS . ID  (12)

	ID  shift 30
	.  error


state 3
	sentenciaIf : IF . '(' expresion comparador expresion ')' '{' bloque_ejecucion '}' ELSE '{' bloque_ejecucion '}' END_IF  (41)
	sentenciaIf : IF . '(' expresion comparador expresion ')' '{' bloque_ejecucion '}' ELSE '{' bloque_ejecucion '}'  (42)
	sentenciaIf : IF . '(' expresion comparador expresion ')' '{' bloque_ejecucion '}' END_IF  (43)
	sentenciaIf : IF . '(' expresion comparador expresion ')' '{' bloque_ejecucion '}'  (44)
	sentenciaIf : IF . '(' expresion comparador expresion ')' sentenciaEjecutable ',' ELSE sentenciaEjecutable ',' END_IF  (45)
	sentenciaIf : IF . '(' expresion comparador expresion ')' sentenciaEjecutable ',' END_IF  (46)
	sentenciaIf : IF . '(' expresion comparador expresion ')' ',' END_IF  (47)

	'('  shift 31
	.  error


state 4
	print : PRINT . CADENA  (53)

	CADENA  shift 32
	.  error


state 5
	declaracionFuncion : VOID . ID '(' tipo ID ')' '{' cuerpoMetodo return '}'  (57)
	declaracionFuncion : VOID . ID '(' tipo ID ')' '{' cuerpoMetodo '}'  (58)
	declaracionFuncion : VOID . ID '(' ')' '{' cuerpoMetodo return '}'  (59)
	declaracionFuncion : VOID . ID '(' ')' '{' cuerpoMetodo '}'  (60)

	ID  shift 33
	.  error


state 6
	tipo : SHORT .  (74)

	.  reduce 74


state 7
	tipo : ULONG .  (75)

	.  reduce 75


state 8
	tipo : FLOAT .  (76)

	.  reduce 76


state 9
	sentenciaWhile : WHILE . '(' expresion comparador expresion ')' DO '{' bloque_ejecucion '}'  (50)
	sentenciaWhile : WHILE . '(' expresion comparador expresion ')' DO sentenciaEjecutable  (51)
	sentenciaWhile : WHILE . '(' expresion comparador ')' DO '{' bloque_ejecucion '}'  (52)

	'('  shift 34
	.  error


state 10
	programa : '{' . cuerpoPrograma '}'  (1)
	programa : '{' . '}'  (2)
	programa : '{' . cuerpoPrograma  (4)

	ID  shift 1
	CLASS  shift 2
	IF  shift 3
	PRINT  shift 4
	VOID  shift 5
	SHORT  shift 6
	ULONG  shift 7
	FLOAT  shift 8
	WHILE  shift 9
	'}'  shift 35
	.  error

	cuerpoPrograma  goto 36
	listaSentencias  goto 13
	sentenciaDeclarativa  goto 14
	sentenciaEjecutable  goto 15
	declaracionClase  goto 16
	referenciaClase  goto 17
	asignacion  goto 18
	invocacionMetodo  goto 19
	tipo  goto 20
	sentenciaIf  goto 21
	sentenciaWhile  goto 22
	print  goto 23
	declaracionFuncion  goto 24
	declaracion  goto 25


state 11
	$accept : programa . $end  (0)

	$end  accept


state 12
	programa : cuerpoPrograma . '}'  (3)

	'}'  shift 37
	.  error


state 13
	cuerpoPrograma : listaSentencias .  (5)
	listaSentencias : listaSentencias . sentenciaDeclarativa  (6)
	listaSentencias : listaSentencias . sentenciaEjecutable ','  (7)

	ID  shift 1
	CLASS  shift 2
	IF  shift 3
	PRINT  shift 4
	VOID  shift 5
	SHORT  shift 6
	ULONG  shift 7
	FLOAT  shift 8
	WHILE  shift 9
	$end  reduce 5
	'}'  reduce 5

	sentenciaDeclarativa  goto 38
	sentenciaEjecutable  goto 39
	declaracionClase  goto 16
	referenciaClase  goto 17
	asignacion  goto 18
	invocacionMetodo  goto 19
	tipo  goto 20
	sentenciaIf  goto 21
	sentenciaWhile  goto 22
	print  goto 23
	declaracionFuncion  goto 24
	declaracion  goto 25


state 14
	listaSentencias : sentenciaDeclarativa .  (8)

	.  reduce 8


state 15
	listaSentencias : sentenciaEjecutable . ','  (9)

	','  shift 40
	.  error


state 16
	sentenciaDeclarativa : declaracionClase .  (36)

	.  reduce 36


state 17
	sentenciaEjecutable : referenciaClase .  (33)

	.  reduce 33


state 18
	sentenciaEjecutable : asignacion .  (28)

	.  reduce 28


state 19
	sentenciaEjecutable : invocacionMetodo .  (32)

	.  reduce 32


state 20
	declaracion : tipo . listaDeclaracion  (70)
	declaracion : tipo . asignacion  (71)

	ID  shift 41
	.  error

	asignacion  goto 42
	listaDeclaracion  goto 43


state 21
	sentenciaEjecutable : sentenciaIf .  (29)

	.  reduce 29


state 22
	sentenciaEjecutable : sentenciaWhile .  (30)

	.  reduce 30


state 23
	sentenciaEjecutable : print .  (31)

	.  reduce 31


state 24
	sentenciaDeclarativa : declaracionFuncion .  (34)

	.  reduce 34


state 25
	sentenciaDeclarativa : declaracion . ','  (35)

	','  shift 44
	.  error


state 26
	asignacion : ID IGUAL . expresion  (40)

	ID  shift 45
	CTE  shift 46
	'-'  shift 47
	'('  shift 48
	.  error

	expresion  goto 49
	termino  goto 50
	factor  goto 51


state 27
	referenciaClase : ID '.' . referenciaClase  (18)
	referenciaClase : ID '.' . asignacion  (19)
	referenciaClase : ID '.' . invocacionMetodo  (20)

	ID  shift 52
	.  error

	referenciaClase  goto 53
	asignacion  goto 54
	invocacionMetodo  goto 55


state 28
	asignacion : ID '=' . expresion  (39)

	ID  shift 45
	CTE  shift 46
	'-'  shift 47
	'('  shift 48
	.  error

	expresion  goto 56
	termino  goto 50
	factor  goto 51


state 29
	invocacionMetodo : ID '(' . expresion ')'  (66)
	invocacionMetodo : ID '(' . ')'  (67)
	invocacionMetodo : ID '(' . asignacion ')'  (68)
	invocacionMetodo : ID '(' . tipo asignacion ')'  (69)

	ID  shift 57
	CTE  shift 46
	SHORT  shift 6
	ULONG  shift 7
	FLOAT  shift 8
	'-'  shift 47
	'('  shift 48
	')'  shift 58
	.  error

	asignacion  goto 59
	tipo  goto 60
	expresion  goto 61
	termino  goto 50
	factor  goto 51


state 30
	declaracionClase : CLASS ID . '{' cuerpoClase '}'  (10)
	declaracionClase : CLASS ID . ','  (11)
	declaracionClase : CLASS ID .  (12)

	'{'  shift 62
	','  shift 63
	$end  reduce 12
	ID  reduce 12
	CLASS  reduce 12
	IF  reduce 12
	PRINT  reduce 12
	VOID  reduce 12
	SHORT  reduce 12
	ULONG  reduce 12
	FLOAT  reduce 12
	WHILE  reduce 12
	'}'  reduce 12


state 31
	sentenciaIf : IF '(' . expresion comparador expresion ')' '{' bloque_ejecucion '}' ELSE '{' bloque_ejecucion '}' END_IF  (41)
	sentenciaIf : IF '(' . expresion comparador expresion ')' '{' bloque_ejecucion '}' ELSE '{' bloque_ejecucion '}'  (42)
	sentenciaIf : IF '(' . expresion comparador expresion ')' '{' bloque_ejecucion '}' END_IF  (43)
	sentenciaIf : IF '(' . expresion comparador expresion ')' '{' bloque_ejecucion '}'  (44)
	sentenciaIf : IF '(' . expresion comparador expresion ')' sentenciaEjecutable ',' ELSE sentenciaEjecutable ',' END_IF  (45)
	sentenciaIf : IF '(' . expresion comparador expresion ')' sentenciaEjecutable ',' END_IF  (46)
	sentenciaIf : IF '(' . expresion comparador expresion ')' ',' END_IF  (47)

	ID  shift 45
	CTE  shift 46
	'-'  shift 47
	'('  shift 48
	.  error

	expresion  goto 64
	termino  goto 50
	factor  goto 51


state 32
	print : PRINT CADENA .  (53)

	.  reduce 53


state 33
	declaracionFuncion : VOID ID . '(' tipo ID ')' '{' cuerpoMetodo return '}'  (57)
	declaracionFuncion : VOID ID . '(' tipo ID ')' '{' cuerpoMetodo '}'  (58)
	declaracionFuncion : VOID ID . '(' ')' '{' cuerpoMetodo return '}'  (59)
	declaracionFuncion : VOID ID . '(' ')' '{' cuerpoMetodo '}'  (60)

	'('  shift 65
	.  error


state 34
	sentenciaWhile : WHILE '(' . expresion comparador expresion ')' DO '{' bloque_ejecucion '}'  (50)
	sentenciaWhile : WHILE '(' . expresion comparador expresion ')' DO sentenciaEjecutable  (51)
	sentenciaWhile : WHILE '(' . expresion comparador ')' DO '{' bloque_ejecucion '}'  (52)

	ID  shift 45
	CTE  shift 46
	'-'  shift 47
	'('  shift 48
	.  error

	expresion  goto 66
	termino  goto 50
	factor  goto 51


state 35
	programa : '{' '}' .  (2)

	.  reduce 2


state 36
	programa : '{' cuerpoPrograma . '}'  (1)
	programa : '{' cuerpoPrograma .  (4)

	'}'  shift 67
	$end  reduce 4


state 37
	programa : cuerpoPrograma '}' .  (3)

	.  reduce 3


state 38
	listaSentencias : listaSentencias sentenciaDeclarativa .  (6)

	.  reduce 6


state 39
	listaSentencias : listaSentencias sentenciaEjecutable . ','  (7)

	','  shift 68
	.  error


state 40
	listaSentencias : sentenciaEjecutable ',' .  (9)

	.  reduce 9


state 41
	asignacion : ID . '=' expresion  (39)
	asignacion : ID . IGUAL expresion  (40)
	listaDeclaracion : ID . ';' listaDeclaracion  (72)
	listaDeclaracion : ID .  (73)

	IGUAL  shift 26
	';'  shift 69
	'='  shift 28
	','  reduce 73


state 42
	declaracion : tipo asignacion .  (71)

	.  reduce 71


state 43
	declaracion : tipo listaDeclaracion .  (70)

	.  reduce 70


state 44
	sentenciaDeclarativa : declaracion ',' .  (35)

	.  reduce 35


state 45
	factor : ID .  (84)
	factor : ID . MENOSMENOS  (85)

	MENOSMENOS  shift 70
	MAYORIGUAL  reduce 84
	MENORIGUAL  reduce 84
	IGUAL  reduce 84
	DISTINTO  reduce 84
	'+'  reduce 84
	'-'  reduce 84
	'*'  reduce 84
	'/'  reduce 84
	','  reduce 84
	'='  reduce 84
	')'  reduce 84
	'<'  reduce 84
	'>'  reduce 84


state 46
	factor : CTE .  (86)

	.  reduce 86


state 47
	factor : '-' . CTE  (87)

	CTE  shift 71
	.  error


state 48
	factor : '(' . expresion ')'  (88)

	ID  shift 45
	CTE  shift 46
	'-'  shift 47
	'('  shift 48
	.  error

	expresion  goto 72
	termino  goto 50
	factor  goto 51


state 49
	asignacion : ID IGUAL expresion .  (40)
	expresion : expresion . '+' termino  (79)
	expresion : expresion . '-' termino  (80)

	'+'  shift 73
	'-'  shift 74
	','  reduce 40
	')'  reduce 40


state 50
	expresion : termino .  (78)
	termino : termino . '*' factor  (82)
	termino : termino . '/' factor  (83)

	'*'  shift 75
	'/'  shift 76
	MAYORIGUAL  reduce 78
	MENORIGUAL  reduce 78
	IGUAL  reduce 78
	DISTINTO  reduce 78
	'+'  reduce 78
	'-'  reduce 78
	','  reduce 78
	'='  reduce 78
	')'  reduce 78
	'<'  reduce 78
	'>'  reduce 78


state 51
	termino : factor .  (81)

	.  reduce 81


state 52
	referenciaClase : ID . '.' referenciaClase  (18)
	referenciaClase : ID . '.' asignacion  (19)
	referenciaClase : ID . '.' invocacionMetodo  (20)
	asignacion : ID . '=' expresion  (39)
	asignacion : ID . IGUAL expresion  (40)
	invocacionMetodo : ID . '(' expresion ')'  (66)
	invocacionMetodo : ID . '(' ')'  (67)
	invocacionMetodo : ID . '(' asignacion ')'  (68)
	invocacionMetodo : ID . '(' tipo asignacion ')'  (69)

	IGUAL  shift 26
	'.'  shift 27
	'='  shift 28
	'('  shift 29
	.  error


state 53
	referenciaClase : ID '.' referenciaClase .  (18)

	.  reduce 18


state 54
	referenciaClase : ID '.' asignacion .  (19)

	.  reduce 19


state 55
	referenciaClase : ID '.' invocacionMetodo .  (20)

	.  reduce 20


state 56
	asignacion : ID '=' expresion .  (39)
	expresion : expresion . '+' termino  (79)
	expresion : expresion . '-' termino  (80)

	'+'  shift 73
	'-'  shift 74
	','  reduce 39
	')'  reduce 39


state 57
	asignacion : ID . '=' expresion  (39)
	asignacion : ID . IGUAL expresion  (40)
	tipo : ID .  (77)
	factor : ID .  (84)
	factor : ID . MENOSMENOS  (85)

	IGUAL  shift 26
	MENOSMENOS  shift 70
	'='  shift 28
	ID  reduce 77
	'+'  reduce 84
	'-'  reduce 84
	'*'  reduce 84
	'/'  reduce 84
	')'  reduce 84


state 58
	invocacionMetodo : ID '(' ')' .  (67)

	.  reduce 67


state 59
	invocacionMetodo : ID '(' asignacion . ')'  (68)

	')'  shift 77
	.  error


state 60
	invocacionMetodo : ID '(' tipo . asignacion ')'  (69)

	ID  shift 78
	.  error

	asignacion  goto 79


state 61
	invocacionMetodo : ID '(' expresion . ')'  (66)
	expresion : expresion . '+' termino  (79)
	expresion : expresion . '-' termino  (80)

	'+'  shift 73
	'-'  shift 74
	')'  shift 80
	.  error


state 62
	declaracionClase : CLASS ID '{' . cuerpoClase '}'  (10)

	ID  shift 81
	VOID  shift 82
	SHORT  shift 6
	ULONG  shift 7
	FLOAT  shift 8
	.  error

	cuerpoClase  goto 83
	seccionClase  goto 84
	seccionAtributos  goto 85
	declaracionMetodo  goto 86
	tipo  goto 87


state 63
	declaracionClase : CLASS ID ',' .  (11)

	.  reduce 11


state 64
	sentenciaIf : IF '(' expresion . comparador expresion ')' '{' bloque_ejecucion '}' ELSE '{' bloque_ejecucion '}' END_IF  (41)
	sentenciaIf : IF '(' expresion . comparador expresion ')' '{' bloque_ejecucion '}' ELSE '{' bloque_ejecucion '}'  (42)
	sentenciaIf : IF '(' expresion . comparador expresion ')' '{' bloque_ejecucion '}' END_IF  (43)
	sentenciaIf : IF '(' expresion . comparador expresion ')' '{' bloque_ejecucion '}'  (44)
	sentenciaIf : IF '(' expresion . comparador expresion ')' sentenciaEjecutable ',' ELSE sentenciaEjecutable ',' END_IF  (45)
	sentenciaIf : IF '(' expresion . comparador expresion ')' sentenciaEjecutable ',' END_IF  (46)
	sentenciaIf : IF '(' expresion . comparador expresion ')' ',' END_IF  (47)
	expresion : expresion . '+' termino  (79)
	expresion : expresion . '-' termino  (80)

	MAYORIGUAL  shift 88
	MENORIGUAL  shift 89
	IGUAL  shift 90
	DISTINTO  shift 91
	'+'  shift 73
	'-'  shift 74
	'='  shift 92
	'<'  shift 93
	'>'  shift 94
	.  error

	comparador  goto 95


state 65
	declaracionFuncion : VOID ID '(' . tipo ID ')' '{' cuerpoMetodo return '}'  (57)
	declaracionFuncion : VOID ID '(' . tipo ID ')' '{' cuerpoMetodo '}'  (58)
	declaracionFuncion : VOID ID '(' . ')' '{' cuerpoMetodo return '}'  (59)
	declaracionFuncion : VOID ID '(' . ')' '{' cuerpoMetodo '}'  (60)

	ID  shift 96
	SHORT  shift 6
	ULONG  shift 7
	FLOAT  shift 8
	')'  shift 97
	.  error

	tipo  goto 98


state 66
	sentenciaWhile : WHILE '(' expresion . comparador expresion ')' DO '{' bloque_ejecucion '}'  (50)
	sentenciaWhile : WHILE '(' expresion . comparador expresion ')' DO sentenciaEjecutable  (51)
	sentenciaWhile : WHILE '(' expresion . comparador ')' DO '{' bloque_ejecucion '}'  (52)
	expresion : expresion . '+' termino  (79)
	expresion : expresion . '-' termino  (80)

	MAYORIGUAL  shift 88
	MENORIGUAL  shift 89
	IGUAL  shift 90
	DISTINTO  shift 91
	'+'  shift 73
	'-'  shift 74
	'='  shift 92
	'<'  shift 93
	'>'  shift 94
	.  error

	comparador  goto 99


state 67
	programa : '{' cuerpoPrograma '}' .  (1)

	.  reduce 1


state 68
	listaSentencias : listaSentencias sentenciaEjecutable ',' .  (7)

	.  reduce 7


state 69
	listaDeclaracion : ID ';' . listaDeclaracion  (72)

	ID  shift 100
	.  error

	listaDeclaracion  goto 101


state 70
	factor : ID MENOSMENOS .  (85)

	.  reduce 85


state 71
	factor : '-' CTE .  (87)

	.  reduce 87


state 72
	expresion : expresion . '+' termino  (79)
	expresion : expresion . '-' termino  (80)
	factor : '(' expresion . ')'  (88)

	'+'  shift 73
	'-'  shift 74
	')'  shift 102
	.  error


state 73
	expresion : expresion '+' . termino  (79)

	ID  shift 45
	CTE  shift 46
	'-'  shift 47
	'('  shift 48
	.  error

	termino  goto 103
	factor  goto 51


state 74
	expresion : expresion '-' . termino  (80)

	ID  shift 45
	CTE  shift 46
	'-'  shift 47
	'('  shift 48
	.  error

	termino  goto 104
	factor  goto 51


state 75
	termino : termino '*' . factor  (82)

	ID  shift 45
	CTE  shift 46
	'-'  shift 47
	'('  shift 48
	.  error

	factor  goto 105


state 76
	termino : termino '/' . factor  (83)

	ID  shift 45
	CTE  shift 46
	'-'  shift 47
	'('  shift 48
	.  error

	factor  goto 106


state 77
	invocacionMetodo : ID '(' asignacion ')' .  (68)

	.  reduce 68


state 78
	asignacion : ID . '=' expresion  (39)
	asignacion : ID . IGUAL expresion  (40)

	IGUAL  shift 26
	'='  shift 28
	.  error


state 79
	invocacionMetodo : ID '(' tipo asignacion . ')'  (69)

	')'  shift 107
	.  error


state 80
	invocacionMetodo : ID '(' expresion ')' .  (66)

	.  reduce 66


state 81
	seccionAtributos : ID . ','  (22)
	tipo : ID .  (77)

	','  shift 108
	ID  reduce 77


state 82
	declaracionMetodo : VOID . ID '(' tipo ID ')' '{' cuerpoMetodo '}'  (55)
	declaracionMetodo : VOID . ID '(' ')' '{' cuerpoMetodo '}'  (56)

	ID  shift 109
	.  error


state 83
	declaracionClase : CLASS ID '{' cuerpoClase . '}'  (10)

	'}'  shift 110
	.  error


state 84
	cuerpoClase : seccionClase .  (13)
	seccionClase : seccionClase . seccionAtributos  (14)
	seccionClase : seccionClase . declaracionMetodo ','  (15)

	ID  shift 81
	VOID  shift 82
	SHORT  shift 6
	ULONG  shift 7
	FLOAT  shift 8
	'}'  reduce 13

	seccionAtributos  goto 111
	declaracionMetodo  goto 112
	tipo  goto 87


state 85
	seccionClase : seccionAtributos .  (17)

	.  reduce 17


state 86
	seccionClase : declaracionMetodo . ','  (16)

	','  shift 113
	.  error


state 87
	seccionAtributos : tipo . ID ';' listaAtributos  (21)
	seccionAtributos : tipo . ID ','  (23)
	seccionAtributos : tipo . ID  (24)

	ID  shift 114
	.  error


state 88
	comparador : MAYORIGUAL .  (89)

	.  reduce 89


state 89
	comparador : MENORIGUAL .  (90)

	.  reduce 90


state 90
	comparador : IGUAL .  (91)

	.  reduce 91


state 91
	comparador : DISTINTO .  (92)

	.  reduce 92


state 92
	comparador : '=' .  (95)

	.  reduce 95


state 93
	comparador : '<' .  (93)

	.  reduce 93


state 94
	comparador : '>' .  (94)

	.  reduce 94


state 95
	sentenciaIf : IF '(' expresion comparador . expresion ')' '{' bloque_ejecucion '}' ELSE '{' bloque_ejecucion '}' END_IF  (41)
	sentenciaIf : IF '(' expresion comparador . expresion ')' '{' bloque_ejecucion '}' ELSE '{' bloque_ejecucion '}'  (42)
	sentenciaIf : IF '(' expresion comparador . expresion ')' '{' bloque_ejecucion '}' END_IF  (43)
	sentenciaIf : IF '(' expresion comparador . expresion ')' '{' bloque_ejecucion '}'  (44)
	sentenciaIf : IF '(' expresion comparador . expresion ')' sentenciaEjecutable ',' ELSE sentenciaEjecutable ',' END_IF  (45)
	sentenciaIf : IF '(' expresion comparador . expresion ')' sentenciaEjecutable ',' END_IF  (46)
	sentenciaIf : IF '(' expresion comparador . expresion ')' ',' END_IF  (47)

	ID  shift 45
	CTE  shift 46
	'-'  shift 47
	'('  shift 48
	.  error

	expresion  goto 115
	termino  goto 50
	factor  goto 51


state 96
	tipo : ID .  (77)

	.  reduce 77


state 97
	declaracionFuncion : VOID ID '(' ')' . '{' cuerpoMetodo return '}'  (59)
	declaracionFuncion : VOID ID '(' ')' . '{' cuerpoMetodo '}'  (60)

	'{'  shift 116
	.  error


state 98
	declaracionFuncion : VOID ID '(' tipo . ID ')' '{' cuerpoMetodo return '}'  (57)
	declaracionFuncion : VOID ID '(' tipo . ID ')' '{' cuerpoMetodo '}'  (58)

	ID  shift 117
	.  error


state 99
	sentenciaWhile : WHILE '(' expresion comparador . expresion ')' DO '{' bloque_ejecucion '}'  (50)
	sentenciaWhile : WHILE '(' expresion comparador . expresion ')' DO sentenciaEjecutable  (51)
	sentenciaWhile : WHILE '(' expresion comparador . ')' DO '{' bloque_ejecucion '}'  (52)

	ID  shift 45
	CTE  shift 46
	'-'  shift 47
	'('  shift 48
	')'  shift 118
	.  error

	expresion  goto 119
	termino  goto 50
	factor  goto 51


state 100
	listaDeclaracion : ID . ';' listaDeclaracion  (72)
	listaDeclaracion : ID .  (73)

	';'  shift 69
	','  reduce 73


state 101
	listaDeclaracion : ID ';' listaDeclaracion .  (72)

	.  reduce 72


state 102
	factor : '(' expresion ')' .  (88)

	.  reduce 88


state 103
	expresion : expresion '+' termino .  (79)
	termino : termino . '*' factor  (82)
	termino : termino . '/' factor  (83)

	'*'  shift 75
	'/'  shift 76
	MAYORIGUAL  reduce 79
	MENORIGUAL  reduce 79
	IGUAL  reduce 79
	DISTINTO  reduce 79
	'+'  reduce 79
	'-'  reduce 79
	','  reduce 79
	'='  reduce 79
	')'  reduce 79
	'<'  reduce 79
	'>'  reduce 79


state 104
	expresion : expresion '-' termino .  (80)
	termino : termino . '*' factor  (82)
	termino : termino . '/' factor  (83)

	'*'  shift 75
	'/'  shift 76
	MAYORIGUAL  reduce 80
	MENORIGUAL  reduce 80
	IGUAL  reduce 80
	DISTINTO  reduce 80
	'+'  reduce 80
	'-'  reduce 80
	','  reduce 80
	'='  reduce 80
	')'  reduce 80
	'<'  reduce 80
	'>'  reduce 80


state 105
	termino : termino '*' factor .  (82)

	.  reduce 82


state 106
	termino : termino '/' factor .  (83)

	.  reduce 83


state 107
	invocacionMetodo : ID '(' tipo asignacion ')' .  (69)

	.  reduce 69


state 108
	seccionAtributos : ID ',' .  (22)

	.  reduce 22


state 109
	declaracionMetodo : VOID ID . '(' tipo ID ')' '{' cuerpoMetodo '}'  (55)
	declaracionMetodo : VOID ID . '(' ')' '{' cuerpoMetodo '}'  (56)

	'('  shift 120
	.  error


state 110
	declaracionClase : CLASS ID '{' cuerpoClase '}' .  (10)

	.  reduce 10


state 111
	seccionClase : seccionClase seccionAtributos .  (14)

	.  reduce 14


state 112
	seccionClase : seccionClase declaracionMetodo . ','  (15)

	','  shift 121
	.  error


state 113
	seccionClase : declaracionMetodo ',' .  (16)

	.  reduce 16


state 114
	seccionAtributos : tipo ID . ';' listaAtributos  (21)
	seccionAtributos : tipo ID . ','  (23)
	seccionAtributos : tipo ID .  (24)

	','  shift 122
	';'  shift 123
	ID  reduce 24
	VOID  reduce 24
	SHORT  reduce 24
	ULONG  reduce 24
	FLOAT  reduce 24
	'}'  reduce 24


state 115
	sentenciaIf : IF '(' expresion comparador expresion . ')' '{' bloque_ejecucion '}' ELSE '{' bloque_ejecucion '}' END_IF  (41)
	sentenciaIf : IF '(' expresion comparador expresion . ')' '{' bloque_ejecucion '}' ELSE '{' bloque_ejecucion '}'  (42)
	sentenciaIf : IF '(' expresion comparador expresion . ')' '{' bloque_ejecucion '}' END_IF  (43)
	sentenciaIf : IF '(' expresion comparador expresion . ')' '{' bloque_ejecucion '}'  (44)
	sentenciaIf : IF '(' expresion comparador expresion . ')' sentenciaEjecutable ',' ELSE sentenciaEjecutable ',' END_IF  (45)
	sentenciaIf : IF '(' expresion comparador expresion . ')' sentenciaEjecutable ',' END_IF  (46)
	sentenciaIf : IF '(' expresion comparador expresion . ')' ',' END_IF  (47)
	expresion : expresion . '+' termino  (79)
	expresion : expresion . '-' termino  (80)

	'+'  shift 73
	'-'  shift 74
	')'  shift 124
	.  error


state 116
	declaracionFuncion : VOID ID '(' ')' '{' . cuerpoMetodo return '}'  (59)
	declaracionFuncion : VOID ID '(' ')' '{' . cuerpoMetodo '}'  (60)

	ID  shift 1
	IF  shift 3
	PRINT  shift 4
	VOID  shift 5
	SHORT  shift 6
	ULONG  shift 7
	FLOAT  shift 8
	WHILE  shift 9
	.  error

	sentenciaEjecutable  goto 125
	referenciaClase  goto 17
	asignacion  goto 18
	invocacionMetodo  goto 19
	tipo  goto 20
	sentenciaIf  goto 21
	sentenciaWhile  goto 22
	print  goto 23
	declaracionFuncion  goto 126
	declaracion  goto 127
	sentenciaDeclarativaMetodo  goto 128
	cuerpoMetodo  goto 129
	listaSentenciasMetodo  goto 130


state 117
	declaracionFuncion : VOID ID '(' tipo ID . ')' '{' cuerpoMetodo return '}'  (57)
	declaracionFuncion : VOID ID '(' tipo ID . ')' '{' cuerpoMetodo '}'  (58)

	')'  shift 131
	.  error


state 118
	sentenciaWhile : WHILE '(' expresion comparador ')' . DO '{' bloque_ejecucion '}'  (52)

	DO  shift 132
	.  error


state 119
	sentenciaWhile : WHILE '(' expresion comparador expresion . ')' DO '{' bloque_ejecucion '}'  (50)
	sentenciaWhile : WHILE '(' expresion comparador expresion . ')' DO sentenciaEjecutable  (51)
	expresion : expresion . '+' termino  (79)
	expresion : expresion . '-' termino  (80)

	'+'  shift 73
	'-'  shift 74
	')'  shift 133
	.  error


state 120
	declaracionMetodo : VOID ID '(' . tipo ID ')' '{' cuerpoMetodo '}'  (55)
	declaracionMetodo : VOID ID '(' . ')' '{' cuerpoMetodo '}'  (56)

	ID  shift 96
	SHORT  shift 6
	ULONG  shift 7
	FLOAT  shift 8
	')'  shift 134
	.  error

	tipo  goto 135


state 121
	seccionClase : seccionClase declaracionMetodo ',' .  (15)

	.  reduce 15


state 122
	seccionAtributos : tipo ID ',' .  (23)

	.  reduce 23


state 123
	seccionAtributos : tipo ID ';' . listaAtributos  (21)

	ID  shift 136
	.  error

	listaAtributos  goto 137


state 124
	sentenciaIf : IF '(' expresion comparador expresion ')' . '{' bloque_ejecucion '}' ELSE '{' bloque_ejecucion '}' END_IF  (41)
	sentenciaIf : IF '(' expresion comparador expresion ')' . '{' bloque_ejecucion '}' ELSE '{' bloque_ejecucion '}'  (42)
	sentenciaIf : IF '(' expresion comparador expresion ')' . '{' bloque_ejecucion '}' END_IF  (43)
	sentenciaIf : IF '(' expresion comparador expresion ')' . '{' bloque_ejecucion '}'  (44)
	sentenciaIf : IF '(' expresion comparador expresion ')' . sentenciaEjecutable ',' ELSE sentenciaEjecutable ',' END_IF  (45)
	sentenciaIf : IF '(' expresion comparador expresion ')' . sentenciaEjecutable ',' END_IF  (46)
	sentenciaIf : IF '(' expresion comparador expresion ')' . ',' END_IF  (47)

	ID  shift 52
	IF  shift 3
	PRINT  shift 4
	WHILE  shift 9
	'{'  shift 138
	','  shift 139
	.  error

	sentenciaEjecutable  goto 140
	referenciaClase  goto 17
	asignacion  goto 18
	invocacionMetodo  goto 19
	sentenciaIf  goto 21
	sentenciaWhile  goto 22
	print  goto 23


state 125
	listaSentenciasMetodo : sentenciaEjecutable . ','  (65)

	','  shift 141
	.  error


state 126
	sentenciaDeclarativaMetodo : declaracionFuncion .  (37)

	.  reduce 37


state 127
	sentenciaDeclarativaMetodo : declaracion . ','  (38)

	','  shift 142
	.  error


state 128
	listaSentenciasMetodo : sentenciaDeclarativaMetodo .  (64)

	.  reduce 64


state 129
	declaracionFuncion : VOID ID '(' ')' '{' cuerpoMetodo . return '}'  (59)
	declaracionFuncion : VOID ID '(' ')' '{' cuerpoMetodo . '}'  (60)

	RETURN  shift 143
	'}'  shift 144
	.  error

	return  goto 145


state 130
	cuerpoMetodo : listaSentenciasMetodo .  (61)
	listaSentenciasMetodo : listaSentenciasMetodo . sentenciaDeclarativaMetodo  (62)
	listaSentenciasMetodo : listaSentenciasMetodo . sentenciaEjecutable ','  (63)

	ID  shift 1
	IF  shift 3
	PRINT  shift 4
	VOID  shift 5
	SHORT  shift 6
	ULONG  shift 7
	FLOAT  shift 8
	WHILE  shift 9
	RETURN  reduce 61
	'}'  reduce 61

	sentenciaEjecutable  goto 146
	referenciaClase  goto 17
	asignacion  goto 18
	invocacionMetodo  goto 19
	tipo  goto 20
	sentenciaIf  goto 21
	sentenciaWhile  goto 22
	print  goto 23
	declaracionFuncion  goto 126
	declaracion  goto 127
	sentenciaDeclarativaMetodo  goto 147


state 131
	declaracionFuncion : VOID ID '(' tipo ID ')' . '{' cuerpoMetodo return '}'  (57)
	declaracionFuncion : VOID ID '(' tipo ID ')' . '{' cuerpoMetodo '}'  (58)

	'{'  shift 148
	.  error


state 132
	sentenciaWhile : WHILE '(' expresion comparador ')' DO . '{' bloque_ejecucion '}'  (52)

	'{'  shift 149
	.  error


state 133
	sentenciaWhile : WHILE '(' expresion comparador expresion ')' . DO '{' bloque_ejecucion '}'  (50)
	sentenciaWhile : WHILE '(' expresion comparador expresion ')' . DO sentenciaEjecutable  (51)

	DO  shift 150
	.  error


state 134
	declaracionMetodo : VOID ID '(' ')' . '{' cuerpoMetodo '}'  (56)

	'{'  shift 151
	.  error


state 135
	declaracionMetodo : VOID ID '(' tipo . ID ')' '{' cuerpoMetodo '}'  (55)

	ID  shift 152
	.  error


state 136
	listaAtributos : ID . ';' listaAtributos  (25)
	listaAtributos : ID . ','  (26)
	listaAtributos : ID .  (27)

	','  shift 153
	';'  shift 154
	ID  reduce 27
	VOID  reduce 27
	SHORT  reduce 27
	ULONG  reduce 27
	FLOAT  reduce 27
	'}'  reduce 27


state 137
	seccionAtributos : tipo ID ';' listaAtributos .  (21)

	.  reduce 21


state 138
	sentenciaIf : IF '(' expresion comparador expresion ')' '{' . bloque_ejecucion '}' ELSE '{' bloque_ejecucion '}' END_IF  (41)
	sentenciaIf : IF '(' expresion comparador expresion ')' '{' . bloque_ejecucion '}' ELSE '{' bloque_ejecucion '}'  (42)
	sentenciaIf : IF '(' expresion comparador expresion ')' '{' . bloque_ejecucion '}' END_IF  (43)
	sentenciaIf : IF '(' expresion comparador expresion ')' '{' . bloque_ejecucion '}'  (44)

	ID  shift 52
	IF  shift 3
	PRINT  shift 4
	WHILE  shift 9
	.  error

	sentenciaEjecutable  goto 155
	referenciaClase  goto 17
	asignacion  goto 18
	invocacionMetodo  goto 19
	sentenciaIf  goto 21
	sentenciaWhile  goto 22
	print  goto 23
	bloque_ejecucion  goto 156


state 139
	sentenciaIf : IF '(' expresion comparador expresion ')' ',' . END_IF  (47)

	END_IF  shift 157
	.  error


state 140
	sentenciaIf : IF '(' expresion comparador expresion ')' sentenciaEjecutable . ',' ELSE sentenciaEjecutable ',' END_IF  (45)
	sentenciaIf : IF '(' expresion comparador expresion ')' sentenciaEjecutable . ',' END_IF  (46)

	','  shift 158
	.  error


state 141
	listaSentenciasMetodo : sentenciaEjecutable ',' .  (65)

	.  reduce 65


state 142
	sentenciaDeclarativaMetodo : declaracion ',' .  (38)

	.  reduce 38


state 143
	return : RETURN . ','  (54)

	','  shift 159
	.  error


state 144
	declaracionFuncion : VOID ID '(' ')' '{' cuerpoMetodo '}' .  (60)

	.  reduce 60


state 145
	declaracionFuncion : VOID ID '(' ')' '{' cuerpoMetodo return . '}'  (59)

	'}'  shift 160
	.  error


state 146
	listaSentenciasMetodo : listaSentenciasMetodo sentenciaEjecutable . ','  (63)

	','  shift 161
	.  error


state 147
	listaSentenciasMetodo : listaSentenciasMetodo sentenciaDeclarativaMetodo .  (62)

	.  reduce 62


state 148
	declaracionFuncion : VOID ID '(' tipo ID ')' '{' . cuerpoMetodo return '}'  (57)
	declaracionFuncion : VOID ID '(' tipo ID ')' '{' . cuerpoMetodo '}'  (58)

	ID  shift 1
	IF  shift 3
	PRINT  shift 4
	VOID  shift 5
	SHORT  shift 6
	ULONG  shift 7
	FLOAT  shift 8
	WHILE  shift 9
	.  error

	sentenciaEjecutable  goto 125
	referenciaClase  goto 17
	asignacion  goto 18
	invocacionMetodo  goto 19
	tipo  goto 20
	sentenciaIf  goto 21
	sentenciaWhile  goto 22
	print  goto 23
	declaracionFuncion  goto 126
	declaracion  goto 127
	sentenciaDeclarativaMetodo  goto 128
	cuerpoMetodo  goto 162
	listaSentenciasMetodo  goto 130


state 149
	sentenciaWhile : WHILE '(' expresion comparador ')' DO '{' . bloque_ejecucion '}'  (52)

	ID  shift 52
	IF  shift 3
	PRINT  shift 4
	WHILE  shift 9
	.  error

	sentenciaEjecutable  goto 155
	referenciaClase  goto 17
	asignacion  goto 18
	invocacionMetodo  goto 19
	sentenciaIf  goto 21
	sentenciaWhile  goto 22
	print  goto 23
	bloque_ejecucion  goto 163


state 150
	sentenciaWhile : WHILE '(' expresion comparador expresion ')' DO . '{' bloque_ejecucion '}'  (50)
	sentenciaWhile : WHILE '(' expresion comparador expresion ')' DO . sentenciaEjecutable  (51)

	ID  shift 52
	IF  shift 3
	PRINT  shift 4
	WHILE  shift 9
	'{'  shift 164
	.  error

	sentenciaEjecutable  goto 165
	referenciaClase  goto 17
	asignacion  goto 18
	invocacionMetodo  goto 19
	sentenciaIf  goto 21
	sentenciaWhile  goto 22
	print  goto 23


state 151
	declaracionMetodo : VOID ID '(' ')' '{' . cuerpoMetodo '}'  (56)

	ID  shift 1
	IF  shift 3
	PRINT  shift 4
	VOID  shift 5
	SHORT  shift 6
	ULONG  shift 7
	FLOAT  shift 8
	WHILE  shift 9
	.  error

	sentenciaEjecutable  goto 125
	referenciaClase  goto 17
	asignacion  goto 18
	invocacionMetodo  goto 19
	tipo  goto 20
	sentenciaIf  goto 21
	sentenciaWhile  goto 22
	print  goto 23
	declaracionFuncion  goto 126
	declaracion  goto 127
	sentenciaDeclarativaMetodo  goto 128
	cuerpoMetodo  goto 166
	listaSentenciasMetodo  goto 130


state 152
	declaracionMetodo : VOID ID '(' tipo ID . ')' '{' cuerpoMetodo '}'  (55)

	')'  shift 167
	.  error


state 153
	listaAtributos : ID ',' .  (26)

	.  reduce 26


state 154
	listaAtributos : ID ';' . listaAtributos  (25)

	ID  shift 136
	.  error

	listaAtributos  goto 168


state 155
	bloque_ejecucion : sentenciaEjecutable . ','  (49)

	','  shift 169
	.  error


state 156
	sentenciaIf : IF '(' expresion comparador expresion ')' '{' bloque_ejecucion . '}' ELSE '{' bloque_ejecucion '}' END_IF  (41)
	sentenciaIf : IF '(' expresion comparador expresion ')' '{' bloque_ejecucion . '}' ELSE '{' bloque_ejecucion '}'  (42)
	sentenciaIf : IF '(' expresion comparador expresion ')' '{' bloque_ejecucion . '}' END_IF  (43)
	sentenciaIf : IF '(' expresion comparador expresion ')' '{' bloque_ejecucion . '}'  (44)
	bloque_ejecucion : bloque_ejecucion . sentenciaEjecutable ','  (48)

	ID  shift 52
	IF  shift 3
	PRINT  shift 4
	WHILE  shift 9
	'}'  shift 170
	.  error

	sentenciaEjecutable  goto 171
	referenciaClase  goto 17
	asignacion  goto 18
	invocacionMetodo  goto 19
	sentenciaIf  goto 21
	sentenciaWhile  goto 22
	print  goto 23


state 157
	sentenciaIf : IF '(' expresion comparador expresion ')' ',' END_IF .  (47)

	.  reduce 47


state 158
	sentenciaIf : IF '(' expresion comparador expresion ')' sentenciaEjecutable ',' . ELSE sentenciaEjecutable ',' END_IF  (45)
	sentenciaIf : IF '(' expresion comparador expresion ')' sentenciaEjecutable ',' . END_IF  (46)

	ELSE  shift 172
	END_IF  shift 173
	.  error


state 159
	return : RETURN ',' .  (54)

	.  reduce 54


state 160
	declaracionFuncion : VOID ID '(' ')' '{' cuerpoMetodo return '}' .  (59)

	.  reduce 59


state 161
	listaSentenciasMetodo : listaSentenciasMetodo sentenciaEjecutable ',' .  (63)

	.  reduce 63


state 162
	declaracionFuncion : VOID ID '(' tipo ID ')' '{' cuerpoMetodo . return '}'  (57)
	declaracionFuncion : VOID ID '(' tipo ID ')' '{' cuerpoMetodo . '}'  (58)

	RETURN  shift 143
	'}'  shift 174
	.  error

	return  goto 175


state 163
	bloque_ejecucion : bloque_ejecucion . sentenciaEjecutable ','  (48)
	sentenciaWhile : WHILE '(' expresion comparador ')' DO '{' bloque_ejecucion . '}'  (52)

	ID  shift 52
	IF  shift 3
	PRINT  shift 4
	WHILE  shift 9
	'}'  shift 176
	.  error

	sentenciaEjecutable  goto 171
	referenciaClase  goto 17
	asignacion  goto 18
	invocacionMetodo  goto 19
	sentenciaIf  goto 21
	sentenciaWhile  goto 22
	print  goto 23


state 164
	sentenciaWhile : WHILE '(' expresion comparador expresion ')' DO '{' . bloque_ejecucion '}'  (50)

	ID  shift 52
	IF  shift 3
	PRINT  shift 4
	WHILE  shift 9
	.  error

	sentenciaEjecutable  goto 155
	referenciaClase  goto 17
	asignacion  goto 18
	invocacionMetodo  goto 19
	sentenciaIf  goto 21
	sentenciaWhile  goto 22
	print  goto 23
	bloque_ejecucion  goto 177


state 165
	sentenciaWhile : WHILE '(' expresion comparador expresion ')' DO sentenciaEjecutable .  (51)

	.  reduce 51


state 166
	declaracionMetodo : VOID ID '(' ')' '{' cuerpoMetodo . '}'  (56)

	'}'  shift 178
	.  error


state 167
	declaracionMetodo : VOID ID '(' tipo ID ')' . '{' cuerpoMetodo '}'  (55)

	'{'  shift 179
	.  error


state 168
	listaAtributos : ID ';' listaAtributos .  (25)

	.  reduce 25


state 169
	bloque_ejecucion : sentenciaEjecutable ',' .  (49)

	.  reduce 49


state 170
	sentenciaIf : IF '(' expresion comparador expresion ')' '{' bloque_ejecucion '}' . ELSE '{' bloque_ejecucion '}' END_IF  (41)
	sentenciaIf : IF '(' expresion comparador expresion ')' '{' bloque_ejecucion '}' . ELSE '{' bloque_ejecucion '}'  (42)
	sentenciaIf : IF '(' expresion comparador expresion ')' '{' bloque_ejecucion '}' . END_IF  (43)
	sentenciaIf : IF '(' expresion comparador expresion ')' '{' bloque_ejecucion '}' .  (44)

	ELSE  shift 180
	END_IF  shift 181
	','  reduce 44


state 171
	bloque_ejecucion : bloque_ejecucion sentenciaEjecutable . ','  (48)

	','  shift 182
	.  error


state 172
	sentenciaIf : IF '(' expresion comparador expresion ')' sentenciaEjecutable ',' ELSE . sentenciaEjecutable ',' END_IF  (45)

	ID  shift 52
	IF  shift 3
	PRINT  shift 4
	WHILE  shift 9
	.  error

	sentenciaEjecutable  goto 183
	referenciaClase  goto 17
	asignacion  goto 18
	invocacionMetodo  goto 19
	sentenciaIf  goto 21
	sentenciaWhile  goto 22
	print  goto 23


state 173
	sentenciaIf : IF '(' expresion comparador expresion ')' sentenciaEjecutable ',' END_IF .  (46)

	.  reduce 46


state 174
	declaracionFuncion : VOID ID '(' tipo ID ')' '{' cuerpoMetodo '}' .  (58)

	.  reduce 58


state 175
	declaracionFuncion : VOID ID '(' tipo ID ')' '{' cuerpoMetodo return . '}'  (57)

	'}'  shift 184
	.  error


state 176
	sentenciaWhile : WHILE '(' expresion comparador ')' DO '{' bloque_ejecucion '}' .  (52)

	.  reduce 52


state 177
	bloque_ejecucion : bloque_ejecucion . sentenciaEjecutable ','  (48)
	sentenciaWhile : WHILE '(' expresion comparador expresion ')' DO '{' bloque_ejecucion . '}'  (50)

	ID  shift 52
	IF  shift 3
	PRINT  shift 4
	WHILE  shift 9
	'}'  shift 185
	.  error

	sentenciaEjecutable  goto 171
	referenciaClase  goto 17
	asignacion  goto 18
	invocacionMetodo  goto 19
	sentenciaIf  goto 21
	sentenciaWhile  goto 22
	print  goto 23


state 178
	declaracionMetodo : VOID ID '(' ')' '{' cuerpoMetodo '}' .  (56)

	.  reduce 56


state 179
	declaracionMetodo : VOID ID '(' tipo ID ')' '{' . cuerpoMetodo '}'  (55)

	ID  shift 1
	IF  shift 3
	PRINT  shift 4
	VOID  shift 5
	SHORT  shift 6
	ULONG  shift 7
	FLOAT  shift 8
	WHILE  shift 9
	.  error

	sentenciaEjecutable  goto 125
	referenciaClase  goto 17
	asignacion  goto 18
	invocacionMetodo  goto 19
	tipo  goto 20
	sentenciaIf  goto 21
	sentenciaWhile  goto 22
	print  goto 23
	declaracionFuncion  goto 126
	declaracion  goto 127
	sentenciaDeclarativaMetodo  goto 128
	cuerpoMetodo  goto 186
	listaSentenciasMetodo  goto 130


state 180
	sentenciaIf : IF '(' expresion comparador expresion ')' '{' bloque_ejecucion '}' ELSE . '{' bloque_ejecucion '}' END_IF  (41)
	sentenciaIf : IF '(' expresion comparador expresion ')' '{' bloque_ejecucion '}' ELSE . '{' bloque_ejecucion '}'  (42)

	'{'  shift 187
	.  error


state 181
	sentenciaIf : IF '(' expresion comparador expresion ')' '{' bloque_ejecucion '}' END_IF .  (43)

	.  reduce 43


state 182
	bloque_ejecucion : bloque_ejecucion sentenciaEjecutable ',' .  (48)

	.  reduce 48


state 183
	sentenciaIf : IF '(' expresion comparador expresion ')' sentenciaEjecutable ',' ELSE sentenciaEjecutable . ',' END_IF  (45)

	','  shift 188
	.  error


state 184
	declaracionFuncion : VOID ID '(' tipo ID ')' '{' cuerpoMetodo return '}' .  (57)

	.  reduce 57


state 185
	sentenciaWhile : WHILE '(' expresion comparador expresion ')' DO '{' bloque_ejecucion '}' .  (50)

	.  reduce 50


state 186
	declaracionMetodo : VOID ID '(' tipo ID ')' '{' cuerpoMetodo . '}'  (55)

	'}'  shift 189
	.  error


state 187
	sentenciaIf : IF '(' expresion comparador expresion ')' '{' bloque_ejecucion '}' ELSE '{' . bloque_ejecucion '}' END_IF  (41)
	sentenciaIf : IF '(' expresion comparador expresion ')' '{' bloque_ejecucion '}' ELSE '{' . bloque_ejecucion '}'  (42)

	ID  shift 52
	IF  shift 3
	PRINT  shift 4
	WHILE  shift 9
	.  error

	sentenciaEjecutable  goto 155
	referenciaClase  goto 17
	asignacion  goto 18
	invocacionMetodo  goto 19
	sentenciaIf  goto 21
	sentenciaWhile  goto 22
	print  goto 23
	bloque_ejecucion  goto 190


state 188
	sentenciaIf : IF '(' expresion comparador expresion ')' sentenciaEjecutable ',' ELSE sentenciaEjecutable ',' . END_IF  (45)

	END_IF  shift 191
	.  error


state 189
	declaracionMetodo : VOID ID '(' tipo ID ')' '{' cuerpoMetodo '}' .  (55)

	.  reduce 55


state 190
	sentenciaIf : IF '(' expresion comparador expresion ')' '{' bloque_ejecucion '}' ELSE '{' bloque_ejecucion . '}' END_IF  (41)
	sentenciaIf : IF '(' expresion comparador expresion ')' '{' bloque_ejecucion '}' ELSE '{' bloque_ejecucion . '}'  (42)
	bloque_ejecucion : bloque_ejecucion . sentenciaEjecutable ','  (48)

	ID  shift 52
	IF  shift 3
	PRINT  shift 4
	WHILE  shift 9
	'}'  shift 192
	.  error

	sentenciaEjecutable  goto 171
	referenciaClase  goto 17
	asignacion  goto 18
	invocacionMetodo  goto 19
	sentenciaIf  goto 21
	sentenciaWhile  goto 22
	print  goto 23


state 191
	sentenciaIf : IF '(' expresion comparador expresion ')' sentenciaEjecutable ',' ELSE sentenciaEjecutable ',' END_IF .  (45)

	.  reduce 45


state 192
	sentenciaIf : IF '(' expresion comparador expresion ')' '{' bloque_ejecucion '}' ELSE '{' bloque_ejecucion '}' . END_IF  (41)
	sentenciaIf : IF '(' expresion comparador expresion ')' '{' bloque_ejecucion '}' ELSE '{' bloque_ejecucion '}' .  (42)

	END_IF  shift 193
	','  reduce 42


state 193
	sentenciaIf : IF '(' expresion comparador expresion ')' '{' bloque_ejecucion '}' ELSE '{' bloque_ejecucion '}' END_IF .  (41)

	.  reduce 41


36 terminals, 31 nonterminals
96 grammar rules, 194 states
