{
    CLASS manejador{
        SHORT clientes;cuotas,
        VOID paga_cuotas (SHORT cant)
        {
            **FUNCION LOCAL A METODO
            VOID cliente_menos()
            {
                clientes = clientes - 1_s,
                RETURN,
            }

            VOID cliente_mas()                                      **ERROR: MAS DE 1 FUNCION LOCAL EN METODO
            {
                clientes = clientes + 1_s,
                RETURN,
            }

            IF (cant > 4_s)
                cliente_menos(),
            END_IF,
        },
    }

    CLASS objeto{
        SHORT id;cant,

        VOID print_tipo(){ PRINT %OBJETO CREADO%, },

        VOID set_cant(SHORT x){ cant = x, },
    }

    CLASS mueble
    {
        SHORT id,
        objeto,                                             **ERROR: SOBREESCRITURA DE ATRIBUTO
        FLOAT porciento_uso,

        VOID set_uso(FLOAT u){ porciento_uso = u, },
    }

    CLASS silla{
        mueble,                                             **HERENCIA (NIVEL 2)

        VOID print_tipo()
        {
            PRINT %OBJETO CREADO: SILLA%,
        },
    }

    CLASS sillon{
        ULONG ancho,
        silla,                                             **ERROR: HERENCIA (NIVEL 3 - SUPERADO EL MAXIMO)
    }

    CLASS sillon{
        SHORT h,                                            **ERROR: Clase ya declarada en el ambito
    }

    CLASS cn{
        SHORT l,
        VOID n() { l = 0_s, },
    }

    CLASS ca {
        cn,
        SHORT x,
        VOID m() { x=0_s, },
    }

    CLASS cc,

    CLASS cd {
        cc c1,
        ca a1,
        VOID j() {
            c1.p(),         **Error: clase no definida aun
            a1.cn.n(),      **Invocaci√≥n correcta
        },
    }

    CLASS cc {                          **forward declaration para clase cc
        SHORT z,
        VOID p() {
            z = 0_s,
        },
    }
}