   0  $accept : programa $end

   1  programa : '{' cuerpoPrograma '}'
   2           | '{' '}'
   3           | cuerpoPrograma '}'
   4           | '{' cuerpoPrograma

   5  cuerpoPrograma : listaSentencias

   6  listaSentencias : listaSentencias sentenciaDeclarativa
   7                  | listaSentencias sentenciaEjecutable ','
   8                  | sentenciaDeclarativa
   9                  | sentenciaEjecutable ','

  10  declaracionClase : CLASS ID '{' cuerpoClase '}'
  11                   | CLASS ID ','
  12                   | CLASS ID

  13  cuerpoClase : seccionClase

  14  seccionClase : seccionClase seccionAtributos
  15               | seccionClase declaracionMetodo ','
  16               | declaracionMetodo ','
  17               | seccionAtributos

  18  referenciaClase : ID '.' referenciaClase
  19                  | ID '.' asignacion
  20                  | ID '.' invocacionMetodo

  21  seccionAtributos : tipo ID ';' listaAtributos
  22                   | ID ','
  23                   | tipo ID ','
  24                   | tipo ID

  25  listaAtributos : ID ';' listaAtributos
  26                 | ID ','
  27                 | ID

  28  sentenciaEjecutable : asignacion
  29                      | sentenciaIf
  30                      | sentenciaWhile
  31                      | print
  32                      | invocacionMetodo
  33                      | referenciaClase

  34  sentenciaDeclarativa : declaracionFuncion
  35                       | declaracion ','
  36                       | declaracionClase

  37  sentenciaDeclarativaMetodo : declaracionFuncion
  38                             | declaracion ','

  39  asignacion : ID '=' expresion
  40             | ID IGUAL expresion

  41  sentenciaIf : IF '(' expresion comparador expresion ')' '{' bloque_ejecucion '}' ELSE '{' bloque_ejecucion '}' END_IF
  42              | IF '(' expresion comparador expresion ')' '{' bloque_ejecucion '}' ELSE '{' bloque_ejecucion '}'
  43              | IF '(' expresion comparador expresion ')' '{' bloque_ejecucion '}' END_IF
  44              | IF '(' expresion comparador expresion ')' '{' bloque_ejecucion '}'
  45              | IF '(' expresion comparador expresion ')' sentenciaEjecutable ',' ELSE sentenciaEjecutable ',' END_IF
  46              | IF '(' expresion comparador expresion ')' sentenciaEjecutable ',' ELSE '{' bloque_ejecucion '}' END_IF
  47              | IF '(' expresion comparador expresion ')' sentenciaEjecutable ',' END_IF

  48  sentenciaIfRetorno : IF '(' expresion comparador expresion ')' '{' bloque_ejecucion return '}' ELSE '{' bloque_ejecucion return ',' '}' END_IF
  49                     | IF '(' expresion comparador expresion ')' '{' bloque_ejecucion return '}' ELSE '{' bloque_ejecucion return ',' '}'
  50                     | IF '(' expresion comparador expresion ')' '{' bloque_ejecucion return '}' END_IF
  51                     | IF '(' expresion comparador expresion ')' '{' bloque_ejecucion return '}'
  52                     | IF '(' expresion comparador expresion ')' return ',' ELSE sentenciaEjecutable ',' END_IF
  53                     | IF '(' expresion comparador expresion ')' return ',' ELSE '{' bloque_ejecucion return ',' '}' END_IF
  54                     | IF '(' expresion comparador expresion ')' return ',' END_IF

  55  bloque_ejecucion : bloque_ejecucion sentenciaEjecutable ','
  56                   | sentenciaEjecutable ','
  57                   | sentenciaDeclarativa

  58  sentenciaWhile : WHILE '(' expresion comparador expresion ')' DO '{' bloque_ejecucion '}'
  59                 | WHILE '(' expresion comparador expresion ')' DO sentenciaEjecutable
  60                 | WHILE '(' expresion comparador ')' DO '{' bloque_ejecucion '}'
  61                 | WHILE '(' expresion comparador ')' DO sentenciaEjecutable

  62  print : PRINT CADENA
  63        | CADENA

  64  return : RETURN

  65  declaracionMetodo : VOID ID '(' tipo ID ')' '{' cuerpoMetodo '}'
  66                    | VOID ID '(' ')' '{' cuerpoMetodo '}'

  67  declaracionFuncion : VOID ID '(' tipo ID ')' '{' cuerpoMetodo '}'
  68                     | VOID ID '(' ID ')' '{' cuerpoMetodo '}'
  69                     | VOID ID '(' ')' '{' cuerpoMetodo '}'

  70  cuerpoMetodo : listaSentenciasMetodo return ','
  71               | sentenciaIfRetorno ',' listaSentenciasMetodo
  72               | listaSentenciasMetodo sentenciaIfRetorno ','
  73               | listaSentenciasMetodo
  74               | sentenciaIfRetorno ','

  75  listaSentenciasMetodo : listaSentenciasMetodo sentenciaDeclarativaMetodo
  76                        | listaSentenciasMetodo sentenciaEjecutable ','
  77                        | sentenciaDeclarativaMetodo
  78                        | sentenciaEjecutable ','

  79  invocacionMetodo : ID '(' expresion ')'
  80                   | ID '(' ')'
  81                   | ID '(' asignacion ')'
  82                   | ID '(' tipo asignacion ')'

  83  declaracion : tipo listaDeclaracion
  84              | tipo asignacion

  85  listaDeclaracion : ID ';' listaDeclaracion
  86                   | ID

  87  tipo : SHORT
  88       | ULONG
  89       | FLOAT
  90       | ID

  91  expresion : termino
  92            | expresion '+' termino
  93            | expresion '-' termino

  94  termino : factor
  95          | termino '*' factor
  96          | termino '/' factor

  97  factor : ID
  98         | ID MENOSMENOS
  99         | CTE
 100         | '-' CTE
 101         | '(' expresion ')'

 102  comparador : MAYORIGUAL
 103             | MENORIGUAL
 104             | IGUAL
 105             | DISTINTO
 106             | '<'
 107             | '>'
 108             | '='

state 0
	$accept : . programa $end  (0)

	ID  shift 1
	CADENA  shift 2
	CLASS  shift 3
	IF  shift 4
	PRINT  shift 5
	VOID  shift 6
	SHORT  shift 7
	ULONG  shift 8
	FLOAT  shift 9
	WHILE  shift 10
	'{'  shift 11
	.  error

	programa  goto 12
	cuerpoPrograma  goto 13
	listaSentencias  goto 14
	sentenciaDeclarativa  goto 15
	sentenciaEjecutable  goto 16
	declaracionClase  goto 17
	referenciaClase  goto 18
	asignacion  goto 19
	invocacionMetodo  goto 20
	tipo  goto 21
	sentenciaIf  goto 22
	sentenciaWhile  goto 23
	print  goto 24
	declaracionFuncion  goto 25
	declaracion  goto 26


state 1
	referenciaClase : ID . '.' referenciaClase  (18)
	referenciaClase : ID . '.' asignacion  (19)
	referenciaClase : ID . '.' invocacionMetodo  (20)
	asignacion : ID . '=' expresion  (39)
	asignacion : ID . IGUAL expresion  (40)
	invocacionMetodo : ID . '(' expresion ')'  (79)
	invocacionMetodo : ID . '(' ')'  (80)
	invocacionMetodo : ID . '(' asignacion ')'  (81)
	invocacionMetodo : ID . '(' tipo asignacion ')'  (82)
	tipo : ID .  (90)

	IGUAL  shift 27
	'.'  shift 28
	'='  shift 29
	'('  shift 30
	ID  reduce 90


state 2
	print : CADENA .  (63)

	.  reduce 63


state 3
	declaracionClase : CLASS . ID '{' cuerpoClase '}'  (10)
	declaracionClase : CLASS . ID ','  (11)
	declaracionClase : CLASS . ID  (12)

	ID  shift 31
	.  error


state 4
	sentenciaIf : IF . '(' expresion comparador expresion ')' '{' bloque_ejecucion '}' ELSE '{' bloque_ejecucion '}' END_IF  (41)
	sentenciaIf : IF . '(' expresion comparador expresion ')' '{' bloque_ejecucion '}' ELSE '{' bloque_ejecucion '}'  (42)
	sentenciaIf : IF . '(' expresion comparador expresion ')' '{' bloque_ejecucion '}' END_IF  (43)
	sentenciaIf : IF . '(' expresion comparador expresion ')' '{' bloque_ejecucion '}'  (44)
	sentenciaIf : IF . '(' expresion comparador expresion ')' sentenciaEjecutable ',' ELSE sentenciaEjecutable ',' END_IF  (45)
	sentenciaIf : IF . '(' expresion comparador expresion ')' sentenciaEjecutable ',' ELSE '{' bloque_ejecucion '}' END_IF  (46)
	sentenciaIf : IF . '(' expresion comparador expresion ')' sentenciaEjecutable ',' END_IF  (47)

	'('  shift 32
	.  error


state 5
	print : PRINT . CADENA  (62)

	CADENA  shift 33
	.  error


state 6
	declaracionFuncion : VOID . ID '(' tipo ID ')' '{' cuerpoMetodo '}'  (67)
	declaracionFuncion : VOID . ID '(' ID ')' '{' cuerpoMetodo '}'  (68)
	declaracionFuncion : VOID . ID '(' ')' '{' cuerpoMetodo '}'  (69)

	ID  shift 34
	.  error


state 7
	tipo : SHORT .  (87)

	.  reduce 87


state 8
	tipo : ULONG .  (88)

	.  reduce 88


state 9
	tipo : FLOAT .  (89)

	.  reduce 89


state 10
	sentenciaWhile : WHILE . '(' expresion comparador expresion ')' DO '{' bloque_ejecucion '}'  (58)
	sentenciaWhile : WHILE . '(' expresion comparador expresion ')' DO sentenciaEjecutable  (59)
	sentenciaWhile : WHILE . '(' expresion comparador ')' DO '{' bloque_ejecucion '}'  (60)
	sentenciaWhile : WHILE . '(' expresion comparador ')' DO sentenciaEjecutable  (61)

	'('  shift 35
	.  error


state 11
	programa : '{' . cuerpoPrograma '}'  (1)
	programa : '{' . '}'  (2)
	programa : '{' . cuerpoPrograma  (4)

	ID  shift 1
	CADENA  shift 2
	CLASS  shift 3
	IF  shift 4
	PRINT  shift 5
	VOID  shift 6
	SHORT  shift 7
	ULONG  shift 8
	FLOAT  shift 9
	WHILE  shift 10
	'}'  shift 36
	.  error

	cuerpoPrograma  goto 37
	listaSentencias  goto 14
	sentenciaDeclarativa  goto 15
	sentenciaEjecutable  goto 16
	declaracionClase  goto 17
	referenciaClase  goto 18
	asignacion  goto 19
	invocacionMetodo  goto 20
	tipo  goto 21
	sentenciaIf  goto 22
	sentenciaWhile  goto 23
	print  goto 24
	declaracionFuncion  goto 25
	declaracion  goto 26


state 12
	$accept : programa . $end  (0)

	$end  accept


state 13
	programa : cuerpoPrograma . '}'  (3)

	'}'  shift 38
	.  error


state 14
	cuerpoPrograma : listaSentencias .  (5)
	listaSentencias : listaSentencias . sentenciaDeclarativa  (6)
	listaSentencias : listaSentencias . sentenciaEjecutable ','  (7)

	ID  shift 1
	CADENA  shift 2
	CLASS  shift 3
	IF  shift 4
	PRINT  shift 5
	VOID  shift 6
	SHORT  shift 7
	ULONG  shift 8
	FLOAT  shift 9
	WHILE  shift 10
	$end  reduce 5
	'}'  reduce 5

	sentenciaDeclarativa  goto 39
	sentenciaEjecutable  goto 40
	declaracionClase  goto 17
	referenciaClase  goto 18
	asignacion  goto 19
	invocacionMetodo  goto 20
	tipo  goto 21
	sentenciaIf  goto 22
	sentenciaWhile  goto 23
	print  goto 24
	declaracionFuncion  goto 25
	declaracion  goto 26


state 15
	listaSentencias : sentenciaDeclarativa .  (8)

	.  reduce 8


state 16
	listaSentencias : sentenciaEjecutable . ','  (9)

	','  shift 41
	.  error


state 17
	sentenciaDeclarativa : declaracionClase .  (36)

	.  reduce 36


state 18
	sentenciaEjecutable : referenciaClase .  (33)

	.  reduce 33


state 19
	sentenciaEjecutable : asignacion .  (28)

	.  reduce 28


state 20
	sentenciaEjecutable : invocacionMetodo .  (32)

	.  reduce 32


state 21
	declaracion : tipo . listaDeclaracion  (83)
	declaracion : tipo . asignacion  (84)

	ID  shift 42
	.  error

	asignacion  goto 43
	listaDeclaracion  goto 44


state 22
	sentenciaEjecutable : sentenciaIf .  (29)

	.  reduce 29


state 23
	sentenciaEjecutable : sentenciaWhile .  (30)

	.  reduce 30


state 24
	sentenciaEjecutable : print .  (31)

	.  reduce 31


state 25
	sentenciaDeclarativa : declaracionFuncion .  (34)

	.  reduce 34


state 26
	sentenciaDeclarativa : declaracion . ','  (35)

	','  shift 45
	.  error


state 27
	asignacion : ID IGUAL . expresion  (40)

	ID  shift 46
	CTE  shift 47
	'-'  shift 48
	'('  shift 49
	.  error

	expresion  goto 50
	termino  goto 51
	factor  goto 52


state 28
	referenciaClase : ID '.' . referenciaClase  (18)
	referenciaClase : ID '.' . asignacion  (19)
	referenciaClase : ID '.' . invocacionMetodo  (20)

	ID  shift 53
	.  error

	referenciaClase  goto 54
	asignacion  goto 55
	invocacionMetodo  goto 56


state 29
	asignacion : ID '=' . expresion  (39)

	ID  shift 46
	CTE  shift 47
	'-'  shift 48
	'('  shift 49
	.  error

	expresion  goto 57
	termino  goto 51
	factor  goto 52


state 30
	invocacionMetodo : ID '(' . expresion ')'  (79)
	invocacionMetodo : ID '(' . ')'  (80)
	invocacionMetodo : ID '(' . asignacion ')'  (81)
	invocacionMetodo : ID '(' . tipo asignacion ')'  (82)

	ID  shift 58
	CTE  shift 47
	SHORT  shift 7
	ULONG  shift 8
	FLOAT  shift 9
	'-'  shift 48
	'('  shift 49
	')'  shift 59
	.  error

	asignacion  goto 60
	tipo  goto 61
	expresion  goto 62
	termino  goto 51
	factor  goto 52


state 31
	declaracionClase : CLASS ID . '{' cuerpoClase '}'  (10)
	declaracionClase : CLASS ID . ','  (11)
	declaracionClase : CLASS ID .  (12)

	'{'  shift 63
	','  shift 64
	$end  reduce 12
	ID  reduce 12
	CADENA  reduce 12
	CLASS  reduce 12
	IF  reduce 12
	PRINT  reduce 12
	VOID  reduce 12
	SHORT  reduce 12
	ULONG  reduce 12
	FLOAT  reduce 12
	WHILE  reduce 12
	RETURN  reduce 12
	'}'  reduce 12


state 32
	sentenciaIf : IF '(' . expresion comparador expresion ')' '{' bloque_ejecucion '}' ELSE '{' bloque_ejecucion '}' END_IF  (41)
	sentenciaIf : IF '(' . expresion comparador expresion ')' '{' bloque_ejecucion '}' ELSE '{' bloque_ejecucion '}'  (42)
	sentenciaIf : IF '(' . expresion comparador expresion ')' '{' bloque_ejecucion '}' END_IF  (43)
	sentenciaIf : IF '(' . expresion comparador expresion ')' '{' bloque_ejecucion '}'  (44)
	sentenciaIf : IF '(' . expresion comparador expresion ')' sentenciaEjecutable ',' ELSE sentenciaEjecutable ',' END_IF  (45)
	sentenciaIf : IF '(' . expresion comparador expresion ')' sentenciaEjecutable ',' ELSE '{' bloque_ejecucion '}' END_IF  (46)
	sentenciaIf : IF '(' . expresion comparador expresion ')' sentenciaEjecutable ',' END_IF  (47)

	ID  shift 46
	CTE  shift 47
	'-'  shift 48
	'('  shift 49
	.  error

	expresion  goto 65
	termino  goto 51
	factor  goto 52


state 33
	print : PRINT CADENA .  (62)

	.  reduce 62


state 34
	declaracionFuncion : VOID ID . '(' tipo ID ')' '{' cuerpoMetodo '}'  (67)
	declaracionFuncion : VOID ID . '(' ID ')' '{' cuerpoMetodo '}'  (68)
	declaracionFuncion : VOID ID . '(' ')' '{' cuerpoMetodo '}'  (69)

	'('  shift 66
	.  error


state 35
	sentenciaWhile : WHILE '(' . expresion comparador expresion ')' DO '{' bloque_ejecucion '}'  (58)
	sentenciaWhile : WHILE '(' . expresion comparador expresion ')' DO sentenciaEjecutable  (59)
	sentenciaWhile : WHILE '(' . expresion comparador ')' DO '{' bloque_ejecucion '}'  (60)
	sentenciaWhile : WHILE '(' . expresion comparador ')' DO sentenciaEjecutable  (61)

	ID  shift 46
	CTE  shift 47
	'-'  shift 48
	'('  shift 49
	.  error

	expresion  goto 67
	termino  goto 51
	factor  goto 52


state 36
	programa : '{' '}' .  (2)

	.  reduce 2


state 37
	programa : '{' cuerpoPrograma . '}'  (1)
	programa : '{' cuerpoPrograma .  (4)

	'}'  shift 68
	$end  reduce 4


state 38
	programa : cuerpoPrograma '}' .  (3)

	.  reduce 3


state 39
	listaSentencias : listaSentencias sentenciaDeclarativa .  (6)

	.  reduce 6


state 40
	listaSentencias : listaSentencias sentenciaEjecutable . ','  (7)

	','  shift 69
	.  error


state 41
	listaSentencias : sentenciaEjecutable ',' .  (9)

	.  reduce 9


state 42
	asignacion : ID . '=' expresion  (39)
	asignacion : ID . IGUAL expresion  (40)
	listaDeclaracion : ID . ';' listaDeclaracion  (85)
	listaDeclaracion : ID .  (86)

	IGUAL  shift 27
	';'  shift 70
	'='  shift 29
	','  reduce 86


state 43
	declaracion : tipo asignacion .  (84)

	.  reduce 84


state 44
	declaracion : tipo listaDeclaracion .  (83)

	.  reduce 83


state 45
	sentenciaDeclarativa : declaracion ',' .  (35)

	.  reduce 35


state 46
	factor : ID .  (97)
	factor : ID . MENOSMENOS  (98)

	MENOSMENOS  shift 71
	MAYORIGUAL  reduce 97
	MENORIGUAL  reduce 97
	IGUAL  reduce 97
	DISTINTO  reduce 97
	'+'  reduce 97
	'-'  reduce 97
	'*'  reduce 97
	'/'  reduce 97
	','  reduce 97
	'='  reduce 97
	')'  reduce 97
	'<'  reduce 97
	'>'  reduce 97


state 47
	factor : CTE .  (99)

	.  reduce 99


state 48
	factor : '-' . CTE  (100)

	CTE  shift 72
	.  error


state 49
	factor : '(' . expresion ')'  (101)

	ID  shift 46
	CTE  shift 47
	'-'  shift 48
	'('  shift 49
	.  error

	expresion  goto 73
	termino  goto 51
	factor  goto 52


state 50
	asignacion : ID IGUAL expresion .  (40)
	expresion : expresion . '+' termino  (92)
	expresion : expresion . '-' termino  (93)

	'+'  shift 74
	'-'  shift 75
	','  reduce 40
	')'  reduce 40


state 51
	expresion : termino .  (91)
	termino : termino . '*' factor  (95)
	termino : termino . '/' factor  (96)

	'*'  shift 76
	'/'  shift 77
	MAYORIGUAL  reduce 91
	MENORIGUAL  reduce 91
	IGUAL  reduce 91
	DISTINTO  reduce 91
	'+'  reduce 91
	'-'  reduce 91
	','  reduce 91
	'='  reduce 91
	')'  reduce 91
	'<'  reduce 91
	'>'  reduce 91


state 52
	termino : factor .  (94)

	.  reduce 94


state 53
	referenciaClase : ID . '.' referenciaClase  (18)
	referenciaClase : ID . '.' asignacion  (19)
	referenciaClase : ID . '.' invocacionMetodo  (20)
	asignacion : ID . '=' expresion  (39)
	asignacion : ID . IGUAL expresion  (40)
	invocacionMetodo : ID . '(' expresion ')'  (79)
	invocacionMetodo : ID . '(' ')'  (80)
	invocacionMetodo : ID . '(' asignacion ')'  (81)
	invocacionMetodo : ID . '(' tipo asignacion ')'  (82)

	IGUAL  shift 27
	'.'  shift 28
	'='  shift 29
	'('  shift 30
	.  error


state 54
	referenciaClase : ID '.' referenciaClase .  (18)

	.  reduce 18


state 55
	referenciaClase : ID '.' asignacion .  (19)

	.  reduce 19


state 56
	referenciaClase : ID '.' invocacionMetodo .  (20)

	.  reduce 20


state 57
	asignacion : ID '=' expresion .  (39)
	expresion : expresion . '+' termino  (92)
	expresion : expresion . '-' termino  (93)

	'+'  shift 74
	'-'  shift 75
	','  reduce 39
	')'  reduce 39


state 58
	asignacion : ID . '=' expresion  (39)
	asignacion : ID . IGUAL expresion  (40)
	tipo : ID .  (90)
	factor : ID .  (97)
	factor : ID . MENOSMENOS  (98)

	IGUAL  shift 27
	MENOSMENOS  shift 71
	'='  shift 29
	ID  reduce 90
	'+'  reduce 97
	'-'  reduce 97
	'*'  reduce 97
	'/'  reduce 97
	')'  reduce 97


state 59
	invocacionMetodo : ID '(' ')' .  (80)

	.  reduce 80


state 60
	invocacionMetodo : ID '(' asignacion . ')'  (81)

	')'  shift 78
	.  error


state 61
	invocacionMetodo : ID '(' tipo . asignacion ')'  (82)

	ID  shift 79
	.  error

	asignacion  goto 80


state 62
	invocacionMetodo : ID '(' expresion . ')'  (79)
	expresion : expresion . '+' termino  (92)
	expresion : expresion . '-' termino  (93)

	'+'  shift 74
	'-'  shift 75
	')'  shift 81
	.  error


state 63
	declaracionClase : CLASS ID '{' . cuerpoClase '}'  (10)

	ID  shift 82
	VOID  shift 83
	SHORT  shift 7
	ULONG  shift 8
	FLOAT  shift 9
	.  error

	cuerpoClase  goto 84
	seccionClase  goto 85
	seccionAtributos  goto 86
	declaracionMetodo  goto 87
	tipo  goto 88


state 64
	declaracionClase : CLASS ID ',' .  (11)

	.  reduce 11


state 65
	sentenciaIf : IF '(' expresion . comparador expresion ')' '{' bloque_ejecucion '}' ELSE '{' bloque_ejecucion '}' END_IF  (41)
	sentenciaIf : IF '(' expresion . comparador expresion ')' '{' bloque_ejecucion '}' ELSE '{' bloque_ejecucion '}'  (42)
	sentenciaIf : IF '(' expresion . comparador expresion ')' '{' bloque_ejecucion '}' END_IF  (43)
	sentenciaIf : IF '(' expresion . comparador expresion ')' '{' bloque_ejecucion '}'  (44)
	sentenciaIf : IF '(' expresion . comparador expresion ')' sentenciaEjecutable ',' ELSE sentenciaEjecutable ',' END_IF  (45)
	sentenciaIf : IF '(' expresion . comparador expresion ')' sentenciaEjecutable ',' ELSE '{' bloque_ejecucion '}' END_IF  (46)
	sentenciaIf : IF '(' expresion . comparador expresion ')' sentenciaEjecutable ',' END_IF  (47)
	expresion : expresion . '+' termino  (92)
	expresion : expresion . '-' termino  (93)

	MAYORIGUAL  shift 89
	MENORIGUAL  shift 90
	IGUAL  shift 91
	DISTINTO  shift 92
	'+'  shift 74
	'-'  shift 75
	'='  shift 93
	'<'  shift 94
	'>'  shift 95
	.  error

	comparador  goto 96


state 66
	declaracionFuncion : VOID ID '(' . tipo ID ')' '{' cuerpoMetodo '}'  (67)
	declaracionFuncion : VOID ID '(' . ID ')' '{' cuerpoMetodo '}'  (68)
	declaracionFuncion : VOID ID '(' . ')' '{' cuerpoMetodo '}'  (69)

	ID  shift 97
	SHORT  shift 7
	ULONG  shift 8
	FLOAT  shift 9
	')'  shift 98
	.  error

	tipo  goto 99


state 67
	sentenciaWhile : WHILE '(' expresion . comparador expresion ')' DO '{' bloque_ejecucion '}'  (58)
	sentenciaWhile : WHILE '(' expresion . comparador expresion ')' DO sentenciaEjecutable  (59)
	sentenciaWhile : WHILE '(' expresion . comparador ')' DO '{' bloque_ejecucion '}'  (60)
	sentenciaWhile : WHILE '(' expresion . comparador ')' DO sentenciaEjecutable  (61)
	expresion : expresion . '+' termino  (92)
	expresion : expresion . '-' termino  (93)

	MAYORIGUAL  shift 89
	MENORIGUAL  shift 90
	IGUAL  shift 91
	DISTINTO  shift 92
	'+'  shift 74
	'-'  shift 75
	'='  shift 93
	'<'  shift 94
	'>'  shift 95
	.  error

	comparador  goto 100


state 68
	programa : '{' cuerpoPrograma '}' .  (1)

	.  reduce 1


state 69
	listaSentencias : listaSentencias sentenciaEjecutable ',' .  (7)

	.  reduce 7


state 70
	listaDeclaracion : ID ';' . listaDeclaracion  (85)

	ID  shift 101
	.  error

	listaDeclaracion  goto 102


state 71
	factor : ID MENOSMENOS .  (98)

	.  reduce 98


state 72
	factor : '-' CTE .  (100)

	.  reduce 100


state 73
	expresion : expresion . '+' termino  (92)
	expresion : expresion . '-' termino  (93)
	factor : '(' expresion . ')'  (101)

	'+'  shift 74
	'-'  shift 75
	')'  shift 103
	.  error


state 74
	expresion : expresion '+' . termino  (92)

	ID  shift 46
	CTE  shift 47
	'-'  shift 48
	'('  shift 49
	.  error

	termino  goto 104
	factor  goto 52


state 75
	expresion : expresion '-' . termino  (93)

	ID  shift 46
	CTE  shift 47
	'-'  shift 48
	'('  shift 49
	.  error

	termino  goto 105
	factor  goto 52


state 76
	termino : termino '*' . factor  (95)

	ID  shift 46
	CTE  shift 47
	'-'  shift 48
	'('  shift 49
	.  error

	factor  goto 106


state 77
	termino : termino '/' . factor  (96)

	ID  shift 46
	CTE  shift 47
	'-'  shift 48
	'('  shift 49
	.  error

	factor  goto 107


state 78
	invocacionMetodo : ID '(' asignacion ')' .  (81)

	.  reduce 81


state 79
	asignacion : ID . '=' expresion  (39)
	asignacion : ID . IGUAL expresion  (40)

	IGUAL  shift 27
	'='  shift 29
	.  error


state 80
	invocacionMetodo : ID '(' tipo asignacion . ')'  (82)

	')'  shift 108
	.  error


state 81
	invocacionMetodo : ID '(' expresion ')' .  (79)

	.  reduce 79


state 82
	seccionAtributos : ID . ','  (22)
	tipo : ID .  (90)

	','  shift 109
	ID  reduce 90


state 83
	declaracionMetodo : VOID . ID '(' tipo ID ')' '{' cuerpoMetodo '}'  (65)
	declaracionMetodo : VOID . ID '(' ')' '{' cuerpoMetodo '}'  (66)

	ID  shift 110
	.  error


state 84
	declaracionClase : CLASS ID '{' cuerpoClase . '}'  (10)

	'}'  shift 111
	.  error


state 85
	cuerpoClase : seccionClase .  (13)
	seccionClase : seccionClase . seccionAtributos  (14)
	seccionClase : seccionClase . declaracionMetodo ','  (15)

	ID  shift 82
	VOID  shift 83
	SHORT  shift 7
	ULONG  shift 8
	FLOAT  shift 9
	'}'  reduce 13

	seccionAtributos  goto 112
	declaracionMetodo  goto 113
	tipo  goto 88


state 86
	seccionClase : seccionAtributos .  (17)

	.  reduce 17


state 87
	seccionClase : declaracionMetodo . ','  (16)

	','  shift 114
	.  error


state 88
	seccionAtributos : tipo . ID ';' listaAtributos  (21)
	seccionAtributos : tipo . ID ','  (23)
	seccionAtributos : tipo . ID  (24)

	ID  shift 115
	.  error


state 89
	comparador : MAYORIGUAL .  (102)

	.  reduce 102


state 90
	comparador : MENORIGUAL .  (103)

	.  reduce 103


state 91
	comparador : IGUAL .  (104)

	.  reduce 104


state 92
	comparador : DISTINTO .  (105)

	.  reduce 105


state 93
	comparador : '=' .  (108)

	.  reduce 108


state 94
	comparador : '<' .  (106)

	.  reduce 106


state 95
	comparador : '>' .  (107)

	.  reduce 107


state 96
	sentenciaIf : IF '(' expresion comparador . expresion ')' '{' bloque_ejecucion '}' ELSE '{' bloque_ejecucion '}' END_IF  (41)
	sentenciaIf : IF '(' expresion comparador . expresion ')' '{' bloque_ejecucion '}' ELSE '{' bloque_ejecucion '}'  (42)
	sentenciaIf : IF '(' expresion comparador . expresion ')' '{' bloque_ejecucion '}' END_IF  (43)
	sentenciaIf : IF '(' expresion comparador . expresion ')' '{' bloque_ejecucion '}'  (44)
	sentenciaIf : IF '(' expresion comparador . expresion ')' sentenciaEjecutable ',' ELSE sentenciaEjecutable ',' END_IF  (45)
	sentenciaIf : IF '(' expresion comparador . expresion ')' sentenciaEjecutable ',' ELSE '{' bloque_ejecucion '}' END_IF  (46)
	sentenciaIf : IF '(' expresion comparador . expresion ')' sentenciaEjecutable ',' END_IF  (47)

	ID  shift 46
	CTE  shift 47
	'-'  shift 48
	'('  shift 49
	.  error

	expresion  goto 116
	termino  goto 51
	factor  goto 52


state 97
	declaracionFuncion : VOID ID '(' ID . ')' '{' cuerpoMetodo '}'  (68)
	tipo : ID .  (90)

	')'  shift 117
	ID  reduce 90


state 98
	declaracionFuncion : VOID ID '(' ')' . '{' cuerpoMetodo '}'  (69)

	'{'  shift 118
	.  error


state 99
	declaracionFuncion : VOID ID '(' tipo . ID ')' '{' cuerpoMetodo '}'  (67)

	ID  shift 119
	.  error


state 100
	sentenciaWhile : WHILE '(' expresion comparador . expresion ')' DO '{' bloque_ejecucion '}'  (58)
	sentenciaWhile : WHILE '(' expresion comparador . expresion ')' DO sentenciaEjecutable  (59)
	sentenciaWhile : WHILE '(' expresion comparador . ')' DO '{' bloque_ejecucion '}'  (60)
	sentenciaWhile : WHILE '(' expresion comparador . ')' DO sentenciaEjecutable  (61)

	ID  shift 46
	CTE  shift 47
	'-'  shift 48
	'('  shift 49
	')'  shift 120
	.  error

	expresion  goto 121
	termino  goto 51
	factor  goto 52


state 101
	listaDeclaracion : ID . ';' listaDeclaracion  (85)
	listaDeclaracion : ID .  (86)

	';'  shift 70
	','  reduce 86


state 102
	listaDeclaracion : ID ';' listaDeclaracion .  (85)

	.  reduce 85


state 103
	factor : '(' expresion ')' .  (101)

	.  reduce 101


state 104
	expresion : expresion '+' termino .  (92)
	termino : termino . '*' factor  (95)
	termino : termino . '/' factor  (96)

	'*'  shift 76
	'/'  shift 77
	MAYORIGUAL  reduce 92
	MENORIGUAL  reduce 92
	IGUAL  reduce 92
	DISTINTO  reduce 92
	'+'  reduce 92
	'-'  reduce 92
	','  reduce 92
	'='  reduce 92
	')'  reduce 92
	'<'  reduce 92
	'>'  reduce 92


state 105
	expresion : expresion '-' termino .  (93)
	termino : termino . '*' factor  (95)
	termino : termino . '/' factor  (96)

	'*'  shift 76
	'/'  shift 77
	MAYORIGUAL  reduce 93
	MENORIGUAL  reduce 93
	IGUAL  reduce 93
	DISTINTO  reduce 93
	'+'  reduce 93
	'-'  reduce 93
	','  reduce 93
	'='  reduce 93
	')'  reduce 93
	'<'  reduce 93
	'>'  reduce 93


state 106
	termino : termino '*' factor .  (95)

	.  reduce 95


state 107
	termino : termino '/' factor .  (96)

	.  reduce 96


state 108
	invocacionMetodo : ID '(' tipo asignacion ')' .  (82)

	.  reduce 82


state 109
	seccionAtributos : ID ',' .  (22)

	.  reduce 22


state 110
	declaracionMetodo : VOID ID . '(' tipo ID ')' '{' cuerpoMetodo '}'  (65)
	declaracionMetodo : VOID ID . '(' ')' '{' cuerpoMetodo '}'  (66)

	'('  shift 122
	.  error


state 111
	declaracionClase : CLASS ID '{' cuerpoClase '}' .  (10)

	.  reduce 10


state 112
	seccionClase : seccionClase seccionAtributos .  (14)

	.  reduce 14


state 113
	seccionClase : seccionClase declaracionMetodo . ','  (15)

	','  shift 123
	.  error


state 114
	seccionClase : declaracionMetodo ',' .  (16)

	.  reduce 16


state 115
	seccionAtributos : tipo ID . ';' listaAtributos  (21)
	seccionAtributos : tipo ID . ','  (23)
	seccionAtributos : tipo ID .  (24)

	','  shift 124
	';'  shift 125
	ID  reduce 24
	VOID  reduce 24
	SHORT  reduce 24
	ULONG  reduce 24
	FLOAT  reduce 24
	'}'  reduce 24


state 116
	sentenciaIf : IF '(' expresion comparador expresion . ')' '{' bloque_ejecucion '}' ELSE '{' bloque_ejecucion '}' END_IF  (41)
	sentenciaIf : IF '(' expresion comparador expresion . ')' '{' bloque_ejecucion '}' ELSE '{' bloque_ejecucion '}'  (42)
	sentenciaIf : IF '(' expresion comparador expresion . ')' '{' bloque_ejecucion '}' END_IF  (43)
	sentenciaIf : IF '(' expresion comparador expresion . ')' '{' bloque_ejecucion '}'  (44)
	sentenciaIf : IF '(' expresion comparador expresion . ')' sentenciaEjecutable ',' ELSE sentenciaEjecutable ',' END_IF  (45)
	sentenciaIf : IF '(' expresion comparador expresion . ')' sentenciaEjecutable ',' ELSE '{' bloque_ejecucion '}' END_IF  (46)
	sentenciaIf : IF '(' expresion comparador expresion . ')' sentenciaEjecutable ',' END_IF  (47)
	expresion : expresion . '+' termino  (92)
	expresion : expresion . '-' termino  (93)

	'+'  shift 74
	'-'  shift 75
	')'  shift 126
	.  error


state 117
	declaracionFuncion : VOID ID '(' ID ')' . '{' cuerpoMetodo '}'  (68)

	'{'  shift 127
	.  error


state 118
	declaracionFuncion : VOID ID '(' ')' '{' . cuerpoMetodo '}'  (69)

	ID  shift 1
	CADENA  shift 2
	IF  shift 128
	PRINT  shift 5
	VOID  shift 6
	SHORT  shift 7
	ULONG  shift 8
	FLOAT  shift 9
	WHILE  shift 10
	.  error

	sentenciaEjecutable  goto 129
	referenciaClase  goto 18
	asignacion  goto 19
	invocacionMetodo  goto 20
	tipo  goto 21
	sentenciaIf  goto 22
	sentenciaWhile  goto 23
	print  goto 24
	declaracionFuncion  goto 130
	declaracion  goto 131
	sentenciaDeclarativaMetodo  goto 132
	sentenciaIfRetorno  goto 133
	cuerpoMetodo  goto 134
	listaSentenciasMetodo  goto 135


state 119
	declaracionFuncion : VOID ID '(' tipo ID . ')' '{' cuerpoMetodo '}'  (67)

	')'  shift 136
	.  error


state 120
	sentenciaWhile : WHILE '(' expresion comparador ')' . DO '{' bloque_ejecucion '}'  (60)
	sentenciaWhile : WHILE '(' expresion comparador ')' . DO sentenciaEjecutable  (61)

	DO  shift 137
	.  error


state 121
	sentenciaWhile : WHILE '(' expresion comparador expresion . ')' DO '{' bloque_ejecucion '}'  (58)
	sentenciaWhile : WHILE '(' expresion comparador expresion . ')' DO sentenciaEjecutable  (59)
	expresion : expresion . '+' termino  (92)
	expresion : expresion . '-' termino  (93)

	'+'  shift 74
	'-'  shift 75
	')'  shift 138
	.  error


state 122
	declaracionMetodo : VOID ID '(' . tipo ID ')' '{' cuerpoMetodo '}'  (65)
	declaracionMetodo : VOID ID '(' . ')' '{' cuerpoMetodo '}'  (66)

	ID  shift 139
	SHORT  shift 7
	ULONG  shift 8
	FLOAT  shift 9
	')'  shift 140
	.  error

	tipo  goto 141


state 123
	seccionClase : seccionClase declaracionMetodo ',' .  (15)

	.  reduce 15


state 124
	seccionAtributos : tipo ID ',' .  (23)

	.  reduce 23


state 125
	seccionAtributos : tipo ID ';' . listaAtributos  (21)

	ID  shift 142
	.  error

	listaAtributos  goto 143


state 126
	sentenciaIf : IF '(' expresion comparador expresion ')' . '{' bloque_ejecucion '}' ELSE '{' bloque_ejecucion '}' END_IF  (41)
	sentenciaIf : IF '(' expresion comparador expresion ')' . '{' bloque_ejecucion '}' ELSE '{' bloque_ejecucion '}'  (42)
	sentenciaIf : IF '(' expresion comparador expresion ')' . '{' bloque_ejecucion '}' END_IF  (43)
	sentenciaIf : IF '(' expresion comparador expresion ')' . '{' bloque_ejecucion '}'  (44)
	sentenciaIf : IF '(' expresion comparador expresion ')' . sentenciaEjecutable ',' ELSE sentenciaEjecutable ',' END_IF  (45)
	sentenciaIf : IF '(' expresion comparador expresion ')' . sentenciaEjecutable ',' ELSE '{' bloque_ejecucion '}' END_IF  (46)
	sentenciaIf : IF '(' expresion comparador expresion ')' . sentenciaEjecutable ',' END_IF  (47)

	ID  shift 53
	CADENA  shift 2
	IF  shift 4
	PRINT  shift 5
	WHILE  shift 10
	'{'  shift 144
	.  error

	sentenciaEjecutable  goto 145
	referenciaClase  goto 18
	asignacion  goto 19
	invocacionMetodo  goto 20
	sentenciaIf  goto 22
	sentenciaWhile  goto 23
	print  goto 24


state 127
	declaracionFuncion : VOID ID '(' ID ')' '{' . cuerpoMetodo '}'  (68)

	ID  shift 1
	CADENA  shift 2
	IF  shift 128
	PRINT  shift 5
	VOID  shift 6
	SHORT  shift 7
	ULONG  shift 8
	FLOAT  shift 9
	WHILE  shift 10
	.  error

	sentenciaEjecutable  goto 129
	referenciaClase  goto 18
	asignacion  goto 19
	invocacionMetodo  goto 20
	tipo  goto 21
	sentenciaIf  goto 22
	sentenciaWhile  goto 23
	print  goto 24
	declaracionFuncion  goto 130
	declaracion  goto 131
	sentenciaDeclarativaMetodo  goto 132
	sentenciaIfRetorno  goto 133
	cuerpoMetodo  goto 146
	listaSentenciasMetodo  goto 135


state 128
	sentenciaIf : IF . '(' expresion comparador expresion ')' '{' bloque_ejecucion '}' ELSE '{' bloque_ejecucion '}' END_IF  (41)
	sentenciaIf : IF . '(' expresion comparador expresion ')' '{' bloque_ejecucion '}' ELSE '{' bloque_ejecucion '}'  (42)
	sentenciaIf : IF . '(' expresion comparador expresion ')' '{' bloque_ejecucion '}' END_IF  (43)
	sentenciaIf : IF . '(' expresion comparador expresion ')' '{' bloque_ejecucion '}'  (44)
	sentenciaIf : IF . '(' expresion comparador expresion ')' sentenciaEjecutable ',' ELSE sentenciaEjecutable ',' END_IF  (45)
	sentenciaIf : IF . '(' expresion comparador expresion ')' sentenciaEjecutable ',' ELSE '{' bloque_ejecucion '}' END_IF  (46)
	sentenciaIf : IF . '(' expresion comparador expresion ')' sentenciaEjecutable ',' END_IF  (47)
	sentenciaIfRetorno : IF . '(' expresion comparador expresion ')' '{' bloque_ejecucion return '}' ELSE '{' bloque_ejecucion return ',' '}' END_IF  (48)
	sentenciaIfRetorno : IF . '(' expresion comparador expresion ')' '{' bloque_ejecucion return '}' ELSE '{' bloque_ejecucion return ',' '}'  (49)
	sentenciaIfRetorno : IF . '(' expresion comparador expresion ')' '{' bloque_ejecucion return '}' END_IF  (50)
	sentenciaIfRetorno : IF . '(' expresion comparador expresion ')' '{' bloque_ejecucion return '}'  (51)
	sentenciaIfRetorno : IF . '(' expresion comparador expresion ')' return ',' ELSE sentenciaEjecutable ',' END_IF  (52)
	sentenciaIfRetorno : IF . '(' expresion comparador expresion ')' return ',' ELSE '{' bloque_ejecucion return ',' '}' END_IF  (53)
	sentenciaIfRetorno : IF . '(' expresion comparador expresion ')' return ',' END_IF  (54)

	'('  shift 147
	.  error


state 129
	listaSentenciasMetodo : sentenciaEjecutable . ','  (78)

	','  shift 148
	.  error


state 130
	sentenciaDeclarativaMetodo : declaracionFuncion .  (37)

	.  reduce 37


state 131
	sentenciaDeclarativaMetodo : declaracion . ','  (38)

	','  shift 149
	.  error


state 132
	listaSentenciasMetodo : sentenciaDeclarativaMetodo .  (77)

	.  reduce 77


state 133
	cuerpoMetodo : sentenciaIfRetorno . ',' listaSentenciasMetodo  (71)
	cuerpoMetodo : sentenciaIfRetorno . ','  (74)

	','  shift 150
	.  error


state 134
	declaracionFuncion : VOID ID '(' ')' '{' cuerpoMetodo . '}'  (69)

	'}'  shift 151
	.  error


state 135
	cuerpoMetodo : listaSentenciasMetodo . return ','  (70)
	cuerpoMetodo : listaSentenciasMetodo . sentenciaIfRetorno ','  (72)
	cuerpoMetodo : listaSentenciasMetodo .  (73)
	listaSentenciasMetodo : listaSentenciasMetodo . sentenciaDeclarativaMetodo  (75)
	listaSentenciasMetodo : listaSentenciasMetodo . sentenciaEjecutable ','  (76)

	ID  shift 1
	CADENA  shift 2
	IF  shift 128
	PRINT  shift 5
	VOID  shift 6
	SHORT  shift 7
	ULONG  shift 8
	FLOAT  shift 9
	WHILE  shift 10
	RETURN  shift 152
	'}'  reduce 73

	sentenciaEjecutable  goto 153
	referenciaClase  goto 18
	asignacion  goto 19
	invocacionMetodo  goto 20
	tipo  goto 21
	sentenciaIf  goto 22
	sentenciaWhile  goto 23
	print  goto 24
	declaracionFuncion  goto 130
	declaracion  goto 131
	sentenciaDeclarativaMetodo  goto 154
	sentenciaIfRetorno  goto 155
	return  goto 156


state 136
	declaracionFuncion : VOID ID '(' tipo ID ')' . '{' cuerpoMetodo '}'  (67)

	'{'  shift 157
	.  error


state 137
	sentenciaWhile : WHILE '(' expresion comparador ')' DO . '{' bloque_ejecucion '}'  (60)
	sentenciaWhile : WHILE '(' expresion comparador ')' DO . sentenciaEjecutable  (61)

	ID  shift 53
	CADENA  shift 2
	IF  shift 4
	PRINT  shift 5
	WHILE  shift 10
	'{'  shift 158
	.  error

	sentenciaEjecutable  goto 159
	referenciaClase  goto 18
	asignacion  goto 19
	invocacionMetodo  goto 20
	sentenciaIf  goto 22
	sentenciaWhile  goto 23
	print  goto 24


state 138
	sentenciaWhile : WHILE '(' expresion comparador expresion ')' . DO '{' bloque_ejecucion '}'  (58)
	sentenciaWhile : WHILE '(' expresion comparador expresion ')' . DO sentenciaEjecutable  (59)

	DO  shift 160
	.  error


state 139
	tipo : ID .  (90)

	.  reduce 90


state 140
	declaracionMetodo : VOID ID '(' ')' . '{' cuerpoMetodo '}'  (66)

	'{'  shift 161
	.  error


state 141
	declaracionMetodo : VOID ID '(' tipo . ID ')' '{' cuerpoMetodo '}'  (65)

	ID  shift 162
	.  error


state 142
	listaAtributos : ID . ';' listaAtributos  (25)
	listaAtributos : ID . ','  (26)
	listaAtributos : ID .  (27)

	','  shift 163
	';'  shift 164
	ID  reduce 27
	VOID  reduce 27
	SHORT  reduce 27
	ULONG  reduce 27
	FLOAT  reduce 27
	'}'  reduce 27


state 143
	seccionAtributos : tipo ID ';' listaAtributos .  (21)

	.  reduce 21


state 144
	sentenciaIf : IF '(' expresion comparador expresion ')' '{' . bloque_ejecucion '}' ELSE '{' bloque_ejecucion '}' END_IF  (41)
	sentenciaIf : IF '(' expresion comparador expresion ')' '{' . bloque_ejecucion '}' ELSE '{' bloque_ejecucion '}'  (42)
	sentenciaIf : IF '(' expresion comparador expresion ')' '{' . bloque_ejecucion '}' END_IF  (43)
	sentenciaIf : IF '(' expresion comparador expresion ')' '{' . bloque_ejecucion '}'  (44)

	ID  shift 1
	CADENA  shift 2
	CLASS  shift 3
	IF  shift 4
	PRINT  shift 5
	VOID  shift 6
	SHORT  shift 7
	ULONG  shift 8
	FLOAT  shift 9
	WHILE  shift 10
	.  error

	sentenciaDeclarativa  goto 165
	sentenciaEjecutable  goto 166
	declaracionClase  goto 17
	referenciaClase  goto 18
	asignacion  goto 19
	invocacionMetodo  goto 20
	tipo  goto 21
	sentenciaIf  goto 22
	sentenciaWhile  goto 23
	print  goto 24
	declaracionFuncion  goto 25
	declaracion  goto 26
	bloque_ejecucion  goto 167


state 145
	sentenciaIf : IF '(' expresion comparador expresion ')' sentenciaEjecutable . ',' ELSE sentenciaEjecutable ',' END_IF  (45)
	sentenciaIf : IF '(' expresion comparador expresion ')' sentenciaEjecutable . ',' ELSE '{' bloque_ejecucion '}' END_IF  (46)
	sentenciaIf : IF '(' expresion comparador expresion ')' sentenciaEjecutable . ',' END_IF  (47)

	','  shift 168
	.  error


state 146
	declaracionFuncion : VOID ID '(' ID ')' '{' cuerpoMetodo . '}'  (68)

	'}'  shift 169
	.  error


state 147
	sentenciaIf : IF '(' . expresion comparador expresion ')' '{' bloque_ejecucion '}' ELSE '{' bloque_ejecucion '}' END_IF  (41)
	sentenciaIf : IF '(' . expresion comparador expresion ')' '{' bloque_ejecucion '}' ELSE '{' bloque_ejecucion '}'  (42)
	sentenciaIf : IF '(' . expresion comparador expresion ')' '{' bloque_ejecucion '}' END_IF  (43)
	sentenciaIf : IF '(' . expresion comparador expresion ')' '{' bloque_ejecucion '}'  (44)
	sentenciaIf : IF '(' . expresion comparador expresion ')' sentenciaEjecutable ',' ELSE sentenciaEjecutable ',' END_IF  (45)
	sentenciaIf : IF '(' . expresion comparador expresion ')' sentenciaEjecutable ',' ELSE '{' bloque_ejecucion '}' END_IF  (46)
	sentenciaIf : IF '(' . expresion comparador expresion ')' sentenciaEjecutable ',' END_IF  (47)
	sentenciaIfRetorno : IF '(' . expresion comparador expresion ')' '{' bloque_ejecucion return '}' ELSE '{' bloque_ejecucion return ',' '}' END_IF  (48)
	sentenciaIfRetorno : IF '(' . expresion comparador expresion ')' '{' bloque_ejecucion return '}' ELSE '{' bloque_ejecucion return ',' '}'  (49)
	sentenciaIfRetorno : IF '(' . expresion comparador expresion ')' '{' bloque_ejecucion return '}' END_IF  (50)
	sentenciaIfRetorno : IF '(' . expresion comparador expresion ')' '{' bloque_ejecucion return '}'  (51)
	sentenciaIfRetorno : IF '(' . expresion comparador expresion ')' return ',' ELSE sentenciaEjecutable ',' END_IF  (52)
	sentenciaIfRetorno : IF '(' . expresion comparador expresion ')' return ',' ELSE '{' bloque_ejecucion return ',' '}' END_IF  (53)
	sentenciaIfRetorno : IF '(' . expresion comparador expresion ')' return ',' END_IF  (54)

	ID  shift 46
	CTE  shift 47
	'-'  shift 48
	'('  shift 49
	.  error

	expresion  goto 170
	termino  goto 51
	factor  goto 52


state 148
	listaSentenciasMetodo : sentenciaEjecutable ',' .  (78)

	.  reduce 78


state 149
	sentenciaDeclarativaMetodo : declaracion ',' .  (38)

	.  reduce 38


state 150
	cuerpoMetodo : sentenciaIfRetorno ',' . listaSentenciasMetodo  (71)
	cuerpoMetodo : sentenciaIfRetorno ',' .  (74)

	ID  shift 1
	CADENA  shift 2
	IF  shift 4
	PRINT  shift 5
	VOID  shift 6
	SHORT  shift 7
	ULONG  shift 8
	FLOAT  shift 9
	WHILE  shift 10
	'}'  reduce 74

	sentenciaEjecutable  goto 129
	referenciaClase  goto 18
	asignacion  goto 19
	invocacionMetodo  goto 20
	tipo  goto 21
	sentenciaIf  goto 22
	sentenciaWhile  goto 23
	print  goto 24
	declaracionFuncion  goto 130
	declaracion  goto 131
	sentenciaDeclarativaMetodo  goto 132
	listaSentenciasMetodo  goto 171


state 151
	declaracionFuncion : VOID ID '(' ')' '{' cuerpoMetodo '}' .  (69)

	.  reduce 69


state 152
	return : RETURN .  (64)

	.  reduce 64


state 153
	listaSentenciasMetodo : listaSentenciasMetodo sentenciaEjecutable . ','  (76)

	','  shift 172
	.  error


state 154
	listaSentenciasMetodo : listaSentenciasMetodo sentenciaDeclarativaMetodo .  (75)

	.  reduce 75


state 155
	cuerpoMetodo : listaSentenciasMetodo sentenciaIfRetorno . ','  (72)

	','  shift 173
	.  error


state 156
	cuerpoMetodo : listaSentenciasMetodo return . ','  (70)

	','  shift 174
	.  error


state 157
	declaracionFuncion : VOID ID '(' tipo ID ')' '{' . cuerpoMetodo '}'  (67)

	ID  shift 1
	CADENA  shift 2
	IF  shift 128
	PRINT  shift 5
	VOID  shift 6
	SHORT  shift 7
	ULONG  shift 8
	FLOAT  shift 9
	WHILE  shift 10
	.  error

	sentenciaEjecutable  goto 129
	referenciaClase  goto 18
	asignacion  goto 19
	invocacionMetodo  goto 20
	tipo  goto 21
	sentenciaIf  goto 22
	sentenciaWhile  goto 23
	print  goto 24
	declaracionFuncion  goto 130
	declaracion  goto 131
	sentenciaDeclarativaMetodo  goto 132
	sentenciaIfRetorno  goto 133
	cuerpoMetodo  goto 175
	listaSentenciasMetodo  goto 135


state 158
	sentenciaWhile : WHILE '(' expresion comparador ')' DO '{' . bloque_ejecucion '}'  (60)

	ID  shift 1
	CADENA  shift 2
	CLASS  shift 3
	IF  shift 4
	PRINT  shift 5
	VOID  shift 6
	SHORT  shift 7
	ULONG  shift 8
	FLOAT  shift 9
	WHILE  shift 10
	.  error

	sentenciaDeclarativa  goto 165
	sentenciaEjecutable  goto 166
	declaracionClase  goto 17
	referenciaClase  goto 18
	asignacion  goto 19
	invocacionMetodo  goto 20
	tipo  goto 21
	sentenciaIf  goto 22
	sentenciaWhile  goto 23
	print  goto 24
	declaracionFuncion  goto 25
	declaracion  goto 26
	bloque_ejecucion  goto 176


state 159
	sentenciaWhile : WHILE '(' expresion comparador ')' DO sentenciaEjecutable .  (61)

	.  reduce 61


state 160
	sentenciaWhile : WHILE '(' expresion comparador expresion ')' DO . '{' bloque_ejecucion '}'  (58)
	sentenciaWhile : WHILE '(' expresion comparador expresion ')' DO . sentenciaEjecutable  (59)

	ID  shift 53
	CADENA  shift 2
	IF  shift 4
	PRINT  shift 5
	WHILE  shift 10
	'{'  shift 177
	.  error

	sentenciaEjecutable  goto 178
	referenciaClase  goto 18
	asignacion  goto 19
	invocacionMetodo  goto 20
	sentenciaIf  goto 22
	sentenciaWhile  goto 23
	print  goto 24


state 161
	declaracionMetodo : VOID ID '(' ')' '{' . cuerpoMetodo '}'  (66)

	ID  shift 1
	CADENA  shift 2
	IF  shift 128
	PRINT  shift 5
	VOID  shift 6
	SHORT  shift 7
	ULONG  shift 8
	FLOAT  shift 9
	WHILE  shift 10
	.  error

	sentenciaEjecutable  goto 129
	referenciaClase  goto 18
	asignacion  goto 19
	invocacionMetodo  goto 20
	tipo  goto 21
	sentenciaIf  goto 22
	sentenciaWhile  goto 23
	print  goto 24
	declaracionFuncion  goto 130
	declaracion  goto 131
	sentenciaDeclarativaMetodo  goto 132
	sentenciaIfRetorno  goto 133
	cuerpoMetodo  goto 179
	listaSentenciasMetodo  goto 135


state 162
	declaracionMetodo : VOID ID '(' tipo ID . ')' '{' cuerpoMetodo '}'  (65)

	')'  shift 180
	.  error


state 163
	listaAtributos : ID ',' .  (26)

	.  reduce 26


state 164
	listaAtributos : ID ';' . listaAtributos  (25)

	ID  shift 142
	.  error

	listaAtributos  goto 181


state 165
	bloque_ejecucion : sentenciaDeclarativa .  (57)

	.  reduce 57


state 166
	bloque_ejecucion : sentenciaEjecutable . ','  (56)

	','  shift 182
	.  error


state 167
	sentenciaIf : IF '(' expresion comparador expresion ')' '{' bloque_ejecucion . '}' ELSE '{' bloque_ejecucion '}' END_IF  (41)
	sentenciaIf : IF '(' expresion comparador expresion ')' '{' bloque_ejecucion . '}' ELSE '{' bloque_ejecucion '}'  (42)
	sentenciaIf : IF '(' expresion comparador expresion ')' '{' bloque_ejecucion . '}' END_IF  (43)
	sentenciaIf : IF '(' expresion comparador expresion ')' '{' bloque_ejecucion . '}'  (44)
	bloque_ejecucion : bloque_ejecucion . sentenciaEjecutable ','  (55)

	ID  shift 53
	CADENA  shift 2
	IF  shift 4
	PRINT  shift 5
	WHILE  shift 10
	'}'  shift 183
	.  error

	sentenciaEjecutable  goto 184
	referenciaClase  goto 18
	asignacion  goto 19
	invocacionMetodo  goto 20
	sentenciaIf  goto 22
	sentenciaWhile  goto 23
	print  goto 24


state 168
	sentenciaIf : IF '(' expresion comparador expresion ')' sentenciaEjecutable ',' . ELSE sentenciaEjecutable ',' END_IF  (45)
	sentenciaIf : IF '(' expresion comparador expresion ')' sentenciaEjecutable ',' . ELSE '{' bloque_ejecucion '}' END_IF  (46)
	sentenciaIf : IF '(' expresion comparador expresion ')' sentenciaEjecutable ',' . END_IF  (47)

	ELSE  shift 185
	END_IF  shift 186
	.  error


state 169
	declaracionFuncion : VOID ID '(' ID ')' '{' cuerpoMetodo '}' .  (68)

	.  reduce 68


state 170
	sentenciaIf : IF '(' expresion . comparador expresion ')' '{' bloque_ejecucion '}' ELSE '{' bloque_ejecucion '}' END_IF  (41)
	sentenciaIf : IF '(' expresion . comparador expresion ')' '{' bloque_ejecucion '}' ELSE '{' bloque_ejecucion '}'  (42)
	sentenciaIf : IF '(' expresion . comparador expresion ')' '{' bloque_ejecucion '}' END_IF  (43)
	sentenciaIf : IF '(' expresion . comparador expresion ')' '{' bloque_ejecucion '}'  (44)
	sentenciaIf : IF '(' expresion . comparador expresion ')' sentenciaEjecutable ',' ELSE sentenciaEjecutable ',' END_IF  (45)
	sentenciaIf : IF '(' expresion . comparador expresion ')' sentenciaEjecutable ',' ELSE '{' bloque_ejecucion '}' END_IF  (46)
	sentenciaIf : IF '(' expresion . comparador expresion ')' sentenciaEjecutable ',' END_IF  (47)
	sentenciaIfRetorno : IF '(' expresion . comparador expresion ')' '{' bloque_ejecucion return '}' ELSE '{' bloque_ejecucion return ',' '}' END_IF  (48)
	sentenciaIfRetorno : IF '(' expresion . comparador expresion ')' '{' bloque_ejecucion return '}' ELSE '{' bloque_ejecucion return ',' '}'  (49)
	sentenciaIfRetorno : IF '(' expresion . comparador expresion ')' '{' bloque_ejecucion return '}' END_IF  (50)
	sentenciaIfRetorno : IF '(' expresion . comparador expresion ')' '{' bloque_ejecucion return '}'  (51)
	sentenciaIfRetorno : IF '(' expresion . comparador expresion ')' return ',' ELSE sentenciaEjecutable ',' END_IF  (52)
	sentenciaIfRetorno : IF '(' expresion . comparador expresion ')' return ',' ELSE '{' bloque_ejecucion return ',' '}' END_IF  (53)
	sentenciaIfRetorno : IF '(' expresion . comparador expresion ')' return ',' END_IF  (54)
	expresion : expresion . '+' termino  (92)
	expresion : expresion . '-' termino  (93)

	MAYORIGUAL  shift 89
	MENORIGUAL  shift 90
	IGUAL  shift 91
	DISTINTO  shift 92
	'+'  shift 74
	'-'  shift 75
	'='  shift 93
	'<'  shift 94
	'>'  shift 95
	.  error

	comparador  goto 187


state 171
	cuerpoMetodo : sentenciaIfRetorno ',' listaSentenciasMetodo .  (71)
	listaSentenciasMetodo : listaSentenciasMetodo . sentenciaDeclarativaMetodo  (75)
	listaSentenciasMetodo : listaSentenciasMetodo . sentenciaEjecutable ','  (76)

	ID  shift 1
	CADENA  shift 2
	IF  shift 4
	PRINT  shift 5
	VOID  shift 6
	SHORT  shift 7
	ULONG  shift 8
	FLOAT  shift 9
	WHILE  shift 10
	'}'  reduce 71

	sentenciaEjecutable  goto 153
	referenciaClase  goto 18
	asignacion  goto 19
	invocacionMetodo  goto 20
	tipo  goto 21
	sentenciaIf  goto 22
	sentenciaWhile  goto 23
	print  goto 24
	declaracionFuncion  goto 130
	declaracion  goto 131
	sentenciaDeclarativaMetodo  goto 154


state 172
	listaSentenciasMetodo : listaSentenciasMetodo sentenciaEjecutable ',' .  (76)

	.  reduce 76


state 173
	cuerpoMetodo : listaSentenciasMetodo sentenciaIfRetorno ',' .  (72)

	.  reduce 72


state 174
	cuerpoMetodo : listaSentenciasMetodo return ',' .  (70)

	.  reduce 70


state 175
	declaracionFuncion : VOID ID '(' tipo ID ')' '{' cuerpoMetodo . '}'  (67)

	'}'  shift 188
	.  error


state 176
	bloque_ejecucion : bloque_ejecucion . sentenciaEjecutable ','  (55)
	sentenciaWhile : WHILE '(' expresion comparador ')' DO '{' bloque_ejecucion . '}'  (60)

	ID  shift 53
	CADENA  shift 2
	IF  shift 4
	PRINT  shift 5
	WHILE  shift 10
	'}'  shift 189
	.  error

	sentenciaEjecutable  goto 184
	referenciaClase  goto 18
	asignacion  goto 19
	invocacionMetodo  goto 20
	sentenciaIf  goto 22
	sentenciaWhile  goto 23
	print  goto 24


state 177
	sentenciaWhile : WHILE '(' expresion comparador expresion ')' DO '{' . bloque_ejecucion '}'  (58)

	ID  shift 1
	CADENA  shift 2
	CLASS  shift 3
	IF  shift 4
	PRINT  shift 5
	VOID  shift 6
	SHORT  shift 7
	ULONG  shift 8
	FLOAT  shift 9
	WHILE  shift 10
	.  error

	sentenciaDeclarativa  goto 165
	sentenciaEjecutable  goto 166
	declaracionClase  goto 17
	referenciaClase  goto 18
	asignacion  goto 19
	invocacionMetodo  goto 20
	tipo  goto 21
	sentenciaIf  goto 22
	sentenciaWhile  goto 23
	print  goto 24
	declaracionFuncion  goto 25
	declaracion  goto 26
	bloque_ejecucion  goto 190


state 178
	sentenciaWhile : WHILE '(' expresion comparador expresion ')' DO sentenciaEjecutable .  (59)

	.  reduce 59


state 179
	declaracionMetodo : VOID ID '(' ')' '{' cuerpoMetodo . '}'  (66)

	'}'  shift 191
	.  error


state 180
	declaracionMetodo : VOID ID '(' tipo ID ')' . '{' cuerpoMetodo '}'  (65)

	'{'  shift 192
	.  error


state 181
	listaAtributos : ID ';' listaAtributos .  (25)

	.  reduce 25


state 182
	bloque_ejecucion : sentenciaEjecutable ',' .  (56)

	.  reduce 56


state 183
	sentenciaIf : IF '(' expresion comparador expresion ')' '{' bloque_ejecucion '}' . ELSE '{' bloque_ejecucion '}' END_IF  (41)
	sentenciaIf : IF '(' expresion comparador expresion ')' '{' bloque_ejecucion '}' . ELSE '{' bloque_ejecucion '}'  (42)
	sentenciaIf : IF '(' expresion comparador expresion ')' '{' bloque_ejecucion '}' . END_IF  (43)
	sentenciaIf : IF '(' expresion comparador expresion ')' '{' bloque_ejecucion '}' .  (44)

	ELSE  shift 193
	END_IF  shift 194
	','  reduce 44


state 184
	bloque_ejecucion : bloque_ejecucion sentenciaEjecutable . ','  (55)

	','  shift 195
	.  error


state 185
	sentenciaIf : IF '(' expresion comparador expresion ')' sentenciaEjecutable ',' ELSE . sentenciaEjecutable ',' END_IF  (45)
	sentenciaIf : IF '(' expresion comparador expresion ')' sentenciaEjecutable ',' ELSE . '{' bloque_ejecucion '}' END_IF  (46)

	ID  shift 53
	CADENA  shift 2
	IF  shift 4
	PRINT  shift 5
	WHILE  shift 10
	'{'  shift 196
	.  error

	sentenciaEjecutable  goto 197
	referenciaClase  goto 18
	asignacion  goto 19
	invocacionMetodo  goto 20
	sentenciaIf  goto 22
	sentenciaWhile  goto 23
	print  goto 24


state 186
	sentenciaIf : IF '(' expresion comparador expresion ')' sentenciaEjecutable ',' END_IF .  (47)

	.  reduce 47


state 187
	sentenciaIf : IF '(' expresion comparador . expresion ')' '{' bloque_ejecucion '}' ELSE '{' bloque_ejecucion '}' END_IF  (41)
	sentenciaIf : IF '(' expresion comparador . expresion ')' '{' bloque_ejecucion '}' ELSE '{' bloque_ejecucion '}'  (42)
	sentenciaIf : IF '(' expresion comparador . expresion ')' '{' bloque_ejecucion '}' END_IF  (43)
	sentenciaIf : IF '(' expresion comparador . expresion ')' '{' bloque_ejecucion '}'  (44)
	sentenciaIf : IF '(' expresion comparador . expresion ')' sentenciaEjecutable ',' ELSE sentenciaEjecutable ',' END_IF  (45)
	sentenciaIf : IF '(' expresion comparador . expresion ')' sentenciaEjecutable ',' ELSE '{' bloque_ejecucion '}' END_IF  (46)
	sentenciaIf : IF '(' expresion comparador . expresion ')' sentenciaEjecutable ',' END_IF  (47)
	sentenciaIfRetorno : IF '(' expresion comparador . expresion ')' '{' bloque_ejecucion return '}' ELSE '{' bloque_ejecucion return ',' '}' END_IF  (48)
	sentenciaIfRetorno : IF '(' expresion comparador . expresion ')' '{' bloque_ejecucion return '}' ELSE '{' bloque_ejecucion return ',' '}'  (49)
	sentenciaIfRetorno : IF '(' expresion comparador . expresion ')' '{' bloque_ejecucion return '}' END_IF  (50)
	sentenciaIfRetorno : IF '(' expresion comparador . expresion ')' '{' bloque_ejecucion return '}'  (51)
	sentenciaIfRetorno : IF '(' expresion comparador . expresion ')' return ',' ELSE sentenciaEjecutable ',' END_IF  (52)
	sentenciaIfRetorno : IF '(' expresion comparador . expresion ')' return ',' ELSE '{' bloque_ejecucion return ',' '}' END_IF  (53)
	sentenciaIfRetorno : IF '(' expresion comparador . expresion ')' return ',' END_IF  (54)

	ID  shift 46
	CTE  shift 47
	'-'  shift 48
	'('  shift 49
	.  error

	expresion  goto 198
	termino  goto 51
	factor  goto 52


state 188
	declaracionFuncion : VOID ID '(' tipo ID ')' '{' cuerpoMetodo '}' .  (67)

	.  reduce 67


state 189
	sentenciaWhile : WHILE '(' expresion comparador ')' DO '{' bloque_ejecucion '}' .  (60)

	.  reduce 60


state 190
	bloque_ejecucion : bloque_ejecucion . sentenciaEjecutable ','  (55)
	sentenciaWhile : WHILE '(' expresion comparador expresion ')' DO '{' bloque_ejecucion . '}'  (58)

	ID  shift 53
	CADENA  shift 2
	IF  shift 4
	PRINT  shift 5
	WHILE  shift 10
	'}'  shift 199
	.  error

	sentenciaEjecutable  goto 184
	referenciaClase  goto 18
	asignacion  goto 19
	invocacionMetodo  goto 20
	sentenciaIf  goto 22
	sentenciaWhile  goto 23
	print  goto 24


state 191
	declaracionMetodo : VOID ID '(' ')' '{' cuerpoMetodo '}' .  (66)

	.  reduce 66


state 192
	declaracionMetodo : VOID ID '(' tipo ID ')' '{' . cuerpoMetodo '}'  (65)

	ID  shift 1
	CADENA  shift 2
	IF  shift 128
	PRINT  shift 5
	VOID  shift 6
	SHORT  shift 7
	ULONG  shift 8
	FLOAT  shift 9
	WHILE  shift 10
	.  error

	sentenciaEjecutable  goto 129
	referenciaClase  goto 18
	asignacion  goto 19
	invocacionMetodo  goto 20
	tipo  goto 21
	sentenciaIf  goto 22
	sentenciaWhile  goto 23
	print  goto 24
	declaracionFuncion  goto 130
	declaracion  goto 131
	sentenciaDeclarativaMetodo  goto 132
	sentenciaIfRetorno  goto 133
	cuerpoMetodo  goto 200
	listaSentenciasMetodo  goto 135


state 193
	sentenciaIf : IF '(' expresion comparador expresion ')' '{' bloque_ejecucion '}' ELSE . '{' bloque_ejecucion '}' END_IF  (41)
	sentenciaIf : IF '(' expresion comparador expresion ')' '{' bloque_ejecucion '}' ELSE . '{' bloque_ejecucion '}'  (42)

	'{'  shift 201
	.  error


state 194
	sentenciaIf : IF '(' expresion comparador expresion ')' '{' bloque_ejecucion '}' END_IF .  (43)

	.  reduce 43


state 195
	bloque_ejecucion : bloque_ejecucion sentenciaEjecutable ',' .  (55)

	.  reduce 55


state 196
	sentenciaIf : IF '(' expresion comparador expresion ')' sentenciaEjecutable ',' ELSE '{' . bloque_ejecucion '}' END_IF  (46)

	ID  shift 1
	CADENA  shift 2
	CLASS  shift 3
	IF  shift 4
	PRINT  shift 5
	VOID  shift 6
	SHORT  shift 7
	ULONG  shift 8
	FLOAT  shift 9
	WHILE  shift 10
	.  error

	sentenciaDeclarativa  goto 165
	sentenciaEjecutable  goto 166
	declaracionClase  goto 17
	referenciaClase  goto 18
	asignacion  goto 19
	invocacionMetodo  goto 20
	tipo  goto 21
	sentenciaIf  goto 22
	sentenciaWhile  goto 23
	print  goto 24
	declaracionFuncion  goto 25
	declaracion  goto 26
	bloque_ejecucion  goto 202


state 197
	sentenciaIf : IF '(' expresion comparador expresion ')' sentenciaEjecutable ',' ELSE sentenciaEjecutable . ',' END_IF  (45)

	','  shift 203
	.  error


state 198
	sentenciaIf : IF '(' expresion comparador expresion . ')' '{' bloque_ejecucion '}' ELSE '{' bloque_ejecucion '}' END_IF  (41)
	sentenciaIf : IF '(' expresion comparador expresion . ')' '{' bloque_ejecucion '}' ELSE '{' bloque_ejecucion '}'  (42)
	sentenciaIf : IF '(' expresion comparador expresion . ')' '{' bloque_ejecucion '}' END_IF  (43)
	sentenciaIf : IF '(' expresion comparador expresion . ')' '{' bloque_ejecucion '}'  (44)
	sentenciaIf : IF '(' expresion comparador expresion . ')' sentenciaEjecutable ',' ELSE sentenciaEjecutable ',' END_IF  (45)
	sentenciaIf : IF '(' expresion comparador expresion . ')' sentenciaEjecutable ',' ELSE '{' bloque_ejecucion '}' END_IF  (46)
	sentenciaIf : IF '(' expresion comparador expresion . ')' sentenciaEjecutable ',' END_IF  (47)
	sentenciaIfRetorno : IF '(' expresion comparador expresion . ')' '{' bloque_ejecucion return '}' ELSE '{' bloque_ejecucion return ',' '}' END_IF  (48)
	sentenciaIfRetorno : IF '(' expresion comparador expresion . ')' '{' bloque_ejecucion return '}' ELSE '{' bloque_ejecucion return ',' '}'  (49)
	sentenciaIfRetorno : IF '(' expresion comparador expresion . ')' '{' bloque_ejecucion return '}' END_IF  (50)
	sentenciaIfRetorno : IF '(' expresion comparador expresion . ')' '{' bloque_ejecucion return '}'  (51)
	sentenciaIfRetorno : IF '(' expresion comparador expresion . ')' return ',' ELSE sentenciaEjecutable ',' END_IF  (52)
	sentenciaIfRetorno : IF '(' expresion comparador expresion . ')' return ',' ELSE '{' bloque_ejecucion return ',' '}' END_IF  (53)
	sentenciaIfRetorno : IF '(' expresion comparador expresion . ')' return ',' END_IF  (54)
	expresion : expresion . '+' termino  (92)
	expresion : expresion . '-' termino  (93)

	'+'  shift 74
	'-'  shift 75
	')'  shift 204
	.  error


state 199
	sentenciaWhile : WHILE '(' expresion comparador expresion ')' DO '{' bloque_ejecucion '}' .  (58)

	.  reduce 58


state 200
	declaracionMetodo : VOID ID '(' tipo ID ')' '{' cuerpoMetodo . '}'  (65)

	'}'  shift 205
	.  error


state 201
	sentenciaIf : IF '(' expresion comparador expresion ')' '{' bloque_ejecucion '}' ELSE '{' . bloque_ejecucion '}' END_IF  (41)
	sentenciaIf : IF '(' expresion comparador expresion ')' '{' bloque_ejecucion '}' ELSE '{' . bloque_ejecucion '}'  (42)

	ID  shift 1
	CADENA  shift 2
	CLASS  shift 3
	IF  shift 4
	PRINT  shift 5
	VOID  shift 6
	SHORT  shift 7
	ULONG  shift 8
	FLOAT  shift 9
	WHILE  shift 10
	.  error

	sentenciaDeclarativa  goto 165
	sentenciaEjecutable  goto 166
	declaracionClase  goto 17
	referenciaClase  goto 18
	asignacion  goto 19
	invocacionMetodo  goto 20
	tipo  goto 21
	sentenciaIf  goto 22
	sentenciaWhile  goto 23
	print  goto 24
	declaracionFuncion  goto 25
	declaracion  goto 26
	bloque_ejecucion  goto 206


state 202
	sentenciaIf : IF '(' expresion comparador expresion ')' sentenciaEjecutable ',' ELSE '{' bloque_ejecucion . '}' END_IF  (46)
	bloque_ejecucion : bloque_ejecucion . sentenciaEjecutable ','  (55)

	ID  shift 53
	CADENA  shift 2
	IF  shift 4
	PRINT  shift 5
	WHILE  shift 10
	'}'  shift 207
	.  error

	sentenciaEjecutable  goto 184
	referenciaClase  goto 18
	asignacion  goto 19
	invocacionMetodo  goto 20
	sentenciaIf  goto 22
	sentenciaWhile  goto 23
	print  goto 24


state 203
	sentenciaIf : IF '(' expresion comparador expresion ')' sentenciaEjecutable ',' ELSE sentenciaEjecutable ',' . END_IF  (45)

	END_IF  shift 208
	.  error


state 204
	sentenciaIf : IF '(' expresion comparador expresion ')' . '{' bloque_ejecucion '}' ELSE '{' bloque_ejecucion '}' END_IF  (41)
	sentenciaIf : IF '(' expresion comparador expresion ')' . '{' bloque_ejecucion '}' ELSE '{' bloque_ejecucion '}'  (42)
	sentenciaIf : IF '(' expresion comparador expresion ')' . '{' bloque_ejecucion '}' END_IF  (43)
	sentenciaIf : IF '(' expresion comparador expresion ')' . '{' bloque_ejecucion '}'  (44)
	sentenciaIf : IF '(' expresion comparador expresion ')' . sentenciaEjecutable ',' ELSE sentenciaEjecutable ',' END_IF  (45)
	sentenciaIf : IF '(' expresion comparador expresion ')' . sentenciaEjecutable ',' ELSE '{' bloque_ejecucion '}' END_IF  (46)
	sentenciaIf : IF '(' expresion comparador expresion ')' . sentenciaEjecutable ',' END_IF  (47)
	sentenciaIfRetorno : IF '(' expresion comparador expresion ')' . '{' bloque_ejecucion return '}' ELSE '{' bloque_ejecucion return ',' '}' END_IF  (48)
	sentenciaIfRetorno : IF '(' expresion comparador expresion ')' . '{' bloque_ejecucion return '}' ELSE '{' bloque_ejecucion return ',' '}'  (49)
	sentenciaIfRetorno : IF '(' expresion comparador expresion ')' . '{' bloque_ejecucion return '}' END_IF  (50)
	sentenciaIfRetorno : IF '(' expresion comparador expresion ')' . '{' bloque_ejecucion return '}'  (51)
	sentenciaIfRetorno : IF '(' expresion comparador expresion ')' . return ',' ELSE sentenciaEjecutable ',' END_IF  (52)
	sentenciaIfRetorno : IF '(' expresion comparador expresion ')' . return ',' ELSE '{' bloque_ejecucion return ',' '}' END_IF  (53)
	sentenciaIfRetorno : IF '(' expresion comparador expresion ')' . return ',' END_IF  (54)

	ID  shift 53
	CADENA  shift 2
	IF  shift 4
	PRINT  shift 5
	WHILE  shift 10
	RETURN  shift 152
	'{'  shift 209
	.  error

	sentenciaEjecutable  goto 145
	referenciaClase  goto 18
	asignacion  goto 19
	invocacionMetodo  goto 20
	sentenciaIf  goto 22
	sentenciaWhile  goto 23
	print  goto 24
	return  goto 210


state 205
	declaracionMetodo : VOID ID '(' tipo ID ')' '{' cuerpoMetodo '}' .  (65)

	.  reduce 65


state 206
	sentenciaIf : IF '(' expresion comparador expresion ')' '{' bloque_ejecucion '}' ELSE '{' bloque_ejecucion . '}' END_IF  (41)
	sentenciaIf : IF '(' expresion comparador expresion ')' '{' bloque_ejecucion '}' ELSE '{' bloque_ejecucion . '}'  (42)
	bloque_ejecucion : bloque_ejecucion . sentenciaEjecutable ','  (55)

	ID  shift 53
	CADENA  shift 2
	IF  shift 4
	PRINT  shift 5
	WHILE  shift 10
	'}'  shift 211
	.  error

	sentenciaEjecutable  goto 184
	referenciaClase  goto 18
	asignacion  goto 19
	invocacionMetodo  goto 20
	sentenciaIf  goto 22
	sentenciaWhile  goto 23
	print  goto 24


state 207
	sentenciaIf : IF '(' expresion comparador expresion ')' sentenciaEjecutable ',' ELSE '{' bloque_ejecucion '}' . END_IF  (46)

	END_IF  shift 212
	.  error


state 208
	sentenciaIf : IF '(' expresion comparador expresion ')' sentenciaEjecutable ',' ELSE sentenciaEjecutable ',' END_IF .  (45)

	.  reduce 45


state 209
	sentenciaIf : IF '(' expresion comparador expresion ')' '{' . bloque_ejecucion '}' ELSE '{' bloque_ejecucion '}' END_IF  (41)
	sentenciaIf : IF '(' expresion comparador expresion ')' '{' . bloque_ejecucion '}' ELSE '{' bloque_ejecucion '}'  (42)
	sentenciaIf : IF '(' expresion comparador expresion ')' '{' . bloque_ejecucion '}' END_IF  (43)
	sentenciaIf : IF '(' expresion comparador expresion ')' '{' . bloque_ejecucion '}'  (44)
	sentenciaIfRetorno : IF '(' expresion comparador expresion ')' '{' . bloque_ejecucion return '}' ELSE '{' bloque_ejecucion return ',' '}' END_IF  (48)
	sentenciaIfRetorno : IF '(' expresion comparador expresion ')' '{' . bloque_ejecucion return '}' ELSE '{' bloque_ejecucion return ',' '}'  (49)
	sentenciaIfRetorno : IF '(' expresion comparador expresion ')' '{' . bloque_ejecucion return '}' END_IF  (50)
	sentenciaIfRetorno : IF '(' expresion comparador expresion ')' '{' . bloque_ejecucion return '}'  (51)

	ID  shift 1
	CADENA  shift 2
	CLASS  shift 3
	IF  shift 4
	PRINT  shift 5
	VOID  shift 6
	SHORT  shift 7
	ULONG  shift 8
	FLOAT  shift 9
	WHILE  shift 10
	.  error

	sentenciaDeclarativa  goto 165
	sentenciaEjecutable  goto 166
	declaracionClase  goto 17
	referenciaClase  goto 18
	asignacion  goto 19
	invocacionMetodo  goto 20
	tipo  goto 21
	sentenciaIf  goto 22
	sentenciaWhile  goto 23
	print  goto 24
	declaracionFuncion  goto 25
	declaracion  goto 26
	bloque_ejecucion  goto 213


state 210
	sentenciaIfRetorno : IF '(' expresion comparador expresion ')' return . ',' ELSE sentenciaEjecutable ',' END_IF  (52)
	sentenciaIfRetorno : IF '(' expresion comparador expresion ')' return . ',' ELSE '{' bloque_ejecucion return ',' '}' END_IF  (53)
	sentenciaIfRetorno : IF '(' expresion comparador expresion ')' return . ',' END_IF  (54)

	','  shift 214
	.  error


state 211
	sentenciaIf : IF '(' expresion comparador expresion ')' '{' bloque_ejecucion '}' ELSE '{' bloque_ejecucion '}' . END_IF  (41)
	sentenciaIf : IF '(' expresion comparador expresion ')' '{' bloque_ejecucion '}' ELSE '{' bloque_ejecucion '}' .  (42)

	END_IF  shift 215
	','  reduce 42


state 212
	sentenciaIf : IF '(' expresion comparador expresion ')' sentenciaEjecutable ',' ELSE '{' bloque_ejecucion '}' END_IF .  (46)

	.  reduce 46


state 213
	sentenciaIf : IF '(' expresion comparador expresion ')' '{' bloque_ejecucion . '}' ELSE '{' bloque_ejecucion '}' END_IF  (41)
	sentenciaIf : IF '(' expresion comparador expresion ')' '{' bloque_ejecucion . '}' ELSE '{' bloque_ejecucion '}'  (42)
	sentenciaIf : IF '(' expresion comparador expresion ')' '{' bloque_ejecucion . '}' END_IF  (43)
	sentenciaIf : IF '(' expresion comparador expresion ')' '{' bloque_ejecucion . '}'  (44)
	sentenciaIfRetorno : IF '(' expresion comparador expresion ')' '{' bloque_ejecucion . return '}' ELSE '{' bloque_ejecucion return ',' '}' END_IF  (48)
	sentenciaIfRetorno : IF '(' expresion comparador expresion ')' '{' bloque_ejecucion . return '}' ELSE '{' bloque_ejecucion return ',' '}'  (49)
	sentenciaIfRetorno : IF '(' expresion comparador expresion ')' '{' bloque_ejecucion . return '}' END_IF  (50)
	sentenciaIfRetorno : IF '(' expresion comparador expresion ')' '{' bloque_ejecucion . return '}'  (51)
	bloque_ejecucion : bloque_ejecucion . sentenciaEjecutable ','  (55)

	ID  shift 53
	CADENA  shift 2
	IF  shift 4
	PRINT  shift 5
	WHILE  shift 10
	RETURN  shift 152
	'}'  shift 183
	.  error

	sentenciaEjecutable  goto 184
	referenciaClase  goto 18
	asignacion  goto 19
	invocacionMetodo  goto 20
	sentenciaIf  goto 22
	sentenciaWhile  goto 23
	print  goto 24
	return  goto 216


state 214
	sentenciaIfRetorno : IF '(' expresion comparador expresion ')' return ',' . ELSE sentenciaEjecutable ',' END_IF  (52)
	sentenciaIfRetorno : IF '(' expresion comparador expresion ')' return ',' . ELSE '{' bloque_ejecucion return ',' '}' END_IF  (53)
	sentenciaIfRetorno : IF '(' expresion comparador expresion ')' return ',' . END_IF  (54)

	ELSE  shift 217
	END_IF  shift 218
	.  error


state 215
	sentenciaIf : IF '(' expresion comparador expresion ')' '{' bloque_ejecucion '}' ELSE '{' bloque_ejecucion '}' END_IF .  (41)

	.  reduce 41


state 216
	sentenciaIfRetorno : IF '(' expresion comparador expresion ')' '{' bloque_ejecucion return . '}' ELSE '{' bloque_ejecucion return ',' '}' END_IF  (48)
	sentenciaIfRetorno : IF '(' expresion comparador expresion ')' '{' bloque_ejecucion return . '}' ELSE '{' bloque_ejecucion return ',' '}'  (49)
	sentenciaIfRetorno : IF '(' expresion comparador expresion ')' '{' bloque_ejecucion return . '}' END_IF  (50)
	sentenciaIfRetorno : IF '(' expresion comparador expresion ')' '{' bloque_ejecucion return . '}'  (51)

	'}'  shift 219
	.  error


state 217
	sentenciaIfRetorno : IF '(' expresion comparador expresion ')' return ',' ELSE . sentenciaEjecutable ',' END_IF  (52)
	sentenciaIfRetorno : IF '(' expresion comparador expresion ')' return ',' ELSE . '{' bloque_ejecucion return ',' '}' END_IF  (53)

	ID  shift 53
	CADENA  shift 2
	IF  shift 4
	PRINT  shift 5
	WHILE  shift 10
	'{'  shift 220
	.  error

	sentenciaEjecutable  goto 221
	referenciaClase  goto 18
	asignacion  goto 19
	invocacionMetodo  goto 20
	sentenciaIf  goto 22
	sentenciaWhile  goto 23
	print  goto 24


state 218
	sentenciaIfRetorno : IF '(' expresion comparador expresion ')' return ',' END_IF .  (54)

	.  reduce 54


state 219
	sentenciaIfRetorno : IF '(' expresion comparador expresion ')' '{' bloque_ejecucion return '}' . ELSE '{' bloque_ejecucion return ',' '}' END_IF  (48)
	sentenciaIfRetorno : IF '(' expresion comparador expresion ')' '{' bloque_ejecucion return '}' . ELSE '{' bloque_ejecucion return ',' '}'  (49)
	sentenciaIfRetorno : IF '(' expresion comparador expresion ')' '{' bloque_ejecucion return '}' . END_IF  (50)
	sentenciaIfRetorno : IF '(' expresion comparador expresion ')' '{' bloque_ejecucion return '}' .  (51)

	ELSE  shift 222
	END_IF  shift 223
	','  reduce 51


state 220
	sentenciaIfRetorno : IF '(' expresion comparador expresion ')' return ',' ELSE '{' . bloque_ejecucion return ',' '}' END_IF  (53)

	ID  shift 1
	CADENA  shift 2
	CLASS  shift 3
	IF  shift 4
	PRINT  shift 5
	VOID  shift 6
	SHORT  shift 7
	ULONG  shift 8
	FLOAT  shift 9
	WHILE  shift 10
	.  error

	sentenciaDeclarativa  goto 165
	sentenciaEjecutable  goto 166
	declaracionClase  goto 17
	referenciaClase  goto 18
	asignacion  goto 19
	invocacionMetodo  goto 20
	tipo  goto 21
	sentenciaIf  goto 22
	sentenciaWhile  goto 23
	print  goto 24
	declaracionFuncion  goto 25
	declaracion  goto 26
	bloque_ejecucion  goto 224


state 221
	sentenciaIfRetorno : IF '(' expresion comparador expresion ')' return ',' ELSE sentenciaEjecutable . ',' END_IF  (52)

	','  shift 225
	.  error


state 222
	sentenciaIfRetorno : IF '(' expresion comparador expresion ')' '{' bloque_ejecucion return '}' ELSE . '{' bloque_ejecucion return ',' '}' END_IF  (48)
	sentenciaIfRetorno : IF '(' expresion comparador expresion ')' '{' bloque_ejecucion return '}' ELSE . '{' bloque_ejecucion return ',' '}'  (49)

	'{'  shift 226
	.  error


state 223
	sentenciaIfRetorno : IF '(' expresion comparador expresion ')' '{' bloque_ejecucion return '}' END_IF .  (50)

	.  reduce 50


state 224
	sentenciaIfRetorno : IF '(' expresion comparador expresion ')' return ',' ELSE '{' bloque_ejecucion . return ',' '}' END_IF  (53)
	bloque_ejecucion : bloque_ejecucion . sentenciaEjecutable ','  (55)

	ID  shift 53
	CADENA  shift 2
	IF  shift 4
	PRINT  shift 5
	WHILE  shift 10
	RETURN  shift 152
	.  error

	sentenciaEjecutable  goto 184
	referenciaClase  goto 18
	asignacion  goto 19
	invocacionMetodo  goto 20
	sentenciaIf  goto 22
	sentenciaWhile  goto 23
	print  goto 24
	return  goto 227


state 225
	sentenciaIfRetorno : IF '(' expresion comparador expresion ')' return ',' ELSE sentenciaEjecutable ',' . END_IF  (52)

	END_IF  shift 228
	.  error


state 226
	sentenciaIfRetorno : IF '(' expresion comparador expresion ')' '{' bloque_ejecucion return '}' ELSE '{' . bloque_ejecucion return ',' '}' END_IF  (48)
	sentenciaIfRetorno : IF '(' expresion comparador expresion ')' '{' bloque_ejecucion return '}' ELSE '{' . bloque_ejecucion return ',' '}'  (49)

	ID  shift 1
	CADENA  shift 2
	CLASS  shift 3
	IF  shift 4
	PRINT  shift 5
	VOID  shift 6
	SHORT  shift 7
	ULONG  shift 8
	FLOAT  shift 9
	WHILE  shift 10
	.  error

	sentenciaDeclarativa  goto 165
	sentenciaEjecutable  goto 166
	declaracionClase  goto 17
	referenciaClase  goto 18
	asignacion  goto 19
	invocacionMetodo  goto 20
	tipo  goto 21
	sentenciaIf  goto 22
	sentenciaWhile  goto 23
	print  goto 24
	declaracionFuncion  goto 25
	declaracion  goto 26
	bloque_ejecucion  goto 229


state 227
	sentenciaIfRetorno : IF '(' expresion comparador expresion ')' return ',' ELSE '{' bloque_ejecucion return . ',' '}' END_IF  (53)

	','  shift 230
	.  error


state 228
	sentenciaIfRetorno : IF '(' expresion comparador expresion ')' return ',' ELSE sentenciaEjecutable ',' END_IF .  (52)

	.  reduce 52


state 229
	sentenciaIfRetorno : IF '(' expresion comparador expresion ')' '{' bloque_ejecucion return '}' ELSE '{' bloque_ejecucion . return ',' '}' END_IF  (48)
	sentenciaIfRetorno : IF '(' expresion comparador expresion ')' '{' bloque_ejecucion return '}' ELSE '{' bloque_ejecucion . return ',' '}'  (49)
	bloque_ejecucion : bloque_ejecucion . sentenciaEjecutable ','  (55)

	ID  shift 53
	CADENA  shift 2
	IF  shift 4
	PRINT  shift 5
	WHILE  shift 10
	RETURN  shift 152
	.  error

	sentenciaEjecutable  goto 184
	referenciaClase  goto 18
	asignacion  goto 19
	invocacionMetodo  goto 20
	sentenciaIf  goto 22
	sentenciaWhile  goto 23
	print  goto 24
	return  goto 231


state 230
	sentenciaIfRetorno : IF '(' expresion comparador expresion ')' return ',' ELSE '{' bloque_ejecucion return ',' . '}' END_IF  (53)

	'}'  shift 232
	.  error


state 231
	sentenciaIfRetorno : IF '(' expresion comparador expresion ')' '{' bloque_ejecucion return '}' ELSE '{' bloque_ejecucion return . ',' '}' END_IF  (48)
	sentenciaIfRetorno : IF '(' expresion comparador expresion ')' '{' bloque_ejecucion return '}' ELSE '{' bloque_ejecucion return . ',' '}'  (49)

	','  shift 233
	.  error


state 232
	sentenciaIfRetorno : IF '(' expresion comparador expresion ')' return ',' ELSE '{' bloque_ejecucion return ',' '}' . END_IF  (53)

	END_IF  shift 234
	.  error


state 233
	sentenciaIfRetorno : IF '(' expresion comparador expresion ')' '{' bloque_ejecucion return '}' ELSE '{' bloque_ejecucion return ',' . '}' END_IF  (48)
	sentenciaIfRetorno : IF '(' expresion comparador expresion ')' '{' bloque_ejecucion return '}' ELSE '{' bloque_ejecucion return ',' . '}'  (49)

	'}'  shift 235
	.  error


state 234
	sentenciaIfRetorno : IF '(' expresion comparador expresion ')' return ',' ELSE '{' bloque_ejecucion return ',' '}' END_IF .  (53)

	.  reduce 53


state 235
	sentenciaIfRetorno : IF '(' expresion comparador expresion ')' '{' bloque_ejecucion return '}' ELSE '{' bloque_ejecucion return ',' '}' . END_IF  (48)
	sentenciaIfRetorno : IF '(' expresion comparador expresion ')' '{' bloque_ejecucion return '}' ELSE '{' bloque_ejecucion return ',' '}' .  (49)

	END_IF  shift 236
	','  reduce 49


state 236
	sentenciaIfRetorno : IF '(' expresion comparador expresion ')' '{' bloque_ejecucion return '}' ELSE '{' bloque_ejecucion return ',' '}' END_IF .  (48)

	.  reduce 48


36 terminals, 32 nonterminals
109 grammar rules, 237 states
